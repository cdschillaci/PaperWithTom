(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    346503,       6708]
NotebookOptionsPosition[    342970,       6597]
NotebookOutlinePosition[    343325,       6613]
CellTagsIndexPosition[    343282,       6610]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   StyleBox[
    RowBox[{"SixJSymbol", "::", "tri"}], "MessageName"], 
   StyleBox["]", "MessageName"]}], 
  StyleBox[";", "MessageName"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   StyleBox[
    RowBox[{"ThreeJSymbol", "::", "tri"}], "MessageName"], 
   StyleBox["]", "MessageName"]}], 
  StyleBox[";", "MessageName"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"Off", "[", 
    RowBox[{"ClebschGordan", "::", "tri"}], "]"}], "MessageName"], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"Off", "[", 
    RowBox[{"ClebschGordan", "::", "phy"}], "]"}], "MessageName"], 
  ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"$Assumptions", "=", 
    RowBox[{"\[Alpha]", "\[Element]", "Reals"}]}], ";"}], 
  "MessageName"]}], "Input",
 CellChangeTimes->{{3.6174735608876543`*^9, 3.6174735798759747`*^9}, 
   3.617473788732399*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "The", " ", "total", " ", "angular", " ", "momentum", " ", "quantum", " ",
      "number", " ", "is", " ", "conserved"}], ",", " ", 
    RowBox[{
    "so", " ", "we", " ", "solve", " ", "only", " ", "for", " ", "a", " ", 
     "specific", " ", "J0"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"J0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"The", " ", "full", " ", "two"}], "-", 
     RowBox[{
     "body", " ", "energy", " ", "cutoff", " ", "for", " ", "the", " ", 
      "basis"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EMax", "=", "25"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"=", 
     RowBox[{"NMax", "+", "3"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Easiest", " ", "to", " ", "set", " ", "a", " ", "value", " ", "of", " ", 
     "a", " ", "at", " ", "the", " ", "beginning", " ", "so", " ", "that", 
     " ", "the", " ", "matrix", " ", "elements", " ", "become", " ", 
     "numerical"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "This", " ", "is", " ", "needed", " ", "because", " ", "the", " ", 
     "eigensolver", " ", "finds", " ", "the", " ", "eigenvalues", " ", "with",
      " ", "the", " ", "smallest", " ", 
     RowBox[{"magnitude", ".", " ", "Choose"}], " ", "a", " ", "postive", " ",
      "number", " ", "at", " ", "least", " ", "the", " ", "size", " ", "of", 
     " ", "the", " ", "most", " ", "negative", " ", "eigenvalue", " ", 
     "expected"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EOffset", "=", "20"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6174735608876543`*^9, 3.6174735798759747`*^9}, {
   3.617473788732399*^9, 3.617473868814464*^9}, {3.617474468914481*^9, 
   3.61747448060224*^9}, 3.617477186835161*^9, 3.6174780731724777`*^9, 
   3.617478308938259*^9, {3.6174783549935513`*^9, 3.617478379645693*^9}, 
   3.617478639904784*^9, {3.617478767700391*^9, 3.6174787680851107`*^9}, {
   3.617478911042377*^9, 3.617478911418137*^9}, {3.6174796449975367`*^9, 
   3.617479659514942*^9}, 3.617479914008071*^9, {3.617479947902861*^9, 
   3.617480008594386*^9}, 3.6174800663455973`*^9, {3.617480109776497*^9, 
   3.617480120776079*^9}, {3.617480705212159*^9, 3.6174807571630363`*^9}, 
   3.617480787642149*^9, 3.617481047764805*^9, {3.6174816584009438`*^9, 
   3.617481658591261*^9}, 3.6174881357228813`*^9, {3.617488545369486*^9, 
   3.6174885457288*^9}, 3.617488616367874*^9, 3.617488703636506*^9, 
   3.617488867580267*^9, {3.617488969906015*^9, 3.617488970166952*^9}, 
   3.617489120787558*^9, 3.617489155318179*^9, 3.6174893585838623`*^9, {
   3.61748940128846*^9, 3.617489424174222*^9}, {3.6175492453412867`*^9, 
   3.617549255472681*^9}, {3.6175510633006163`*^9, 3.6175510700905323`*^9}, 
   3.6175521710044403`*^9, 3.617552648633812*^9, {3.617553458643446*^9, 
   3.617553459431781*^9}, {3.6175536734587717`*^9, 3.617553677618598*^9}, 
   3.617553983916153*^9, {3.617554238929674*^9, 3.617554240743634*^9}, 
   3.617554303446705*^9, {3.617554528361951*^9, 3.617554529272602*^9}, 
   3.6175551000607357`*^9, 3.617557907050935*^9, {3.617557987922168*^9, 
   3.617557998569482*^9}, 3.6175583236124067`*^9, {3.617558450786758*^9, 
   3.6175585022067127`*^9}, {3.617558544828945*^9, 3.617558545716956*^9}, 
   3.6175586488923693`*^9, {3.617558756146639*^9, 3.617558770065528*^9}, {
   3.617564418516727*^9, 3.617564424044154*^9}, 3.6175646751266613`*^9, {
   3.617564958586212*^9, 3.617564961257579*^9}, {3.61756513833386*^9, 
   3.617565140893366*^9}, 3.617565237245673*^9, 3.617565601859846*^9, {
   3.617590127601736*^9, 3.6175901448943787`*^9}, {3.6175911119862423`*^9, 
   3.617591116713265*^9}, {3.6176310770775213`*^9, 3.617631084207963*^9}, {
   3.617638908872772*^9, 3.617638909813444*^9}, {3.617639930891891*^9, 
   3.617639931095066*^9}, {3.6176400652055073`*^9, 3.6176400653081007`*^9}, 
   3.617641034608371*^9, {3.617641138340304*^9, 3.617641139861676*^9}, {
   3.617641386144505*^9, 3.617641389416274*^9}, {3.617980082185534*^9, 
   3.617980082282148*^9}, {3.617980218223865*^9, 3.617980245975205*^9}, {
   3.617983339716585*^9, 3.617983350586219*^9}, 3.6179833936661367`*^9, {
   3.618079362380557*^9, 3.618079362605317*^9}, 3.618080272260478*^9, {
   3.618081003494272*^9, 3.618081010666337*^9}, {3.6180845155502663`*^9, 
   3.6180845160549183`*^9}, {3.6180846101615667`*^9, 3.618084610709302*^9}, {
   3.618085035573846*^9, 3.618085036452612*^9}, {3.618085858287634*^9, 
   3.6180858595007668`*^9}, 3.618087457798512*^9, {3.618087955381216*^9, 
   3.618087955933557*^9}, 3.618088584077458*^9, 3.618088923893755*^9, 
   3.618088983593519*^9, {3.618089093741234*^9, 3.618089094181005*^9}, 
   3.6182363984153347`*^9, {3.6182364513525963`*^9, 3.618236451472446*^9}, {
   3.6182365796813173`*^9, 3.618236579855061*^9}, {3.618236630832646*^9, 
   3.618236630927149*^9}, {3.618236932419841*^9, 3.618236932575045*^9}, {
   3.619874320898093*^9, 3.619874321361455*^9}, {3.6198751194292927`*^9, 
   3.619875119852048*^9}, {3.619875374129176*^9, 3.6198753748403063`*^9}, {
   3.619875486001649*^9, 3.619875486240835*^9}, 3.619875661553576*^9, {
   3.61987649111418*^9, 3.619876491656822*^9}, {3.619898595738677*^9, 
   3.619898595906179*^9}, {3.6198998676838093`*^9, 3.619899868105509*^9}, 
   3.619901006063591*^9, {3.619901606402769*^9, 3.6199016093449306`*^9}, {
   3.619901690027548*^9, 3.6199016971705513`*^9}, {3.619902622368908*^9, 
   3.6199026238038473`*^9}, 3.619902781956807*^9, 3.619903112775269*^9, {
   3.619904053016405*^9, 3.619904053733374*^9}, 3.619904306230431*^9, 
   3.6222048227269287`*^9, {3.6222076762600193`*^9, 3.6222076764297247`*^9}, {
   3.6222088423159447`*^9, 3.622208842560364*^9}, 3.6222103104671917`*^9, {
   3.6222122561658087`*^9, 3.622212259993662*^9}, 3.6222138196892242`*^9, {
   3.622214003977029*^9, 3.622214004092704*^9}, {3.622215193234706*^9, 
   3.6222151950714493`*^9}, 3.6223031348607883`*^9, {3.6223033247866707`*^9, 
   3.622303341080377*^9}, 3.622307172262796*^9, {3.6223085847911787`*^9, 
   3.6223085937707777`*^9}, 3.622309750815345*^9, {3.6223099133962793`*^9, 
   3.622309913707786*^9}, 3.622310075360743*^9, {3.622310184102723*^9, 
   3.622310196654859*^9}, {3.622310295387048*^9, 3.6223102960527487`*^9}, 
   3.6223115011770983`*^9, {3.6223132981901207`*^9, 3.622313302053306*^9}, {
   3.622319517371272*^9, 3.6223195190637693`*^9}, {3.622322452486217*^9, 
   3.6223224527717447`*^9}, {3.624023922939867*^9, 3.6240239275231113`*^9}, 
   3.624024430676157*^9, {3.6240246063811274`*^9, 3.62402460677116*^9}, {
   3.624024746277626*^9, 3.624024746515656*^9}, {3.624025043213399*^9, 
   3.624025043412674*^9}, {3.624025377733439*^9, 3.624025378636531*^9}, {
   3.624025442883988*^9, 3.6240254430192003`*^9}, {3.624025652444935*^9, 
   3.6240256530279493`*^9}, {3.624025922461679*^9, 3.624025923116209*^9}, {
   3.624026056444672*^9, 3.624026056603148*^9}, {3.624026295142149*^9, 
   3.6240262961157703`*^9}, {3.6240265417495327`*^9, 3.624026545759761*^9}, {
   3.624026748915596*^9, 3.624026753882462*^9}, {3.624027898854479*^9, 
   3.624027903191147*^9}, {3.624028107677814*^9, 3.624028109980906*^9}, {
   3.624029160951962*^9, 3.624029161405491*^9}, {3.6240310591990013`*^9, 
   3.624031089693972*^9}, 3.624031164367475*^9, {3.624031382383464*^9, 
   3.6240313891098957`*^9}, {3.6240314575108957`*^9, 3.624031478852964*^9}, {
   3.624031510094718*^9, 3.624031511877367*^9}, {3.624031601406377*^9, 
   3.624031602320921*^9}, {3.624144971673703*^9, 3.6241449721373587`*^9}, 
   3.624145168151783*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Determine", " ", "the", " ", "two", " ", "body", " ", "l"}], "=", 
    RowBox[{
    "0", " ", "center", " ", "of", " ", "mass", " ", "eigenenergies", " ", 
     "in", " ", "the", " ", "absence", " ", "of", " ", "SOC", " ", "from", 
     " ", "Busch", " ", "formula"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"a", "!=", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Nu]Values", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"FindRoot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Sqrt", "[", "2", "]"}], 
             RowBox[{
              RowBox[{"Gamma", "[", 
               RowBox[{"-", "\[Nu]"}], "]"}], "/", 
              RowBox[{"Gamma", "[", 
               RowBox[{
                RowBox[{"-", "\[Nu]"}], "-", 
                RowBox[{"1", "/", "2"}]}], "]"}]}]}], "\[Equal]", 
            RowBox[{"1", "/", "a"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Nu]", ",", "\[Nu]Guess"}], "}"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "25"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Nu]Guess", ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"EMax", "/", "2"}], "-", ".75"}], ")"}], "+", ".25"}], 
           ",", 
           RowBox[{".05", "*", 
            RowBox[{"Sqrt", "[", "2", "]"}]}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Nu]Values", "=", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"\[Nu]Values", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"ReplaceAll", "[", 
              RowBox[{"\[Nu]", ",", "#1"}], "]"}], "-", 
             RowBox[{"ReplaceAll", "[", 
              RowBox[{"\[Nu]", ",", "#2"}], "]"}]}], "]"}], "<=", ".1"}], 
          "&"}]}], "]"}]}], ";"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Nu]Values", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Nu]", "->", "i"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", 
           RowBox[{"EMax", "-", "3"}]}], "}"}]}], "]"}]}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Handle", " ", "a"}], "=", 
        RowBox[{"0", " ", "case"}]}], " ", "*)"}], ";"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EValues", "=", 
     RowBox[{"Sort", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"2", "\[Nu]"}], "+", 
        RowBox[{"3", "/", "2"}]}], "/.", "\[Nu]Values"}], "]"}]}], " ", ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"List", " ", "of", " ", "l"}], "=", 
     RowBox[{
     "0", " ", "energies", " ", "under", " ", "the", " ", "cutoff"}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Nu]Values", "=", 
     RowBox[{"Sort", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"\[Nu]", "/.", "\[Nu]Values"}], "]"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6174735608876543`*^9, 3.6174735938268003`*^9}, {
   3.61747363114935*^9, 3.6174738160162497`*^9}, {3.6174738767971067`*^9, 
   3.61747393340617*^9}, {3.6174739673149977`*^9, 3.6174739700120897`*^9}, {
   3.617474027837875*^9, 3.617474133113673*^9}, {3.617474166953216*^9, 
   3.617474424370574*^9}, {3.617474494753295*^9, 3.6174745067132893`*^9}, {
   3.617477672942997*^9, 3.617477699033514*^9}, {3.617477777822707*^9, 
   3.617477882884203*^9}, {3.617479692473835*^9, 3.617479692672051*^9}, {
   3.617480020652831*^9, 3.617480028956263*^9}, {3.617481597674041*^9, 
   3.617481625384803*^9}, {3.617553478210182*^9, 3.61755361160653*^9}, {
   3.617553645725791*^9, 3.61755373531229*^9}, 3.6182356277686577`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "List", " ", "of", " ", "Busch", " ", "quantum", " ", "numbers", " ", 
    "under", " ", "the", " ", "energy", " ", "cutoff"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[Nu]Values"}]], "Input",
 CellChangeTimes->{{3.6174735608876543`*^9, 3.6174735938268003`*^9}, {
  3.61747363114935*^9, 3.6174738160162497`*^9}, {3.6174738767971067`*^9, 
  3.61747393340617*^9}, {3.6174739673149977`*^9, 3.6174739700120897`*^9}, {
  3.617474027837875*^9, 3.617474133113673*^9}, {3.617474166953216*^9, 
  3.617474424370574*^9}, {3.617474494753295*^9, 3.6174745067132893`*^9}, {
  3.617477672942997*^9, 3.617477699033514*^9}, {3.617477777822707*^9, 
  3.617477896625496*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.1996432225271036`"}], ",", "0.31030659811136063`", ",", 
   "1.3561087392497708`", ",", "2.379125762103537`", ",", 
   "3.3936683995384467`", ",", "4.403940563504879`", ",", 
   "5.411699667068278`", ",", "6.417830635015336`", ",", "7.422834846633476`",
    ",", "8.427020730644168`", ",", "9.430589942768888`", ",", 
   "10.433680685431497`", ",", "11.436391296809763`"}], "}"}]], "Output",
 CellChangeTimes->{{3.6174799304480867`*^9, 3.617480035469655*^9}, 
   3.617480074748199*^9, {3.6174801122534103`*^9, 3.6174801227766333`*^9}, {
   3.617480712532153*^9, 3.617480730045245*^9}, 3.617480760766925*^9, 
   3.617480793446773*^9, {3.617481050393766*^9, 3.617481073471023*^9}, 
   3.617481662136196*^9, 3.617487891977558*^9, 3.617488138457316*^9, 
   3.617488448388379*^9, {3.617488533216998*^9, 3.617488549488714*^9}, {
   3.617488606900009*^9, 3.617488623369626*^9}, 3.6174887061322317`*^9, 
   3.617488869614938*^9, 3.617488989839416*^9, {3.61748913692384*^9, 
   3.617489159459106*^9}, 3.617489362463024*^9, {3.617489404329837*^9, 
   3.617489427562282*^9}, 3.617549080217683*^9, 3.617549260799301*^9, 
   3.6175496421208963`*^9, 3.617549942935507*^9, 3.617549989503549*^9, 
   3.617550377402288*^9, {3.6175508084319553`*^9, 3.617550813405601*^9}, 
   3.6175510069022627`*^9, 3.617551067556863*^9, 3.6175515306874037`*^9, {
   3.617552174917548*^9, 3.61755220301274*^9}, 3.6175534646072283`*^9, 
   3.6175537273308764`*^9, 3.6175539894551773`*^9, {3.617554245812068*^9, 
   3.617554304948041*^9}, 3.6175545327228947`*^9, {3.617555079717317*^9, 
   3.617555103758802*^9}, 3.617557910000698*^9, 3.617558003197981*^9, 
   3.61755832753482*^9, 3.617558534713502*^9, {3.617558644325074*^9, 
   3.617558650638299*^9}, {3.6175587588452806`*^9, 3.617558772263234*^9}, 
   3.617564484403143*^9, 3.6175646783858757`*^9, 3.617565192271858*^9, 
   3.6175652482435217`*^9, 3.6175656048700123`*^9, {3.617590133739757*^9, 
   3.617590147090151*^9}, 3.6175911578720493`*^9, 3.617591255390812*^9, 
   3.617631087865776*^9, 3.617631522973989*^9, 3.617639416905562*^9, 
   3.617639592041959*^9, 3.61763993347303*^9, 3.6176400683191967`*^9, 
   3.617641044127469*^9, 3.617641143236896*^9, 3.6176413929255*^9, 
   3.617691152310402*^9, 3.617980097792487*^9, {3.6179802244509153`*^9, 
   3.6179802489691563`*^9}, 3.6179833627961407`*^9, 3.6179833971575336`*^9, 
   3.618076765851543*^9, 3.618076984106419*^9, 3.618079365411581*^9, 
   3.618079784944846*^9, {3.618080274341585*^9, 3.618080293119025*^9}, 
   3.618080509911021*^9, 3.618081012879272*^9, {3.618082487841775*^9, 
   3.618082497145939*^9}, 3.618082664770495*^9, 3.618084518842619*^9, 
   3.618084613821376*^9, 3.618084665908243*^9, 3.618084807113106*^9, {
   3.6180848677260103`*^9, 3.6180848771791*^9}, 3.6180850393558617`*^9, 
   3.618085862051635*^9, 3.618085922935133*^9, 3.618086499174477*^9, 
   3.618086759931459*^9, 3.6180868869336233`*^9, 3.61808697696999*^9, 
   3.618087067471117*^9, 3.6180873695266933`*^9, {3.618087460296286*^9, 
   3.618087471870809*^9}, 3.618087593896338*^9, 3.618087793337044*^9, 
   3.618087835029722*^9, {3.6180878735031643`*^9, 3.6180879226921883`*^9}, 
   3.618087960090962*^9, 3.618088382207855*^9, 3.618088432196144*^9, 
   3.618088586930058*^9, 3.61808892995126*^9, {3.618088961298195*^9, 
   3.618088987043313*^9}, 3.61808910260968*^9, 3.618236400984075*^9, 
   3.618236454279755*^9, 3.6182365037467012`*^9, 3.6182365820002213`*^9, 
   3.6182366334653893`*^9, 3.618236936922628*^9, 3.619873781459969*^9, 
   3.619874323943708*^9, 3.6198751246707773`*^9, 3.61987537911858*^9, 
   3.619875489779675*^9, 3.619875663940834*^9, 3.619876494874256*^9, 
   3.619898599028027*^9, 3.619899871116784*^9, 3.619899929118867*^9, 
   3.619900516993188*^9, 3.6199009152826557`*^9, {3.619901009103691*^9, 
   3.6199010246296387`*^9}, 3.619901083654708*^9, 3.619901212657538*^9, 
   3.619901525302925*^9, 3.619901613258947*^9, 3.619901704283298*^9, 
   3.6199020622913847`*^9, 3.619902625459557*^9, 3.619902784224504*^9, 
   3.6199028661136713`*^9, 3.619903028390018*^9, 3.61990311523062*^9, 
   3.6199032459709263`*^9, 3.619904058399128*^9, 3.619904308221717*^9, 
   3.621971048564839*^9, {3.622204821678293*^9, 3.6222048348295403`*^9}, 
   3.622205945877524*^9, {3.622206032334494*^9, 3.6222060544673443`*^9}, 
   3.622207656094925*^9, 3.622207687241118*^9, 3.622207997497686*^9, 
   3.6222085800101967`*^9, {3.622208852770898*^9, 3.6222088677036457`*^9}, 
   3.622210313747422*^9, 3.622210688532321*^9, 3.6222123273431883`*^9, 
   3.6222125181604357`*^9, 3.622213822015827*^9, 3.622214006542615*^9, 
   3.62221452535891*^9, 3.622215058381863*^9, 3.622215199464929*^9, 
   3.622303346374205*^9, 3.622303980675702*^9, 3.6223071742665873`*^9, 
   3.622307213950698*^9, 3.622307893153985*^9, 3.622308249855884*^9, 
   3.622308598563509*^9, 3.622309400970299*^9, 3.622309753629904*^9, 
   3.622309916354957*^9, {3.622310175819874*^9, 3.622310198890911*^9}, 
   3.6223102988703003`*^9, {3.622311497148366*^9, 3.622311505577353*^9}, 
   3.622313306875576*^9, 3.6223195353251333`*^9, 3.622322456131508*^9, 
   3.624023977254656*^9, 3.6240244327389317`*^9, 3.624024609646048*^9, 
   3.624024749243309*^9, 3.6240250469948378`*^9, 3.6240253821548862`*^9, 
   3.624025658433218*^9, 3.624025925346216*^9, 3.624026058920657*^9, 
   3.6240262986869164`*^9, 3.6240265491320066`*^9, 3.624026756395248*^9, 
   3.624027919345352*^9, 3.62402811283008*^9, 3.624029164489449*^9, {
   3.624031069810316*^9, 3.6240310920162563`*^9}, 3.6240311662752934`*^9, 
   3.624031394080098*^9, {3.624031484698555*^9, 3.624031514442319*^9}, 
   3.6240316046005497`*^9, 3.624144996929653*^9, 3.624145139832165*^9, 
   3.624145177126417*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"List", " ", "of", " ", "Busch", " ", "2"}], "-", 
    RowBox[{
    "body", " ", "Relative", " ", "Energies", " ", "below", " ", "the", " ", 
     "cutoff"}]}], " ", "*)"}], "\[IndentingNewLine]", "EValues"}]], "Input",
 CellChangeTimes->{{3.6174735608876543`*^9, 3.6174735938268003`*^9}, {
  3.61747363114935*^9, 3.6174738160162497`*^9}, {3.6174738767971067`*^9, 
  3.61747393340617*^9}, {3.6174739673149977`*^9, 3.6174739700120897`*^9}, {
  3.617474027837875*^9, 3.617474133113673*^9}, {3.617474166953216*^9, 
  3.617474424370574*^9}, {3.617474494753295*^9, 3.6174745067132893`*^9}, {
  3.617477672942997*^9, 3.617477699033514*^9}, {3.617477777822707*^9, 
  3.617477920642384*^9}, {3.622307434738379*^9, 3.622307442725483*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.8992864450542073`"}], ",", "2.1206131962227213`", ",", 
   "4.212217478499541`", ",", "6.258251524207074`", ",", "8.287336799076893`",
    ",", "10.307881127009757`", ",", "12.323399334136557`", ",", 
   "14.335661270030672`", ",", "16.345669693266952`", ",", 
   "18.354041461288336`", ",", "20.361179885537776`", ",", 
   "22.367361370862994`", ",", "24.372782593619526`"}], "}"}]], "Output",
 CellChangeTimes->{{3.617477792964987*^9, 3.617477925765224*^9}, 
   3.617478077335096*^9, 3.6174783175258503`*^9, 3.6174783861641903`*^9, 
   3.617478642919158*^9, 3.617478770891721*^9, 3.6174789160860567`*^9, {
   3.6174799304967747`*^9, 3.6174800355193367`*^9}, 3.6174800747978153`*^9, {
   3.617480112295927*^9, 3.61748012282612*^9}, {3.617480712570578*^9, 
   3.617480730078553*^9}, 3.617480760816523*^9, 3.6174807934870234`*^9, {
   3.617481050439139*^9, 3.617481073525715*^9}, 3.617481632137252*^9, 
   3.6174816621886473`*^9, 3.6174878920623837`*^9, 3.617488138505707*^9, 
   3.617488448438531*^9, {3.617488533296823*^9, 3.617488549538642*^9}, {
   3.6174886069472*^9, 3.6174886234199677`*^9}, 3.617488706176484*^9, 
   3.617488869654725*^9, 3.6174889898888607`*^9, {3.617489136978651*^9, 
   3.61748915954178*^9}, 3.617489362511417*^9, {3.61748940437859*^9, 
   3.6174894276182833`*^9}, 3.6175490802715187`*^9, 3.617549260847877*^9, 
   3.61754964217054*^9, 3.617549942976224*^9, 3.617549989553727*^9, 
   3.617550377456437*^9, {3.6175508084874573`*^9, 3.6175508134579782`*^9}, 
   3.617551006942086*^9, 3.6175510676068583`*^9, 3.617551530713756*^9, {
   3.617552174969996*^9, 3.617552203062931*^9}, 3.617553464742796*^9, 
   3.6175537273808527`*^9, 3.617553989535286*^9, {3.617554245836925*^9, 
   3.6175543056542473`*^9}, 3.617554532773766*^9, {3.6175550797642107`*^9, 
   3.617555103808096*^9}, 3.617557910045122*^9, 3.617558003248123*^9, 
   3.617558327561154*^9, 3.6175585347626867`*^9, {3.617558644355857*^9, 
   3.617558650687746*^9}, {3.61755875887195*^9, 3.617558772288772*^9}, 
   3.617564484451459*^9, 3.617564678432047*^9, 3.617565192318609*^9, 
   3.617565248292285*^9, 3.6175656049246397`*^9, {3.617590133800806*^9, 
   3.617590147139513*^9}, 3.617591157918284*^9, 3.617591255440377*^9, 
   3.617631523026804*^9, 3.6176394169325314`*^9, 3.617639592091208*^9, 
   3.617639933515271*^9, 3.617640068369089*^9, 3.617641044190091*^9, 
   3.617641143286112*^9, 3.617641392969514*^9, 3.617691152383872*^9, 
   3.6179800978529177`*^9, {3.617980224507635*^9, 3.6179802490129147`*^9}, 
   3.6179833628268347`*^9, 3.6179833972165823`*^9, 3.6180767659100924`*^9, 
   3.618076984203978*^9, 3.61807936544726*^9, 3.618079784992565*^9, {
   3.618080274377684*^9, 3.61808029315506*^9}, 3.618080509951365*^9, 
   3.6180810129125967`*^9, {3.61808248788913*^9, 3.6180824971959877`*^9}, 
   3.618082664853776*^9, 3.618084518883594*^9, 3.618084613849915*^9, 
   3.618084665975143*^9, 3.6180848071564903`*^9, {3.618084867827471*^9, 
   3.61808487722233*^9}, 3.6180850394002237`*^9, 3.618085862087336*^9, 
   3.618085922987862*^9, 3.618086500087839*^9, 3.618086760531898*^9, 
   3.618086886982705*^9, 3.6180869770018253`*^9, 3.61808706750871*^9, 
   3.6180873695716267`*^9, {3.6180874603325367`*^9, 3.618087471936432*^9}, 
   3.6180875939327497`*^9, 3.6180877933776007`*^9, 3.6180878350867434`*^9, {
   3.618087873553358*^9, 3.618087922727569*^9}, 3.6180879601357393`*^9, 
   3.618088382253024*^9, 3.618088432249139*^9, 3.618088586962879*^9, 
   3.618088929983562*^9, {3.618088961348703*^9, 3.618088987078165*^9}, 
   3.618089102641275*^9, 3.61823640101822*^9, 3.618236454322812*^9, 
   3.61823650379852*^9, 3.618236582032834*^9, 3.618236633496793*^9, 
   3.6182369369679623`*^9, 3.6198737814919453`*^9, 3.6198743239748077`*^9, 
   3.619875124707357*^9, 3.6198753791478252`*^9, 3.619875489821472*^9, 
   3.619875663971994*^9, 3.619876494901823*^9, 3.6198985990896187`*^9, 
   3.619899871146611*^9, 3.619899929147843*^9, 3.6199005170245333`*^9, 
   3.619900915322427*^9, {3.619901009139132*^9, 3.619901024635189*^9}, 
   3.619901083691393*^9, 3.619901212682075*^9, 3.619901525346686*^9, 
   3.619901613296692*^9, 3.619901704316456*^9, 3.619902062336336*^9, 
   3.619902625501424*^9, 3.619902784254986*^9, 3.61990286615187*^9, 
   3.619903028425769*^9, 3.619903115263054*^9, 3.619903246003489*^9, 
   3.619904058437731*^9, 3.619904308268495*^9, 3.621971048597227*^9, {
   3.622204822277602*^9, 3.622204834882421*^9}, 3.622205945933996*^9, {
   3.622206032366898*^9, 3.6222060545078793`*^9}, 3.622207656142324*^9, 
   3.6222076872920227`*^9, 3.622207997567225*^9, 3.6222085801056137`*^9, {
   3.622208852802106*^9, 3.622208867758071*^9}, 3.6222103137762003`*^9, 
   3.622210688598074*^9, 3.6222123274387712`*^9, 3.6222125182002983`*^9, 
   3.6222138220617027`*^9, 3.622214006579639*^9, 3.622214525387536*^9, 
   3.622215058434729*^9, 3.622215199513476*^9, 3.622303346420286*^9, 
   3.622303980731464*^9, 3.622307174322343*^9, 3.622307214007959*^9, 
   3.622307893207444*^9, 3.622308249885779*^9, 3.622308598610386*^9, 
   3.62230940099865*^9, 3.622309753657732*^9, 3.6223099163957148`*^9, {
   3.622310175875537*^9, 3.622310198942997*^9}, 3.622310298955968*^9, {
   3.6223114971792173`*^9, 3.622311505625263*^9}, 3.6223133069036703`*^9, 
   3.622319535371773*^9, 3.622322456176466*^9, 3.624023977360367*^9, 
   3.624024432792379*^9, 3.624024609689879*^9, 3.624024749285057*^9, 
   3.624025047033773*^9, 3.624025382188089*^9, 3.624025658477044*^9, 
   3.6240259253798323`*^9, 3.624026058953618*^9, 3.624026298734668*^9, 
   3.624026549162374*^9, 3.6240267564360943`*^9, 3.624027919397091*^9, 
   3.624028112864316*^9, 3.624029164530449*^9, {3.624031077682023*^9, 
   3.624031093020072*^9}, 3.6241449969964657`*^9, 3.624145139892668*^9, 
   3.624145177179966*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Indexing", " ", "of", " ", "states"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "ni", ",", "li", ",", "Ni", ",", "Li", ",", "si", ",", "ji", ",", "Ji"}],
      "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imax", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"verbose", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"EValues", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", 
       RowBox[{"3", "/", "2"}]}], ",", 
      RowBox[{"\[Delta]EMax", "=", 
       RowBox[{
        RowBox[{"EValues", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "-", 
        RowBox[{"3", "/", "2"}]}]}], ",", 
      RowBox[{"\[Delta]EMax", "=", "0"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Function", " ", "to", " ", "print", " ", "quantum", " ", "numbers", " ", 
     "of", " ", "state", " ", "i", " ", "if", " ", "needed"}], " ", "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PrintState", "[", "i_", "]"}], ":=", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<|\>\"", ",", "i", ",", "\"\<>=|\>\"", ",", 
       RowBox[{"ni", "[", "i", "]"}], ",", "\"\<(\>\"", ",", 
       RowBox[{"li", "[", "i", "]"}], ",", 
       RowBox[{"si", "[", "i", "]"}], ",", "\"\<)\>\"", ",", 
       RowBox[{"ji", "[", "i", "]"}], ",", "\"\<;\>\"", ",", 
       RowBox[{"Ni", "[", "i", "]"}], ",", 
       RowBox[{"Li", "[", "i", "]"}], ",", "\"\<;(\>\"", ",", 
       RowBox[{"ji", "[", "i", "]"}], ",", 
       RowBox[{"Li", "[", "i", "]"}], ",", "\"\<)\>\"", ",", 
       RowBox[{"Ji", "[", "i", "]"}], ",", "\"\<>\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"EShell", "=", "3"}], ",", 
     RowBox[{"EShell", "\[LessEqual]", "EMax"}], ",", 
     RowBox[{"++", "EShell"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"N0", "=", "0"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"2", " ", "N0"}], "+", "3", "+", "\[Delta]EMax"}], 
         "\[LessEqual]", "EShell"}], ",", 
        RowBox[{"++", "N0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"L", "=", "0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"2", " ", "N0"}], "+", "L", "+", "3", "+", 
            "\[Delta]EMax"}], "\[LessEqual]", "EShell"}], ",", 
          RowBox[{"++", "L"}], ",", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"s", "=", "0"}], ",", 
            RowBox[{"s", "\[LessEqual]", "1"}], ",", 
            RowBox[{"++", "s"}], ",", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{"J0", "-", "L"}], ",", "0"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"j", "-", "L"}], "\[LessEqual]", "J0"}], ",", 
              RowBox[{"++", "j"}], ",", "\[IndentingNewLine]", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"l", "=", "0"}], ",", 
                RowBox[{"l", "<=", 
                 RowBox[{"Max", "[", 
                  RowBox[{
                   RowBox[{"EShell", "-", 
                    RowBox[{"2", "N0"}], "-", "L", "-", 
                    RowBox[{"3", "/", "2"}], "-", 
                    RowBox[{"EValues", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                   RowBox[{"EShell", "-", 
                    RowBox[{"2", "N0"}], "-", "L", "-", "3"}]}], "]"}]}], ",", 
                RowBox[{"++", "l"}], ",", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"l", "\[Equal]", "0"}], "&&", 
                   RowBox[{"s", "\[Equal]", "0"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"For", "[", 
                   RowBox[{
                    RowBox[{"ii", "=", "1"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"2", "N0"}], "+", "L", "+", 
                    RowBox[{"3", "/", "2"}], "+", 
                    RowBox[{"EValues", "[", 
                    RowBox[{"[", "ii", "]"}], "]"}]}], "\[LessEqual]", 
                    "EShell"}], "&&", 
                    RowBox[{"ii", "\[LessEqual]", 
                    RowBox[{"Length", "[", "EValues", "]"}]}]}], ",", 
                    RowBox[{"++", "ii"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"EShell", "-", "1"}], "<", 
                    RowBox[{
                    RowBox[{"2", "N0"}], "+", "L", "+", 
                    RowBox[{"3", "/", "2"}], "+", 
                    RowBox[{"EValues", "[", 
                    RowBox[{"[", "ii", "]"}], "]"}]}]}], "||", 
                    RowBox[{"EShell", "\[Equal]", "3"}]}], ")"}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"2", "N0"}], "+", "L", "+", 
                    RowBox[{"3", "/", "2"}], "+", 
                    RowBox[{"EValues", "[", 
                    RowBox[{"[", "ii", "]"}], "]"}]}], "\[LessEqual]", 
                    "EShell"}], "&&", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"l", "-", "s"}], "]"}], "\[LessEqual]", "j", 
                    "\[LessEqual]", 
                    RowBox[{"l", "+", "s"}]}], "&&", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"L", "-", "j"}], "]"}], "\[LessEqual]", "J0", 
                    "\[LessEqual]", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"L", "+", "j"}], "]"}]}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"++", "i"}], ";", 
                    RowBox[{"++", "imax"}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Ji", "[", "i", "]"}], "=", "J0"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Ni", "[", "i", "]"}], "=", "N0"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Li", "[", "i", "]"}], "=", "L"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"si", "[", "i", "]"}], "=", "s"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"li", "[", "i", "]"}], "=", "l"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ji", "[", "i", "]"}], "=", "j"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ni", "[", "i", "]"}], "=", 
                    RowBox[{"\[Nu]Values", "[", 
                    RowBox[{"[", "ii", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{"verbose", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(E\), \(shell\)]\)=\>\"", ",", 
                    "EShell", ",", "\"\<   |\>\"", ",", "i", ",", 
                    "\"\<>=|\>\"", ",", 
                    RowBox[{"ni", "[", "i", "]"}], ",", "\"\<(\>\"", ",", "l",
                     ",", "s", ",", "\"\<)\>\"", ",", "j", ",", "\"\<;\>\"", 
                    ",", "N0", ",", "L", ",", "\"\<;(\>\"", ",", "j", ",", 
                    "L", ",", "\"\<)\>\"", ",", "J0", ",", "\"\<>\>\""}], 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"Print", "[", 
                    RowBox[{"\"\<E=\>\"", ",", 
                    RowBox[{
                    RowBox[{"2", "N0"}], "+", "L", "+", 
                    RowBox[{"3", "/", "2"}], "+", 
                    RowBox[{"2", "*", 
                    RowBox[{"ni", "[", "i", "]"}]}], "+", 
                    RowBox[{"3", "/", "2"}]}]}], "]"}], ";"}]}], "]"}]}]}], 
                    RowBox[{"(*", " ", 
                    RowBox[{"End", " ", 
                    RowBox[{"If", "[", "Verbose", "]"}]}], " ", "*)"}], 
                    "\[IndentingNewLine]", "]"}]}], 
                   RowBox[{"(*", " ", 
                    RowBox[{"End", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{"EvenQ", "..."}], " ", "]"}]}], " ", "*)"}], 
                   "\[IndentingNewLine]", "]"}], " ", 
                  RowBox[{"(*", " ", 
                   RowBox[{"End", " ", "ii", " ", "loop"}], " ", "*)"}], 
                  RowBox[{"(*", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"End", " ", "l"}], "\[Equal]", 
                    RowBox[{"0", " ", "case"}]}], ",", " ", 
                    RowBox[{"\[Nu]", " ", "loop"}]}], "*)"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"For", "[", 
                   RowBox[{
                    RowBox[{"n", "=", "0"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"2", "n"}], "+", "l", "+", 
                    RowBox[{"3", "/", "2"}], "+", 
                    RowBox[{"2", "N0"}], "+", "L", "+", 
                    RowBox[{"3", "/", "2"}]}], "\[LessEqual]", "EShell"}], 
                    ",", 
                    RowBox[{"++", "n"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"EvenQ", "[", 
                    RowBox[{"l", "+", "s"}], "]"}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"2", 
                    RowBox[{"(", 
                    RowBox[{"N0", "+", "n"}], ")"}]}], "+", "L", "+", "l", 
                    "+", "3"}], "==", "EShell"}], "&&", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"l", "-", "s"}], "]"}], "\[LessEqual]", "j", 
                    "\[LessEqual]", 
                    RowBox[{"l", "+", "s"}]}], "&&", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"L", "-", "j"}], "]"}], "\[LessEqual]", "J0", 
                    "\[LessEqual]", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"L", "+", "j"}], "]"}]}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"++", "i"}], ";", 
                    RowBox[{"++", "imax"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Ji", "[", "i", "]"}], "=", "J0"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Ni", "[", "i", "]"}], "=", "N0"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Li", "[", "i", "]"}], "=", "L"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"si", "[", "i", "]"}], "=", "s"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"li", "[", "i", "]"}], "=", "l"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ji", "[", "i", "]"}], "=", "j"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ni", "[", "i", "]"}], "=", "n"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{"verbose", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(E\), \(shell\)]\)=\>\"", ",", 
                    "EShell", ",", "\"\<   |\>\"", ",", "i", ",", 
                    "\"\<>=|\>\"", ",", 
                    RowBox[{"ni", "[", "i", "]"}], ",", "\"\<(\>\"", ",", "l",
                     ",", "s", ",", "\"\<)\>\"", ",", "j", ",", "\"\<;\>\"", 
                    ",", "N0", ",", "L", ",", "\"\<;(\>\"", ",", "j", ",", 
                    "L", ",", "\"\<)\>\"", ",", "J0", ",", "\"\<>\>\""}], 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"Print", "[", 
                    RowBox[{"\"\<E=\>\"", ",", 
                    RowBox[{
                    RowBox[{"2", "N0"}], "+", "L", "+", 
                    RowBox[{"3", "/", "2"}], "+", 
                    RowBox[{"2", 
                    RowBox[{"ni", "[", "i", "]"}]}], "+", "l", "+", 
                    RowBox[{"3", "/", "2"}]}]}], "]"}], ";"}]}], "]"}]}]}], 
                    RowBox[{"(*", " ", 
                    RowBox[{"End", " ", 
                    RowBox[{"If", "[", "Verbose", "]"}]}], " ", "*)"}], 
                    "\[IndentingNewLine]", "]"}]}], " ", 
                   RowBox[{"(*", " ", 
                    RowBox[{"End", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{"EvenQ", "..."}], "]"}]}], " ", "*)"}], 
                   "\[IndentingNewLine]", "]"}]}], 
                 RowBox[{"(*", " ", 
                  RowBox[{"End", " ", 
                   RowBox[{"For", "[", 
                    RowBox[{"n", "=", 
                    RowBox[{"0", "..."}]}], "]"}]}], " ", "*)"}], 
                 "\[IndentingNewLine]", "]"}]}], " ", 
               RowBox[{"(*", " ", 
                RowBox[{"End", " ", 
                 RowBox[{"If", "[", 
                  RowBox[{"l", "\[Equal]", "0"}], "]"}]}], " ", "*)"}], 
               "\[IndentingNewLine]", "]"}]}], 
             RowBox[{"(*", " ", 
              RowBox[{"End", " ", "l", " ", "loop"}], " ", "*)"}], 
             "\[IndentingNewLine]", "]"}]}], " ", 
           RowBox[{"(*", " ", 
            RowBox[{"End", " ", "j", " ", "loop"}], " ", "*)"}], 
           "\[IndentingNewLine]", "]"}]}], " ", 
         RowBox[{"(*", " ", 
          RowBox[{"End", " ", "s", " ", "loop"}], " ", "*)"}], 
         "\[IndentingNewLine]", "]"}]}], " ", 
       RowBox[{"(*", " ", 
        RowBox[{"End", " ", "L", " ", "loop"}], " ", "*)"}], 
       "\[IndentingNewLine]", "]"}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{"End", " ", "N0", " ", "loop"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"iShell", "[", "EShell", "]"}], "=", "imax"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"End", " ", "EShell", " ", "loop"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "i", ",", "ii", ",", "l", ",", "L", ",", "N0", ",", "n", ",", "s", ",", 
      "j"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<There are a total of \>\"", ",", "imax", ",", "\"\< \>\"", ",", 
     "\"\<included states.\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6174735608876543`*^9, 3.617473576507072*^9}, 
   3.617473657245564*^9, 3.617474457324181*^9, {3.617474521193968*^9, 
   3.617474684270667*^9}, {3.6174747340518103`*^9, 3.617474763031516*^9}, 
   3.617474805165525*^9, {3.6174748560540943`*^9, 3.617475139565247*^9}, {
   3.6174755639346657`*^9, 3.617475656897676*^9}, {3.617475689274926*^9, 
   3.617476057538583*^9}, {3.617476099100154*^9, 3.617476173480891*^9}, {
   3.617476244713771*^9, 3.61747661020123*^9}, {3.6174766435109262`*^9, 
   3.6174766554791822`*^9}, {3.6174767025588923`*^9, 3.617476781773736*^9}, {
   3.6174769778999443`*^9, 3.617477010184251*^9}, {3.617477041358736*^9, 
   3.6174773084262466`*^9}, {3.6174779470518837`*^9, 
   3.6174779509527893`*^9}, {3.617477983093492*^9, 3.617478009789793*^9}, {
   3.617478051070758*^9, 3.617478066779154*^9}, {3.617478122650446*^9, 
   3.6174781543783503`*^9}, {3.617478198241722*^9, 3.617478230639097*^9}, {
   3.6174783439443407`*^9, 3.617478344332837*^9}, {3.617478390644175*^9, 
   3.6174785191131973`*^9}, {3.6174785526573877`*^9, 3.617478564639701*^9}, {
   3.617478599416086*^9, 3.617478618483859*^9}, {3.617478710799095*^9, 
   3.61747874103716*^9}, {3.617478839458832*^9, 3.61747889450832*^9}, {
   3.617478984833899*^9, 3.617479003499372*^9}, {3.617479036529052*^9, 
   3.6174791400679197`*^9}, {3.6174791914788427`*^9, 
   3.6174792219749403`*^9}, {3.617479523749752*^9, 3.617479526762088*^9}, {
   3.617479564372635*^9, 3.617479572083406*^9}, 3.617479608324787*^9, {
   3.6174797221886253`*^9, 3.617479723544834*^9}, {3.617479822550803*^9, 
   3.617479824652027*^9}, {3.617480070338563*^9, 3.617480070713086*^9}, {
   3.617480183564028*^9, 3.617480223219203*^9}, {3.617480259458025*^9, 
   3.617480262100938*^9}, {3.6174802989995537`*^9, 3.617480399827653*^9}, 
   3.6174804509007063`*^9, {3.617480753558895*^9, 3.6174807677245693`*^9}, {
   3.617480809875461*^9, 3.617480810505788*^9}, {3.6174809875728817`*^9, 
   3.617481025439736*^9}, {3.617481229161881*^9, 3.617481368973078*^9}, {
   3.617481654609933*^9, 3.617481655161891*^9}, {3.6174816997274427`*^9, 
   3.617481701300084*^9}, {3.617481837430294*^9, 3.617481867284984*^9}, {
   3.617488165089203*^9, 3.617488165738715*^9}, {3.6174882102014008`*^9, 
   3.61748822899783*^9}, {3.617488273042976*^9, 3.617488280615094*^9}, {
   3.6174883119879217`*^9, 3.617488471194441*^9}, {3.6174885153301783`*^9, 
   3.617488522932063*^9}, {3.617488601674362*^9, 3.617488620975155*^9}, 
   3.61748868674076*^9, {3.617488836126853*^9, 3.6174888522633677`*^9}, {
   3.617488930659301*^9, 3.617488966036772*^9}, {3.617488999891425*^9, 
   3.617489036287448*^9}, {3.617489087253409*^9, 3.617489097302114*^9}, {
   3.617489133590969*^9, 3.61748914184044*^9}, {3.6175578657927523`*^9, 
   3.617557866899949*^9}, {3.617589184862999*^9, 3.61758918601262*^9}, {
   3.6175892454205008`*^9, 3.6175893062139463`*^9}, {3.617589970448578*^9, 
   3.617589983062747*^9}, {3.618235653867551*^9, 3.61823567388597*^9}, {
   3.61823649885499*^9, 3.618236499141827*^9}, {3.618236569686729*^9, 
   3.618236570899714*^9}, 3.61858163294847*^9, {3.6223036924535847`*^9, 
   3.622303706615556*^9}, {3.6240249330690603`*^9, 3.624024992028728*^9}, {
   3.624025037005831*^9, 3.624025038069624*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"There are a total of \"\>", "\[InvisibleSpace]", "651", 
   "\[InvisibleSpace]", "\<\" \"\>", 
   "\[InvisibleSpace]", "\<\"included states.\"\>"}],
  SequenceForm["There are a total of ", 651, " ", "included states."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.618236402280738*^9, 3.618236455555217*^9, 3.618236505137134*^9, 
   3.618236583369525*^9, 3.61823676606446*^9, 3.6182369618294477`*^9, 
   3.619873805023601*^9, 3.619874456984489*^9, 3.619875625635528*^9, 
   3.619875797874044*^9, 3.619876718485135*^9, 3.619898957994712*^9, 
   3.6198998956713*^9, 3.6198999541001787`*^9, 3.6199005410607767`*^9, 
   3.619900939393585*^9, {3.619901013980061*^9, 3.61990102958606*^9}, 
   3.61990108829286*^9, 3.6199012173020153`*^9, 3.6199015299404573`*^9, 
   3.619901617131839*^9, 3.6199017417419558`*^9, 3.61990209912044*^9, 
   3.619902626561613*^9, 3.619902792252658*^9, 3.6199028744778137`*^9, 
   3.6199030363113003`*^9, 3.619903152493958*^9, 3.619903283245792*^9, 
   3.619904097635746*^9, 3.619904349094843*^9, 3.62197110940036*^9, {
   3.6222048251786337`*^9, 3.6222048349941998`*^9}, 3.622205946059484*^9, {
   3.622206032508461*^9, 3.622206054631789*^9}, 3.622207656250545*^9, 
   3.622207702136951*^9, 3.622208011828053*^9, 3.622208594547503*^9, 
   3.622208854570464*^9, 3.622209078630496*^9, 3.622210382757338*^9, 
   3.622210756203899*^9, 3.622212344202256*^9, 3.622212535410882*^9, 
   3.622213823941633*^9, 3.622214538783895*^9, 3.622215073067758*^9, 
   3.622215259126622*^9, 3.622303401410674*^9, 3.622304035329227*^9, 
   3.6223071757220097`*^9, 3.6223072154841547`*^9, 3.622307894603932*^9, 
   3.6223082514586163`*^9, 3.6223086584350157`*^9, 3.622309454283578*^9, 
   3.622309765646393*^9, 3.6223099277748327`*^9, {3.622310189440137*^9, 
   3.62231021613878*^9}, 3.6223103117559967`*^9, 3.6223114978685703`*^9, 
   3.6223116948567743`*^9, 3.622313503733778*^9, 3.6223197310376987`*^9, 
   3.622322645410019*^9, 3.624024038349782*^9, 3.624024450801861*^9, 
   3.624024673275361*^9, 3.6240250289660053`*^9, 3.6240251083205347`*^9, 
   3.624025402828251*^9, 3.624025718556714*^9, 3.62402594593777*^9, 
   3.624026077106689*^9, 3.6240263589946413`*^9, 3.624026568157332*^9, 
   3.624026816518737*^9, 3.624027938575986*^9, 3.624028186045432*^9, 
   3.624029330312998*^9, 3.624145001962228*^9, 3.62414514484829*^9, 
   3.6241451826894827`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"shellSizeTableWeyl", " ", "=", " ", "\n", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"EShell", ",", " ", 
       RowBox[{"iShell", "[", "EShell", "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"EShell", ",", " ", "4", ",", " ", 
       RowBox[{"Min", "[", 
        RowBox[{"32", ",", " ", "EMax"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"shellSizeTableWeyl", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"Min", "[", 
          RowBox[{"32", ",", "EMax"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "2000"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Number of J=0, Jz=0 states with E<=\!\(\*SubscriptBox[\(E\), \
\(Max\)]\)\>\""}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(E\), \(Max\)]\)\>\"", ",", 
       "\"\<Number of States\>\""}], "}"}]}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6174735608876543`*^9, 3.617473576507072*^9}, 
   3.617473657245564*^9, 3.617474457324181*^9, {3.617474521193968*^9, 
   3.617474684270667*^9}, {3.6174747340518103`*^9, 3.617474763031516*^9}, 
   3.617474805165525*^9, {3.6174748560540943`*^9, 3.617475139565247*^9}, {
   3.6174755639346657`*^9, 3.617475656897676*^9}, {3.617475689274926*^9, 
   3.617476057538583*^9}, {3.617476099100154*^9, 3.617476173480891*^9}, {
   3.617476244713771*^9, 3.61747661020123*^9}, {3.6174766435109262`*^9, 
   3.6174766554791822`*^9}, {3.6174767025588923`*^9, 3.617476781773736*^9}, {
   3.6174769778999443`*^9, 3.617477010184251*^9}, {3.617477041358736*^9, 
   3.6174773084262466`*^9}, {3.6174779470518837`*^9, 
   3.6174779509527893`*^9}, {3.617477983093492*^9, 3.617478009789793*^9}, {
   3.617478051070758*^9, 3.617478066779154*^9}, {3.617478122650446*^9, 
   3.6174781543783503`*^9}, {3.617478198241722*^9, 3.617478230639097*^9}, {
   3.6174783439443407`*^9, 3.617478344332837*^9}, {3.617478390644175*^9, 
   3.6174785191131973`*^9}, {3.6174785526573877`*^9, 3.617478564639701*^9}, {
   3.617478599416086*^9, 3.617478618483859*^9}, {3.617478710799095*^9, 
   3.61747874103716*^9}, {3.617478839458832*^9, 3.61747889450832*^9}, {
   3.617478984833899*^9, 3.617479003499372*^9}, {3.617479036529052*^9, 
   3.6174791400679197`*^9}, {3.6174791914788427`*^9, 
   3.6174792219749403`*^9}, {3.617479523749752*^9, 3.617479526762088*^9}, {
   3.617479564372635*^9, 3.617479572083406*^9}, 3.617479608324787*^9, {
   3.6174797221886253`*^9, 3.617479723544834*^9}, {3.617479822550803*^9, 
   3.617479824652027*^9}, {3.617480070338563*^9, 3.617480070713086*^9}, {
   3.617480183564028*^9, 3.617480223219203*^9}, {3.617480259458025*^9, 
   3.617480262100938*^9}, {3.6174802989995537`*^9, 3.617480399827653*^9}, 
   3.6174804509007063`*^9, {3.617480753558895*^9, 3.6174807677245693`*^9}, {
   3.617480809875461*^9, 3.617480810505788*^9}, {3.6174809875728817`*^9, 
   3.617481025439736*^9}, {3.617481229161881*^9, 3.617481368973078*^9}, {
   3.617481654609933*^9, 3.617481655161891*^9}, {3.6174816997274427`*^9, 
   3.617481701300084*^9}, {3.617481837430294*^9, 3.617481867284984*^9}, {
   3.617488165089203*^9, 3.617488165738715*^9}, {3.6174882102014008`*^9, 
   3.61748822899783*^9}, {3.617488273042976*^9, 3.617488280615094*^9}, {
   3.6174883119879217`*^9, 3.617488471194441*^9}, {3.6174885153301783`*^9, 
   3.617488522932063*^9}, {3.617488601674362*^9, 3.617488620975155*^9}, 
   3.61748868674076*^9, {3.617488836126853*^9, 3.6174888522633677`*^9}, {
   3.617488930659301*^9, 3.617488966036772*^9}, {3.617488999891425*^9, 
   3.617489036287448*^9}, {3.617489087253409*^9, 3.617489097302114*^9}, {
   3.617489133590969*^9, 3.61748914184044*^9}, {3.6175578657927523`*^9, 
   3.617557866899949*^9}, {3.617589184862999*^9, 3.61758918601262*^9}, {
   3.6175892454205008`*^9, 3.6175893062139463`*^9}, {3.617589970448578*^9, 
   3.617589983062747*^9}, {3.618235653867551*^9, 3.618235714572394*^9}, {
   3.618235840194222*^9, 3.618235841482251*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Save", " ", "all", " ", "the", " ", "angular", " ", "momentum", " ", 
    "coupling", " ", "coefficients", " ", "after", " ", "computing", " ", 
    "once"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"JThree", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"j1_", ",", "j1m_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j2_", ",", "j2m_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"J_", ",", "Jm_"}], "}"}]}], "]"}], ":=", 
     RowBox[{
      RowBox[{"JThree", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"j1", ",", "j1m"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j2", ",", "j2m"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"J", ",", "Jm"}], "}"}]}], "]"}], "=", 
      RowBox[{"ThreeJSymbol", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"j1", ",", "j1m"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j2", ",", "j2m"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"J", ",", "Jm"}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"JSix", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"j1_", ",", "j2_", ",", "j3_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j4_", ",", "j5_", ",", "j6_"}], "}"}]}], "]"}], ":=", 
     RowBox[{
      RowBox[{"JSix", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"j1", ",", "j2", ",", "j3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j4", ",", "j5", ",", "j6"}], "}"}]}], "]"}], "=", 
      RowBox[{"SixJSymbol", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"j1", ",", "j2", ",", "j3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j4", ",", "j5", ",", "j6"}], "}"}]}], "]"}]}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.617549488060032*^9, 3.617549515809936*^9}, {
  3.617549563382461*^9, 3.617549639119794*^9}, {3.61755069141811*^9, 
  3.6175507058807497`*^9}, {3.617550803473666*^9, 3.617550804429356*^9}, {
  3.618087021026688*^9, 3.618087031973733*^9}, {3.622212291136964*^9, 
  3.622212297231895*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
      "Normalization", " ", "factor", " ", "for", " ", "Busch", " ", "wave", 
       " ", 
       RowBox[{"functions", ".", " ", "Provide"}], " ", "a", " ", "limiting", 
       " ", "definition", " ", "for", " ", "half"}], "-", 
      RowBox[{"integer", " ", "\[Nu]", " ", "when", " ", "a"}]}], "\[Rule]", 
     RowBox[{"+", "\[Infinity]"}]}], ",", 
    RowBox[{"-", "\[Infinity]"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "A", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"AbsoluteTiming", "[", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"a", "\[NotEqual]", "\[Infinity]"}], "&&", 
       RowBox[{"a", "\[NotEqual]", 
        RowBox[{"-", "\[Infinity]"}]}]}], ",", 
      RowBox[{
       RowBox[{"A", "[", "\[Nu]_", "]"}], ":=", 
       RowBox[{
        RowBox[{"A", "[", "\[Nu]", "]"}], "=", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{"Gamma", "[", 
             RowBox[{"-", "\[Nu]"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"PolyGamma", "[", 
                RowBox[{"0", ",", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["1", "2"]}], "-", "\[Nu]"}]}], "]"}]}], "+", 
              RowBox[{"PolyGamma", "[", 
               RowBox[{"0", ",", 
                RowBox[{"-", "\[Nu]"}]}], "]"}]}], ")"}]}], 
           RowBox[{"8", " ", 
            SuperscriptBox["\[Pi]", "2"], " ", 
            RowBox[{"Gamma", "[", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "2"]}], "-", "\[Nu]"}], "]"}]}]], ")"}], 
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}]]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"\[Nu]0", "=", 
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}]}], ",", 
        RowBox[{"\[Nu]0", "<=", 
         RowBox[{
          RowBox[{"\[Nu]Values", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "+", ".01"}]}], ",", 
        RowBox[{"\[Nu]0", "++"}], ",", 
        RowBox[{
         RowBox[{"A", "[", 
          RowBox[{"N", "[", "\[Nu]0", "]"}], "]"}], "=", 
         RowBox[{"Limit", "[", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{
               RowBox[{"Gamma", "[", 
                RowBox[{"-", "\[Nu]"}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"PolyGamma", "[", 
                   RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "-", "\[Nu]"}]}], "]"}]}], "+", 
                 RowBox[{"PolyGamma", "[", 
                  RowBox[{"0", ",", 
                   RowBox[{"-", "\[Nu]"}]}], "]"}]}], ")"}]}], 
              RowBox[{"8", " ", 
               SuperscriptBox["\[Pi]", "2"], " ", 
               RowBox[{"Gamma", "[", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox["1", "2"]}], "-", "\[Nu]"}], "]"}]}]], ")"}], 
            RowBox[{
             RowBox[{"-", "1"}], "/", "2"}]], ",", 
           RowBox[{"\[Nu]", "\[Rule]", "\[Nu]0"}]}], "]"}]}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], " ", 
    RowBox[{"(*", " ", 
     RowBox[{"End", " ", "if"}], " ", "*)"}], "\[IndentingNewLine]", "]"}], 
   " ", 
   RowBox[{"(*", " ", 
    RowBox[{"End", " ", "AbsoluteTiming"}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.617549488060032*^9, 3.617549515809936*^9}, {
   3.617549563382461*^9, 3.617549639119794*^9}, {3.61755069141811*^9, 
   3.6175507058807497`*^9}, 3.61755439170374*^9, {3.6222123099396667`*^9, 
   3.622212311959352*^9}, 3.6223035132897377`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.0000469999999999999972378865453759289`1.6926977712153415", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.622304035565104*^9, 3.622307175818947*^9, 3.622307215581933*^9, 
   3.622307894719751*^9, 3.622308251585376*^9, 3.6223086585223637`*^9, 
   3.622309454932787*^9, 3.6223097657615223`*^9, 3.622309927891423*^9, {
   3.6223101895253353`*^9, 3.6223102162864323`*^9}, 3.622310333207053*^9, 
   3.622311729512253*^9, 3.622313503916506*^9, 3.622319731270075*^9, 
   3.6223226455423307`*^9, 3.624024038577179*^9, 3.624024450901498*^9, 
   3.6240246733667316`*^9, 3.624025108616993*^9, 3.6240254029063587`*^9, 
   3.624025718639566*^9, 3.624025946029666*^9, 3.6240260772100143`*^9, 
   3.62402635925071*^9, 3.624026584172325*^9, 3.624026816675324*^9, 
   3.624027954806653*^9, 3.624028207712772*^9, 3.624029330399342*^9, 
   3.624145019241391*^9, {3.624145163414431*^9, 3.624145183113641*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "is", " ", "the", " ", "actual", " ", "reduced", " ", 
    "matrix", " ", "element", " ", "of", " ", "Q"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Q", "[", 
      RowBox[{"n1_", ",", "l1_", ",", "n_", ",", "l_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"l1", "-", "l"}], "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{
        FractionBox[
         RowBox[{"I", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"l1", "+", "1"}]]}], 
         RowBox[{"JThree", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"l1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", "0"}], "}"}]}], "]"}]], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"n", "!"}], 
          RowBox[{"n1", "!"}], 
          RowBox[{"Gamma", "[", 
           RowBox[{"n", "+", "l", "+", 
            RowBox[{"3", "/", "2"}]}], "]"}], 
          RowBox[{"Gamma", "[", 
           RowBox[{"n1", "+", "l1", "+", 
            RowBox[{"3", "/", "2"}]}], "]"}]}]], 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"m", "+", "m1"}]], 
            RowBox[{
             RowBox[{"m", "!"}], 
             RowBox[{"m1", "!"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"n", "-", "m"}], ")"}], "!"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"n1", "-", "m1"}], ")"}], "!"}], 
             RowBox[{"Gamma", "[", 
              RowBox[{"m", "+", "l", "+", 
               RowBox[{"3", "/", "2"}]}], "]"}], 
             RowBox[{"Gamma", "[", 
              RowBox[{"m1", "+", "l1", "+", 
               RowBox[{"3", "/", "2"}]}], "]"}]}]], 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{"l1", "\[Equal]", 
              RowBox[{"l", "+", "1"}]}], ",", 
             RowBox[{
              FractionBox[
               RowBox[{"l", "+", "1"}], 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", "l"}], "+", "1"}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", "l"}], "+", "3"}], ")"}]}], "]"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", "m", " ", 
                 RowBox[{"Gamma", "[", 
                  RowBox[{"m", "+", "m1", "+", "1", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"l", "+", "l1"}], ")"}], "/", "2"}]}], "]"}]}], 
                "-", 
                RowBox[{"Gamma", "[", 
                 RowBox[{"m", "+", "m1", "+", "2", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"l", "+", "l1"}], ")"}], "/", "2"}]}], "]"}]}], 
               ")"}]}], ",", 
             RowBox[{"l1", "\[Equal]", 
              RowBox[{"l", "-", "1"}]}], ",", 
             RowBox[{
              FractionBox["l", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", "l"}], "+", "1"}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", "l"}], "-", "1"}], ")"}]}], "]"}]], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", "m"}], "+", 
                   RowBox[{"2", "l"}], "+", "1"}], ")"}], " ", 
                 RowBox[{"Gamma", "[", 
                  RowBox[{"m", "+", "m1", "+", "1", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"l", "+", "l1"}], ")"}], "/", "2"}]}], "]"}]}], 
                "-", 
                RowBox[{"Gamma", "[", 
                 RowBox[{"m", "+", "m1", "+", "2", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"l", "+", "l1"}], ")"}], "/", "2"}]}], "]"}]}], 
               ")"}]}], ",", "True", ",", "0"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "0", ",", "n"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m1", ",", "0", ",", "n1"}], "}"}]}], "]"}]}], ",", "0"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "This", " ", "is", " ", "the", " ", "actual", " ", "reduced", " ", 
      "matrix", " ", "element", " ", "of", " ", "q"}], ",", " ", 
     RowBox[{
      RowBox[{
      "accounting", " ", "for", " ", "the", " ", "Busch", " ", "states", " ", 
       "at", " ", "l"}], "=", "0"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"n1_", ",", "l1_", ",", "n_", ",", "l_"}], "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{"If", " ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"l1", ">", "0"}], "&&", 
         RowBox[{"l", ">", "0"}]}], "||", 
        RowBox[{"a", "\[Equal]", "0"}]}], ",", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
          "Case", " ", "where", " ", "neither", " ", "l", " ", "or", " ", 
           "l1"}], "=", "0"}], ",", " ", 
         RowBox[{
          RowBox[{
          "or", " ", "when", " ", "there", " ", "is", " ", "no", " ", "two"}],
           "-", 
          RowBox[{"body", " ", "interaction"}]}]}], " ", "*)"}], 
       RowBox[{"Q", "[", 
        RowBox[{"n1", ",", "l1", ",", "n", ",", "l"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"l1", "\[Equal]", "0"}], "&&", 
          RowBox[{"l", "\[Equal]", "1"}], "&&", 
          RowBox[{"a", "\[NotEqual]", "0"}]}], ",", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Recursive", " ", "definition", " ", "for"}], " ", "<", 
            " ", 
            RowBox[{"\[Nu]", " ", "l1"}]}], "=", 
           RowBox[{
            RowBox[{"0", " ", "||", "q", " ", "||", " ", 
             RowBox[{"n", " ", "l"}]}], "=", 
            RowBox[{"1", " ", ">", " ", "case"}]}]}], " ", "*)"}], 
         RowBox[{"q", "[", 
          RowBox[{"n", ",", "1", ",", "n1", ",", "0"}], "]"}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"l1", "\[Equal]", "1"}], "&&", 
            RowBox[{"l", "\[Equal]", "0"}], "&&", 
            RowBox[{"a", "\[NotEqual]", "0"}]}], ",", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"Definition", " ", "for"}], " ", "<", " ", 
              RowBox[{"n1", " ", "l1"}]}], "=", 
             RowBox[{
              RowBox[{"1", " ", "||", "q", " ", "||", " ", 
               RowBox[{"\[Nu]", " ", "l"}]}], "=", 
              RowBox[{"0", " ", ">", " ", "case"}]}]}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"-", "I"}], " ", 
            RowBox[{"A", "[", "n", "]"}], 
            RowBox[{"Sqrt", "[", 
             FractionBox[
              RowBox[{"Gamma", "[", 
               RowBox[{"n1", "+", 
                RowBox[{"5", "/", "2"}]}], "]"}], 
              RowBox[{"2", 
               SuperscriptBox["\[Pi]", "3"], 
               RowBox[{"Gamma", "[", 
                RowBox[{"n1", "+", "1"}], "]"}]}]], "]"}], 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "-", 
              RowBox[{"2", " ", "n1"}], "+", 
              RowBox[{"2", " ", "n"}]}], 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"n1", "-", "n"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "n1", "-", "n"}], ")"}]}]]}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.617549488060032*^9, 3.617549515809936*^9}, {
   3.617549563382461*^9, 3.617549639119794*^9}, 3.61755069141811*^9, {
   3.617550736352481*^9, 3.617550738011465*^9}, {3.61755344038057*^9, 
   3.6175534482370367`*^9}, {3.617558904248307*^9, 3.617558927982266*^9}, {
   3.6182503364690332`*^9, 3.6182503858294764`*^9}, {3.622207289610567*^9, 
   3.622207322317749*^9}, {3.6222073623322678`*^9, 3.622207367206708*^9}, 
   3.622207428828435*^9, {3.622303397715781*^9, 3.622303407800395*^9}, {
   3.622303567905077*^9, 3.6223036046442213`*^9}, {3.6223071408759527`*^9, 
   3.6223071580640697`*^9}, {3.622307203654422*^9, 3.622307204452551*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Matrix", " ", "elements", " ", "of", " ", 
    RowBox[{"\[Sigma]", ".", "q"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Remember", " ", "to", " ", "multiply", " ", "by", " ", "the", " ", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}], " ", "term", " ", "from", " ", 
     "changing", " ", "coordinates"}], ",", " ", 
    RowBox[{"and", " ", "the", " ", 
     RowBox[{"Sqrt", "[", "3", "]"}], " ", "term", " ", "from", " ", "the", 
     " ", "difference", " ", "between", " ", "a", " ", "dot", " ", "product", 
     " ", "and", " ", "a", " ", "tensor", " ", "scalar", " ", "product"}]}], 
   " ", "*)"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Sigma]q", "[", 
     RowBox[{
     "n1_", ",", "s1_", ",", "l1_", ",", "n_", ",", "s_", ",", "l_", ",", 
      "j_"}], "]"}], ":=", "  ", 
    RowBox[{
     RowBox[{"Sqrt", "[", "6", "]"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], 
        SuperscriptBox[")", 
         RowBox[{"l", "+", "s1", "+", "j"}]], 
        RowBox[{"JSix", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"j", ",", "s1", ",", "l1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "l", ",", "s"}], "}"}]}], "]"}], 
        RowBox[{"(", 
         RowBox[{"s1", "-", "s"}], ")"}], 
        RowBox[{"q", "[", 
         RowBox[{"n1", ",", "l1", ",", "n", ",", "l"}], "]"}]}], ";"}]}]}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Sigma]q", "[", 
     RowBox[{
     "n1_", ",", "s1_", ",", "l1_", ",", "n_", ",", "s_", ",", "l_", ",", 
      "j_"}], "]"}], ":=", 
    RowBox[{
     FractionBox[
      RowBox[{"Sqrt", "[", "3", "]"}], 
      RowBox[{"Sqrt", "[", "2", "]"}]], " ", 
     FractionBox["2", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"2", "j"}], "+", "1"}], "]"}]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"l", "+", "s1", "+", "j"}]], 
     RowBox[{"(", 
      RowBox[{"s1", "-", "s"}], ")"}], 
     RowBox[{"q", "[", 
      RowBox[{"n1", ",", "l1", ",", "n", ",", "l"}], "]"}]}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.611689860550932*^9, 3.611689886167523*^9}, {
   3.617550755963361*^9, 3.617550758231084*^9}, 3.617558209004964*^9, {
   3.617558940702849*^9, 3.617558953396146*^9}, {3.622213684133253*^9, 
   3.622213805535109*^9}, {3.622214479711337*^9, 3.622214506020303*^9}, {
   3.6223037606592197`*^9, 3.622303787922205*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Matrix", " ", "elements", " ", "of", " ", 
    RowBox[{"\[CapitalSigma]", ".", "Q"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[CapitalSigma]Q", "[", 
    RowBox[{
    "N1_", ",", "l1_", ",", "j1_", ",", "L1_", ",", "N_", ",", "l_", ",", 
     "s_", ",", "j_", ",", "L_", ",", "J_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"Sqrt", "[", "3", "]"}], 
     RowBox[{"Sqrt", "[", "2", "]"}]], "2", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"6", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "j1"}], "+", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "j"}], "+", "1"}], ")"}]}], "]"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"L1", "+", "1"}]], 
    RowBox[{"Q", "[", 
     RowBox[{"N1", ",", "L1", ",", "N", ",", "L"}], "]"}], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "J2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "J2"}], "+", "1"}], ")"}], 
       RowBox[{"JSix", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"l", ",", "1", ",", "j1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"L1", ",", "J", ",", "J2"}], "}"}]}], "]"}], 
       RowBox[{"JSix", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"l", ",", "1", ",", "j"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"L", ",", "J", ",", "J2"}], "}"}]}], "]"}], 
       RowBox[{"JSix", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"J2", ",", "1", ",", "L1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "L", ",", "1"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"J2", ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"L", "-", "s"}], "]"}], ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"L", "+", "s"}], "]"}]}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.611689860550932*^9, 3.611689887838975*^9}, {
   3.6116944162018423`*^9, 3.611694422048707*^9}, {3.611695639456053*^9, 
   3.6116956400382757`*^9}, 3.612030888624117*^9, {3.6120370375927963`*^9, 
   3.612037041035515*^9}, 3.61203719943356*^9, 3.612037507506954*^9, {
   3.612037566610753*^9, 3.612037567495655*^9}, 3.6120406018535223`*^9, 
   3.612095364965988*^9, 3.617549531118535*^9, {3.617550770097866*^9, 
   3.6175507785720367`*^9}, 3.617558210919015*^9, {3.617558956966073*^9, 
   3.617558961027602*^9}, 3.6180796713224287`*^9, {3.622205929664509*^9, 
   3.622205934332197*^9}, {3.622206019658987*^9, 3.622206042171135*^9}, {
   3.62221068041864*^9, 3.622210684375066*^9}, {3.622213882962962*^9, 
   3.6222138869253798`*^9}, {3.622213971349498*^9, 3.622213976045491*^9}, {
   3.6222145094708443`*^9, 3.622214512947246*^9}, {3.622303790661291*^9, 
   3.622303792106925*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Matrix", " ", 
      RowBox[{"\[Sigma]", ".", "q"}]}], "+", 
     RowBox[{"\[CapitalSigma]", ".", "Q"}]}], ",", " ", 
    RowBox[{"stored", " ", "as", " ", "SparseArray"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<There are a total of \>\"", ",", "imax", ",", "\"\< \>\"", ",", 
     "\"\<included states.\>\""}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t", "=", 
     RowBox[{"AbsoluteTime", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]q\[CapitalSigma]Q", "=", 
     RowBox[{"SparseArray", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"Quiet", "[", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Ji", "[", "i", "]"}], "\[Equal]", 
              RowBox[{"Ji", "[", "j", "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Ni", "[", "i", "]"}], "==", 
                 RowBox[{"Ni", "[", "j", "]"}]}], "&&", 
                RowBox[{
                 RowBox[{"Li", "[", "i", "]"}], "==", 
                 RowBox[{"Li", "[", "j", "]"}]}], "&&", 
                RowBox[{
                 RowBox[{"ji", "[", "i", "]"}], "==", 
                 RowBox[{"ji", "[", "j", "]"}]}], "&&", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{
                   RowBox[{"li", "[", "i", "]"}], "-", 
                   RowBox[{"li", "[", "j", "]"}]}], "]"}], "\[Equal]", 
                 "1"}]}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"i", ",", "j"}], "}"}], "->", 
                 RowBox[{"\[Sigma]q", "[", 
                  RowBox[{
                   RowBox[{"ni", "[", "i", "]"}], ",", 
                   RowBox[{"si", "[", "i", "]"}], ",", 
                   RowBox[{"li", "[", "i", "]"}], ",", 
                   RowBox[{"ni", "[", "j", "]"}], ",", 
                   RowBox[{"si", "[", "j", "]"}], ",", 
                   RowBox[{"li", "[", "j", "]"}], ",", 
                   RowBox[{"ji", "[", "j", "]"}]}], "]"}]}], "}"}], ",", 
               RowBox[{"(*", "ELSE", "*)"}], 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"ni", "[", "i", "]"}], "==", 
                   RowBox[{"ni", "[", "j", "]"}]}], "&&", 
                  RowBox[{
                   RowBox[{"li", "[", "i", "]"}], "==", 
                   RowBox[{"li", "[", "j", "]"}]}], "&&", 
                  RowBox[{
                   RowBox[{"si", "[", "i", "]"}], "==", "1"}], "&&", 
                  RowBox[{
                   RowBox[{"si", "[", "j", "]"}], "==", "1"}], "&&", 
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"Li", "[", "i", "]"}], "-", 
                    RowBox[{"Li", "[", "j", "]"}]}], "]"}], "\[Equal]", 
                   "1"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"i", ",", "j"}], "}"}], "->", 
                   RowBox[{"Chop", "[", 
                    RowBox[{"\[CapitalSigma]Q", "[", 
                    RowBox[{
                    RowBox[{"Ni", "[", "i", "]"}], ",", 
                    RowBox[{"li", "[", "i", "]"}], ",", 
                    RowBox[{"ji", "[", "i", "]"}], ",", 
                    RowBox[{"Li", "[", "i", "]"}], ",", 
                    RowBox[{"Ni", "[", "j", "]"}], ",", 
                    RowBox[{"li", "[", "j", "]"}], ",", 
                    RowBox[{"si", "[", "j", "]"}], ",", 
                    RowBox[{"ji", "[", "j", "]"}], ",", 
                    RowBox[{"Li", "[", "j", "]"}], ",", 
                    RowBox[{"Ji", "[", "j", "]"}]}], "]"}], "]"}]}], "}"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"##", "&"}], "[", "]"}]}], "]"}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{"##", "&"}], "[", "]"}]}], "]"}], 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{"If", " ", "\[Sigma]q"}], "\[NotEqual]", "0"}], " ", 
              "*)"}], "\[IndentingNewLine]", ",", 
             RowBox[{
              RowBox[{"##", "&"}], "[", "]"}]}], "]"}], 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"If", " ", "j"}], "\[LessEqual]", "i"}], " ", "&&", " ", 
             RowBox[{"J", "\[Equal]", "J"}]}], " ", "*)"}], 
           "\[IndentingNewLine]", "]"}], 
          RowBox[{"(*", " ", 
           RowBox[{"End", " ", "quiet"}], " ", "*)"}], "\[IndentingNewLine]", 
          
          RowBox[{"(*", 
           RowBox[{" ", 
            RowBox[{"TEST", " ", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "2", ",", "imax"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"i", "-", "1"}]}], "}"}]}], "]"}], "*)"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "2", ",", "imax"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"i", "-", "1"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"imax", ",", "imax"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]q\[CapitalSigma]Q", "=", 
     RowBox[{"SparseArray", "[", 
      RowBox[{"\[Sigma]q\[CapitalSigma]Q", "+", 
       RowBox[{
       "ConjugateTranspose", "[", "\[Sigma]q\[CapitalSigma]Q", "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AbsoluteTime", "[", "]"}], "-", "t"}]}]}]], "Input",
 CellChangeTimes->{{3.617549181298897*^9, 3.617549192658154*^9}, 
   3.6175492307144423`*^9, {3.61754935511845*^9, 3.617549433245764*^9}, {
   3.617549847983684*^9, 3.617549956486609*^9}, {3.617550334677412*^9, 
   3.617550367088231*^9}, {3.617558138393487*^9, 3.617558165508751*^9}, {
   3.617558553399152*^9, 3.6175585545582542`*^9}, {3.6175587209097013`*^9, 
   3.617558721253255*^9}, {3.617558969262271*^9, 3.6175590121954527`*^9}, {
   3.6176419157343597`*^9, 3.617641916001544*^9}, {3.6180767296790447`*^9, 
   3.61807676260107*^9}, {3.6180769733556128`*^9, 3.618076978964982*^9}, {
   3.6180793532830963`*^9, 3.6180793556004057`*^9}, {3.618079469535725*^9, 
   3.618079541480413*^9}, {3.618079868833831*^9, 3.618079881713299*^9}, {
   3.618079961069439*^9, 3.618079963431273*^9}, {3.618080072128558*^9, 
   3.618080088858513*^9}, {3.6180801218410683`*^9, 3.618080240598548*^9}, {
   3.618080344776554*^9, 3.618080345052252*^9}, {3.6180804920193777`*^9, 
   3.6180804943589973`*^9}, {3.6180808884003057`*^9, 
   3.6180809375741587`*^9}, {3.618081134803931*^9, 3.618081141683065*^9}, {
   3.618082470826579*^9, 3.618082472111826*^9}, {3.6180826105530663`*^9, 
   3.618082661385871*^9}, {3.618084658018525*^9, 3.618084660465623*^9}, {
   3.6180847537710543`*^9, 3.6180847742129374`*^9}, {3.6180848645317173`*^9, 
   3.618084864748694*^9}, {3.618084936958932*^9, 3.618084956489255*^9}, {
   3.618085909327092*^9, 3.61808591649264*^9}, {3.618085996648449*^9, 
   3.6180860055681334`*^9}, 3.6180877781769047`*^9, {3.618087933546486*^9, 
   3.618087934544135*^9}, {3.618088119444577*^9, 3.6180881253950043`*^9}, {
   3.6180887077172937`*^9, 3.618088832113922*^9}, {3.618088879472736*^9, 
   3.618088914700438*^9}, {3.618236202267879*^9, 3.618236362158061*^9}, {
   3.61825099737693*^9, 3.6182510047515583`*^9}, 3.61825142718322*^9, {
   3.619873357173978*^9, 3.619873482030312*^9}, {3.6198735637563467`*^9, 
   3.619873563941725*^9}, {3.622204754489768*^9, 3.622204784643779*^9}, {
   3.62221250046248*^9, 3.622212503520051*^9}, {3.622214997362236*^9, 
   3.622215010435424*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"There are a total of \"\>", "\[InvisibleSpace]", "3803", 
   "\[InvisibleSpace]", "\<\" \"\>", 
   "\[InvisibleSpace]", "\<\"included states.\"\>"}],
  SequenceForm["There are a total of ", 3803, " ", "included states."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.622204835546729*^9, 3.622205489636517*^9, 3.6222059461887283`*^9, 
   3.622206054857939*^9, 3.6222076564794073`*^9, 3.6222077023414793`*^9, 
   3.6222080126287403`*^9, 3.622208595092675*^9, 3.622209078788952*^9, 
   3.622210382981776*^9, 3.622210756369895*^9, 3.62221234831769*^9, 
   3.622212535994421*^9, 3.6222138245282593`*^9, 3.6222145394748173`*^9, 
   3.622215073352331*^9, 3.62221525924039*^9, 3.622303402198987*^9, 
   3.62230403565202*^9, 3.622307175899288*^9, 3.622307215712949*^9, 
   3.6223078948071737`*^9, 3.6223082516693287`*^9, 3.6223086585894747`*^9, 
   3.622309455203313*^9, 3.6223097658357697`*^9, 3.622309927981081*^9, {
   3.622310189588058*^9, 3.622310216351596*^9}, 3.6223103335588427`*^9, 
   3.622311729601993*^9, 3.6223135039820337`*^9, 3.622319731324664*^9, 
   3.622322645591254*^9, 3.6240240386243677`*^9, 3.624024450956564*^9, 
   3.624024673446361*^9, 3.624025108670994*^9, 3.6240254029585733`*^9, 
   3.624025718683845*^9, 3.624025946093254*^9, 3.624026077282716*^9, 
   3.624026359389873*^9, 3.624026584554493*^9, 3.624026816803319*^9, 
   3.624027954884989*^9, 3.624028207789679*^9, 3.624029330490909*^9}],

Cell[BoxData["219.88608`8.793742730494156"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAOJ9F/ZtOffnlaPAU3O280A6RsDDHkR35j70AdFKn4RF
LwBp7hXO6iB60W/fABBtvT1jBph/NzzhIpDueb2+D0SbO6tsA9GnvbtTLwHp
E4+ya0D07WUtEpeB9Go7vhoQ7WFhuQtEp5QVvATRQZ92fvgHpEtW/3P8D3ZP
+FqGv68cczq6NoHop1Id7IxAentNuAmIrpIybAfRBUp970C0W5DPNxC94NUb
LiYgHf/bXw1EtzFJ6YNooaA3NiDaRja0jhlIZ0wssGABiU/USmcH0qfY9Vdz
AGmWkzzM7gyvHW8wzTEH0SX/rYJAtFrCxw4QrdfYtBZE79v9/DKI/jKb6SOI
fmArwuQBpDtrDFRA9AWjG/Yg+vSCZ7EgusdB8g2I/pkZJe8JpBfxnVkLogGT
AsjP
  "]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Matrix", " ", "of", " ", 
      SubscriptBox["H", "HO"]}], "+", 
     SubscriptBox["H", "contact"]}], ",", " ", 
    RowBox[{"stored", " ", "as", " ", "SparseArray"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"H0", "=", 
    RowBox[{"SparseArray", "[", 
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", "i"}], "}"}], "->", 
        RowBox[{
         RowBox[{"2", 
          RowBox[{"ni", "[", "i", "]"}]}], "+", 
         RowBox[{"2", 
          RowBox[{"Ni", "[", "i", "]"}]}], "+", 
         RowBox[{"li", "[", "i", "]"}], "+", 
         RowBox[{"Li", "[", "i", "]"}], "+", "3", "+", "EOffset"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "imax"}], "}"}]}], "]"}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.617549181298897*^9, 3.617549192658154*^9}, 
   3.6175492307144423`*^9, {3.61754935511845*^9, 3.617549433245764*^9}, {
   3.617549847983684*^9, 3.617549956486609*^9}, {3.617550334677412*^9, 
   3.617550373133144*^9}, {3.617552019718474*^9, 3.6175520215967407`*^9}, {
   3.617558176257854*^9, 3.617558205469119*^9}, 3.617558313258996*^9, {
   3.617558419441824*^9, 3.617558421014361*^9}, {3.617558515158901*^9, 
   3.617558516934699*^9}, 3.6175586727608557`*^9, {3.6175587147680492`*^9, 
   3.6175587369136753`*^9}, {3.617558982742996*^9, 3.617559021107609*^9}, {
   3.617589417009035*^9, 3.6175894550785437`*^9}, 3.61807938607857*^9, {
   3.6182369827781*^9, 3.618236988793004*^9}, 3.619873589314165*^9, 
   3.6223070453822117`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]Test", "=", ".5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Eigensystem", "[", 
    RowBox[{
     RowBox[{"H0", "+", 
      RowBox[{"\[Alpha]Test", " ", "\[Sigma]q\[CapitalSigma]Q"}]}], ",", 
     RowBox[{"-", "8"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}]}], "]"}], "]"}], "-", 
  "EOffset"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GS", "=", 
   RowBox[{
    RowBox[{"Eigensystem", "[", 
     RowBox[{
      RowBox[{"H0", "+", 
       RowBox[{"\[Alpha]Test", " ", "\[Sigma]q\[CapitalSigma]Q"}]}], ",", 
      RowBox[{"-", "8"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Abs", "[", 
  RowBox[{"GS", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Ordering", "[", 
  RowBox[{
   RowBox[{"Abs", "[", "GS", "]"}], ",", 
   RowBox[{"-", "20"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Map", "[", 
  RowBox[{"PrintState", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.62230882881426*^9, 3.622308913464615*^9}, {
   3.622309074246945*^9, 3.6223090871825953`*^9}, {3.622309127763479*^9, 
   3.622309282350885*^9}, {3.622309314324955*^9, 3.622309325046178*^9}, {
   3.622309705107452*^9, 3.622309705530507*^9}, {3.6223100207494583`*^9, 
   3.622310021849845*^9}, {3.62231013024069*^9, 3.622310154448812*^9}, {
   3.6223107155829153`*^9, 3.622310721826291*^9}, {3.622311482892037*^9, 
   3.6223114848561487`*^9}, {3.62402441917389*^9, 3.624024419295231*^9}, {
   3.624025532701641*^9, 3.624025633548744*^9}, {3.624025827390788*^9, 
   3.624025910006926*^9}, {3.624025999105044*^9, 3.624025999497026*^9}, {
   3.624026070263736*^9, 3.6240260752864923`*^9}, {3.624026195296299*^9, 
   3.624026207319894*^9}, {3.624026713334249*^9, 3.624026716230051*^9}, {
   3.624027266295039*^9, 3.624027280887562*^9}, {3.624027324641789*^9, 
   3.62402732763301*^9}, {3.62402745164808*^9, 3.6240275003855762`*^9}, {
   3.624027532705385*^9, 3.624027589896487*^9}, {3.624027625136716*^9, 
   3.624027764359767*^9}, {3.6240278129541817`*^9, 3.6240278401616993`*^9}, 
   3.6240278718935823`*^9, {3.624028046889556*^9, 3.624028051863002*^9}, {
   3.624028658003826*^9, 3.624028673903411*^9}, {3.624028760919758*^9, 
   3.624028768366914*^9}, {3.6240289632169847`*^9, 3.624029148763462*^9}, {
   3.624030077058482*^9, 3.624030097809351*^9}}],

Cell[BoxData[
 RowBox[{"-", "15.016477047058189`"}]], "Output",
 CellChangeTimes->{
  3.624028674618971*^9, {3.624028761774847*^9, 3.624028769118436*^9}, {
   3.624028974129301*^9, 3.624029032191221*^9}, {3.624029064622388*^9, 
   3.624029149837748*^9}, 3.624029583878356*^9, {3.624030078189752*^9, 
   3.6240301058844852`*^9}}],

Cell[BoxData["0.9925797417464367`"], "Output",
 CellChangeTimes->{
  3.624028674618971*^9, {3.624028761774847*^9, 3.624028769118436*^9}, {
   3.624028974129301*^9, 3.624029032191221*^9}, {3.624029064622388*^9, 
   3.624029149837748*^9}, 3.624029583878356*^9, {3.624030078189752*^9, 
   3.624030106026196*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2480", ",", "2119", ",", "11", ",", "1795", ",", "1506", ",", "1250", ",", 
   "1025", ",", "829", ",", "660", ",", "516", ",", "15", ",", "395", ",", 
   "295", ",", "214", ",", "24", ",", "150", ",", "101", ",", "40", ",", "65",
    ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.624028674618971*^9, {3.624028761774847*^9, 3.624028769118436*^9}, {
   3.624028974129301*^9, 3.624029032191221*^9}, {3.624029064622388*^9, 
   3.624029149837748*^9}, 3.624029583878356*^9, {3.624030078189752*^9, 
   3.6240301060318003`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"|\"\>", "\[InvisibleSpace]", "2480", 
   "\[InvisibleSpace]", "\<\">=|\"\>", "\[InvisibleSpace]", "18", 
   "\[InvisibleSpace]", "\<\"(\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\";\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\";(\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\">\"\>"}],
  SequenceForm[
  "|", 2480, ">=|", 18, "(", 1, 1, ")", 0, ";", 0, 0, ";(", 0, 0, ")", 0, ">"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.624028674928502*^9, {3.6240287620816393`*^9, 3.624028769339015*^9}, {
   3.6240289744372873`*^9, 3.62402903249852*^9}, {3.624029065021945*^9, 
   3.624029150329851*^9}, 3.624029584227729*^9, {3.624030078517568*^9, 
   3.624030106037022*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"|\"\>", "\[InvisibleSpace]", "2119", 
   "\[InvisibleSpace]", "\<\">=|\"\>", "\[InvisibleSpace]", "17", 
   "\[InvisibleSpace]", "\<\"(\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\";\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\";(\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\">\"\>"}],
  SequenceForm[
  "|", 2119, ">=|", 17, "(", 1, 1, ")", 0, ";", 0, 0, ";(", 0, 0, ")", 0, ">"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.624028674928502*^9, {3.6240287620816393`*^9, 3.624028769339015*^9}, {
   3.6240289744372873`*^9, 3.62402903249852*^9}, {3.624029065021945*^9, 
   3.624029150329851*^9}, 3.624029584227729*^9, {3.624030078517568*^9, 
   3.624030106038108*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"|\"\>", "\[InvisibleSpace]", "11", 
   "\[InvisibleSpace]", "\<\">=|\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"(\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\";\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\";(\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\">\"\>"}],
  SequenceForm[
  "|", 11, ">=|", 0, "(", 1, 1, ")", 0, ";", 0, 0, ";(", 0, 0, ")", 0, ">"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.624028674928502*^9, {3.6240287620816393`*^9, 3.624028769339015*^9}, {
   3.6240289744372873`*^9, 3.62402903249852*^9}, {3.624029065021945*^9, 
   3.624029150329851*^9}, 3.624029584227729*^9, {3.624030078517568*^9, 
   3.624030106039792*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"|\"\>", "\[InvisibleSpace]", "1795", 
   "\[InvisibleSpace]", "\<\">=|\"\>", "\[InvisibleSpace]", "16", 
   "\[InvisibleSpace]", "\<\"(\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\";\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\";(\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\">\"\>"}],
  SequenceForm[
  "|", 1795, ">=|", 16, "(", 1, 1, ")", 0, ";", 0, 0, ";(", 0, 0, ")", 0, ">"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.624028674928502*^9, {3.6240287620816393`*^9, 3.624028769339015*^9}, {
   3.6240289744372873`*^9, 3.62402903249852*^9}, {3.624029065021945*^9, 
   3.624029150329851*^9}, 3.624029584227729*^9, {3.624030078517568*^9, 
   3.6240301060414877`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"|\"\>", "\[InvisibleSpace]", "1506", 
   "\[InvisibleSpace]", "\<\">=|\"\>", "\[InvisibleSpace]", "15", 
   "\[InvisibleSpace]", "\<\"(\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\";\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\";(\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\">\"\>"}],
  SequenceForm[
  "|", 1506, ">=|", 15, "(", 1, 1, ")", 0, ";", 0, 0, ";(", 0, 0, ")", 0, ">"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.624028674928502*^9, {3.6240287620816393`*^9, 3.624028769339015*^9}, {
   3.6240289744372873`*^9, 3.62402903249852*^9}, {3.624029065021945*^9, 
   3.624029150329851*^9}, 3.624029584227729*^9, {3.624030078517568*^9, 
   3.624030106043146*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"|\"\>", "\[InvisibleSpace]", "1250", 
   "\[InvisibleSpace]", "\<\">=|\"\>", "\[InvisibleSpace]", "14", 
   "\[InvisibleSpace]", "\<\"(\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\";\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\";(\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\">\"\>"}],
  SequenceForm[
  "|", 1250, ">=|", 14, "(", 1, 1, ")", 0, ";", 0, 0, ";(", 0, 0, ")", 0, ">"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.624028674928502*^9, {3.6240287620816393`*^9, 3.624028769339015*^9}, {
   3.6240289744372873`*^9, 3.62402903249852*^9}, {3.624029065021945*^9, 
   3.624029150329851*^9}, 3.624029584227729*^9, {3.624030078517568*^9, 
   3.6240301060448503`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"|\"\>", "\[InvisibleSpace]", "1025", 
   "\[InvisibleSpace]", "\<\">=|\"\>", "\[InvisibleSpace]", "13", 
   "\[InvisibleSpace]", "\<\"(\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\";\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\";(\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\">\"\>"}],
  SequenceForm[
  "|", 1025, ">=|", 13, "(", 1, 1, ")", 0, ";", 0, 0, ";(", 0, 0, ")", 0, ">"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.624028674928502*^9, {3.6240287620816393`*^9, 3.624028769339015*^9}, {
   3.6240289744372873`*^9, 3.62402903249852*^9}, {3.624029065021945*^9, 
   3.624029150329851*^9}, 3.624029584227729*^9, {3.624030078517568*^9, 
   3.624030106046485*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"|\"\>", "\[InvisibleSpace]", "829", 
   "\[InvisibleSpace]", "\<\">=|\"\>", "\[InvisibleSpace]", "12", 
   "\[InvisibleSpace]", "\<\"(\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\";\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\";(\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\">\"\>"}],
  SequenceForm[
  "|", 829, ">=|", 12, "(", 1, 1, ")", 0, ";", 0, 0, ";(", 0, 0, ")", 0, ">"],
  
  Editable->False]], "Print",
 CellChangeTimes->{
  3.624028674928502*^9, {3.6240287620816393`*^9, 3.624028769339015*^9}, {
   3.6240289744372873`*^9, 3.62402903249852*^9}, {3.624029065021945*^9, 
   3.624029150329851*^9}, 3.624029584227729*^9, {3.624030078517568*^9, 
   3.624030106048148*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"|\"\>", "\[InvisibleSpace]", "660", 
   "\[InvisibleSpace]", "\<\">=|\"\>", "\[InvisibleSpace]", "11", 
   "\[InvisibleSpace]", "\<\"(\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\";\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\";(\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\">\"\>"}],
  SequenceForm[
  "|", 660, ">=|", 11, "(", 1, 1, ")", 0, ";", 0, 0, ";(", 0, 0, ")", 0, ">"],
  
  Editable->False]], "Print",
 CellChangeTimes->{
  3.624028674928502*^9, {3.6240287620816393`*^9, 3.624028769339015*^9}, {
   3.6240289744372873`*^9, 3.62402903249852*^9}, {3.624029065021945*^9, 
   3.624029150329851*^9}, 3.624029584227729*^9, {3.624030078517568*^9, 
   3.6240301060497828`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"|\"\>", "\[InvisibleSpace]", "516", 
   "\[InvisibleSpace]", "\<\">=|\"\>", "\[InvisibleSpace]", "10", 
   "\[InvisibleSpace]", "\<\"(\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\";\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\";(\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\">\"\>"}],
  SequenceForm[
  "|", 516, ">=|", 10, "(", 1, 1, ")", 0, ";", 0, 0, ";(", 0, 0, ")", 0, ">"],
  
  Editable->False]], "Print",
 CellChangeTimes->{
  3.624028674928502*^9, {3.6240287620816393`*^9, 3.624028769339015*^9}, {
   3.6240289744372873`*^9, 3.62402903249852*^9}, {3.624029065021945*^9, 
   3.624029150329851*^9}, 3.624029584227729*^9, {3.624030078517568*^9, 
   3.624030106051435*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"|\"\>", "\[InvisibleSpace]", "15", 
   "\[InvisibleSpace]", "\<\">=|\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"(\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\";\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\";(\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\">\"\>"}],
  SequenceForm[
  "|", 15, ">=|", 1, "(", 1, 1, ")", 0, ";", 0, 0, ";(", 0, 0, ")", 0, ">"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.624028674928502*^9, {3.6240287620816393`*^9, 3.624028769339015*^9}, {
   3.6240289744372873`*^9, 3.62402903249852*^9}, {3.624029065021945*^9, 
   3.624029150329851*^9}, 3.624029584227729*^9, {3.624030078517568*^9, 
   3.624030106053075*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"|\"\>", "\[InvisibleSpace]", "395", 
   "\[InvisibleSpace]", "\<\">=|\"\>", "\[InvisibleSpace]", "9", 
   "\[InvisibleSpace]", "\<\"(\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\";\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\";(\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\">\"\>"}],
  SequenceForm[
  "|", 395, ">=|", 9, "(", 1, 1, ")", 0, ";", 0, 0, ";(", 0, 0, ")", 0, ">"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.624028674928502*^9, {3.6240287620816393`*^9, 3.624028769339015*^9}, {
   3.6240289744372873`*^9, 3.62402903249852*^9}, {3.624029065021945*^9, 
   3.624029150329851*^9}, 3.624029584227729*^9, {3.624030078517568*^9, 
   3.624030106054721*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"|\"\>", "\[InvisibleSpace]", "295", 
   "\[InvisibleSpace]", "\<\">=|\"\>", "\[InvisibleSpace]", "8", 
   "\[InvisibleSpace]", "\<\"(\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\";\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\";(\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\">\"\>"}],
  SequenceForm[
  "|", 295, ">=|", 8, "(", 1, 1, ")", 0, ";", 0, 0, ";(", 0, 0, ")", 0, ">"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.624028674928502*^9, {3.6240287620816393`*^9, 3.624028769339015*^9}, {
   3.6240289744372873`*^9, 3.62402903249852*^9}, {3.624029065021945*^9, 
   3.624029150329851*^9}, 3.624029584227729*^9, {3.624030078517568*^9, 
   3.624030106056394*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"|\"\>", "\[InvisibleSpace]", "214", 
   "\[InvisibleSpace]", "\<\">=|\"\>", "\[InvisibleSpace]", "7", 
   "\[InvisibleSpace]", "\<\"(\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\";\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\";(\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\">\"\>"}],
  SequenceForm[
  "|", 214, ">=|", 7, "(", 1, 1, ")", 0, ";", 0, 0, ";(", 0, 0, ")", 0, ">"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.624028674928502*^9, {3.6240287620816393`*^9, 3.624028769339015*^9}, {
   3.6240289744372873`*^9, 3.62402903249852*^9}, {3.624029065021945*^9, 
   3.624029150329851*^9}, 3.624029584227729*^9, {3.624030078517568*^9, 
   3.624030106058041*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"|\"\>", "\[InvisibleSpace]", "24", 
   "\[InvisibleSpace]", "\<\">=|\"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\"(\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\";\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\";(\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\">\"\>"}],
  SequenceForm[
  "|", 24, ">=|", 2, "(", 1, 1, ")", 0, ";", 0, 0, ";(", 0, 0, ")", 0, ">"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.624028674928502*^9, {3.6240287620816393`*^9, 3.624028769339015*^9}, {
   3.6240289744372873`*^9, 3.62402903249852*^9}, {3.624029065021945*^9, 
   3.624029150329851*^9}, 3.624029584227729*^9, {3.624030078517568*^9, 
   3.624030106059689*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"|\"\>", "\[InvisibleSpace]", "150", 
   "\[InvisibleSpace]", "\<\">=|\"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\"(\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\";\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\";(\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\">\"\>"}],
  SequenceForm[
  "|", 150, ">=|", 6, "(", 1, 1, ")", 0, ";", 0, 0, ";(", 0, 0, ")", 0, ">"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.624028674928502*^9, {3.6240287620816393`*^9, 3.624028769339015*^9}, {
   3.6240289744372873`*^9, 3.62402903249852*^9}, {3.624029065021945*^9, 
   3.624029150329851*^9}, 3.624029584227729*^9, {3.624030078517568*^9, 
   3.624030106061377*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"|\"\>", "\[InvisibleSpace]", "101", 
   "\[InvisibleSpace]", "\<\">=|\"\>", "\[InvisibleSpace]", "5", 
   "\[InvisibleSpace]", "\<\"(\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\";\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\";(\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\">\"\>"}],
  SequenceForm[
  "|", 101, ">=|", 5, "(", 1, 1, ")", 0, ";", 0, 0, ";(", 0, 0, ")", 0, ">"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.624028674928502*^9, {3.6240287620816393`*^9, 3.624028769339015*^9}, {
   3.6240289744372873`*^9, 3.62402903249852*^9}, {3.624029065021945*^9, 
   3.624029150329851*^9}, 3.624029584227729*^9, {3.624030078517568*^9, 
   3.624030106063044*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"|\"\>", "\[InvisibleSpace]", "40", 
   "\[InvisibleSpace]", "\<\">=|\"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\"(\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\";\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\";(\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\">\"\>"}],
  SequenceForm[
  "|", 40, ">=|", 3, "(", 1, 1, ")", 0, ";", 0, 0, ";(", 0, 0, ")", 0, ">"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.624028674928502*^9, {3.6240287620816393`*^9, 3.624028769339015*^9}, {
   3.6240289744372873`*^9, 3.62402903249852*^9}, {3.624029065021945*^9, 
   3.624029150329851*^9}, 3.624029584227729*^9, {3.624030078517568*^9, 
   3.624030106064694*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"|\"\>", "\[InvisibleSpace]", "65", 
   "\[InvisibleSpace]", "\<\">=|\"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\"(\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\";\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\";(\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\")\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\">\"\>"}],
  SequenceForm[
  "|", 65, ">=|", 4, "(", 1, 1, ")", 0, ";", 0, 0, ";(", 0, 0, ")", 0, ">"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.624028674928502*^9, {3.6240287620816393`*^9, 3.624028769339015*^9}, {
   3.6240289744372873`*^9, 3.62402903249852*^9}, {3.624029065021945*^9, 
   3.624029150329851*^9}, 3.624029584227729*^9, {3.624030078517568*^9, 
   3.62403010606628*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"|\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\">=|\"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "8.746100370356269`"}], "\[InvisibleSpace]", "\<\"(\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\")\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\";\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "\<\";(\"\>", 
   "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\")\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\">\"\>"}],
  SequenceForm[
  "|", 1, ">=|", -8.746100370356269, "(", 0, 0, ")", 0, ";", 0, 0, ";(", 0, 0,
    ")", 0, ">"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.624028674928502*^9, {3.6240287620816393`*^9, 3.624028769339015*^9}, {
   3.6240289744372873`*^9, 3.62402903249852*^9}, {3.624029065021945*^9, 
   3.624029150329851*^9}, 3.624029584227729*^9, {3.624030078517568*^9, 
   3.624030106067855*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", 
   "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{
  3.624028674618971*^9, {3.624028761774847*^9, 3.624028769118436*^9}, {
   3.624028974129301*^9, 3.624029032191221*^9}, {3.624029064622388*^9, 
   3.624029149837748*^9}, 3.624029583878356*^9, {3.624030078189752*^9, 
   3.624030106069322*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Abs", "[", 
   RowBox[{
    RowBox[{"Eigensystem", "[", 
     RowBox[{
      RowBox[{"H0", "+", 
       RowBox[{".25", " ", "\[Sigma]q\[CapitalSigma]Q"}]}], ",", 
      RowBox[{"-", "8"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", 
      RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "[", 
  RowBox[{
  "[", "\[InvisibleSpace]\[InvisibleSpace]", "19", "\[InvisibleSpace]", "]"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.62230882881426*^9, 3.622308913464615*^9}, {
   3.622309074246945*^9, 3.6223090871825953`*^9}, {3.622309127763479*^9, 
   3.622309282350885*^9}, {3.622309314324955*^9, 3.622309325046178*^9}, {
   3.622309705107452*^9, 3.622309705530507*^9}, {3.6223100207494583`*^9, 
   3.622310021849845*^9}, {3.62231013024069*^9, 3.622310154448812*^9}, {
   3.6223107155829153`*^9, 3.622310721826291*^9}, {3.622311482892037*^9, 
   3.6223114848561487`*^9}, {3.62402441917389*^9, 3.624024419295231*^9}, {
   3.624025532701641*^9, 3.624025633548744*^9}, {3.624025827390788*^9, 
   3.624025910006926*^9}, {3.624025999105044*^9, 3.624025999497026*^9}, {
   3.624026070263736*^9, 3.6240260752864923`*^9}, {3.624026195296299*^9, 
   3.624026207319894*^9}, {3.624026713334249*^9, 3.624026716230051*^9}, {
   3.624027266295039*^9, 3.624027280887562*^9}, {3.624027324641789*^9, 
   3.62402732763301*^9}, {3.62402745164808*^9, 3.6240275003855762`*^9}, {
   3.624027532705385*^9, 3.624027589896487*^9}, {3.624027625136716*^9, 
   3.624027764359767*^9}, {3.6240278129541817`*^9, 3.6240278401616993`*^9}, 
   3.6240278718935823`*^9, {3.624028046889556*^9, 3.624028051863002*^9}, {
   3.624028658003826*^9, 3.624028664654319*^9}, {3.62402869650412*^9, 
   3.624028697934277*^9}, 3.6240287515433493`*^9, 3.62402878184788*^9}],

Cell[BoxData["4.2357602761260054`*^-18"], "Output",
 CellChangeTimes->{
  3.624027875763809*^9, {3.62402802264882*^9, 3.624028052256349*^9}, 
   3.624028450929286*^9, 3.624028665597822*^9, 3.624028698809894*^9, 
   3.624028752674232*^9, 3.624028782946336*^9, 3.624029584410832*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", "GS", "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.62230882881426*^9, 3.622308913464615*^9}, {
   3.622309074246945*^9, 3.6223090871825953`*^9}, {3.622309127763479*^9, 
   3.622309282350885*^9}, {3.622309314324955*^9, 3.622309325046178*^9}, {
   3.622309705107452*^9, 3.622309705530507*^9}, {3.6223100207494583`*^9, 
   3.622310021849845*^9}, {3.62231013024069*^9, 3.622310154448812*^9}, {
   3.6223107155829153`*^9, 3.622310721826291*^9}, {3.622311482892037*^9, 
   3.6223114848561487`*^9}, {3.62402441917389*^9, 3.624024419295231*^9}, {
   3.624025532701641*^9, 3.624025633548744*^9}, {3.624025827390788*^9, 
   3.624025910006926*^9}, {3.624025999105044*^9, 3.624025999497026*^9}, {
   3.624026070263736*^9, 3.6240260752864923`*^9}, {3.624026195296299*^9, 
   3.624026207319894*^9}, {3.624026713334249*^9, 3.624026716230051*^9}, {
   3.624027266295039*^9, 3.624027280887562*^9}, {3.624027324641789*^9, 
   3.62402732763301*^9}, {3.62402745164808*^9, 3.6240275003855762`*^9}, {
   3.624027532705385*^9, 3.624027589896487*^9}, {3.624027625136716*^9, 
   3.624027764359767*^9}, {3.6240278129541817`*^9, 3.6240278401616993`*^9}, 
   3.6240278718935823`*^9, {3.624030068343514*^9, 3.624030068501148*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.006944444444444445], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
DicVF7qX6pxmM/VfKhq1424tV2Dkn4q2uCbu8ffE/5xUTJ8zKEhQSOvzU5Ep
O2+OexzlNyWpYBX9bXyXTfyrSEXcR6mmeZ6M/FOh/Lta3+kt0/9PxeTqHfYK
ssTPhlS0NGfa/9MjfjalYuQSs1l3RtP+balQfTn2gYwsk/+lIvDfp8z5Nwnf
Xom8R7/ZV8+855Ti4LKQo+8zSK2/XpDhwC3t4YglP737x3IceGc4c110KN+W
5+BqytvyaL03dF+Mgy8RM3u6ZQb0j5U4sF90z3i6O93vUebg51YPrYDPlI+p
cHDHYFGH9l7mfh0H7N+32RW1FO/UOXB1PBavpEn0a3BQz61jre6keKPJQWjU
IMPbe+n+mBYHMX37DE58JP1bzMFRueVNBoqkzzoS+sIGjHtWQf22lRxk3P6w
fHj1Unq/wIHipcNekV4R/eN1HNwaVyOtL3Winx59DpZfSwj8dn9I/9iQA089
y5JTPLJHEw7eqhUcGRZN/DXjIK+02Hr1dIov5hxoJZ7anX2Z9NOCg4mKOzP5
V0heVhzs9NjnUrSB9MuOA6F9ucNARh+dONix64LpxIW03o0DAxlzS4uB5H89
OJimECQ/h0Py9uEgZeOccMv7jv34BnCwOuylwdOCk/3jEAk+g5SSqnTrSP85
OP1R2iEnjPgXzcFaR/lFh02Y8zAOlNWK653PErwkDnzPfNO5cpL8L4eDzw/e
TLbRIXp4HIwbsqetIJDuH4k4eFjgOduQRfLP5MAjRlTqI2bei3IAwYjWrvG0
/jgHs3fN6w5UJHpzOJgx9oPi2PV0XzePg0sn7DS5h+vJvjiIuzPGfdtb0qdC
Duqu7F9VuJrpt3PQFBGnOPox+bsyDmqqVRofVhJ/KzgonO0xYv1ZildVHMx9
UvZ36ETmPF4Cr/28jsEKml/DwbsL297H6lM+WyvRn91vlyqG0vw6DqziBqm/
D6D5DRx8ZM+cu+Iu+a+Xkv37Oi5/i2fuJ3EwtKGxuzKf5jdzMMr8/EujUXTe
18ZBW3P7rHhL4kcnB6OXLx6qZUb0dnNw2Ohp1b/JtF8PBydXtaz410v+oVci
T9vkMXbF5A/7JPwqcB0zmEPwpLj4O3LPnr584o8MF58qVc/MUGP6gVwETH52
aJ4azZfnwqF22ezM56RvilzcPGoXMmERjZW4EM/5yJtpTfxQ5uLR8mOry68S
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
kuN7NFZvCqbfmxFi8HGH9gM7D1L9L0Rcyff8i+ZS9F5biCKWfeuuqaQ/LyXy
klZJ0x1L+t0kxLIPP2o0bSkeNAuxZu+6tlJnpv4XQq1OmKr9lLF/IXKSv8xx
kGPO/4S45t2yqSGX6OuR7FecevLEDdq/VwjniJ+OnZ1M/i+ETfW5RSWTmN8/
E2Gu8+Jd5kx/QEYEo0yLIt5H5j2wCIUDkt44D7Lpp0deBE0nvQj1/EN0/i9C
9L+ezXOLb5L9i9BXZaGwOpz4pyyCj8nDQdXajP2L8GJFZa4wh3k/LEJc+N5g
Q2vyN+qS9SvUglLXMO/JRODIPbAwN6Z8X1OE5x/5Tv+CmfelIoy/8Knr9D+y
l8UimMzPrbb9TfftdUTw96l9xGd+H3SlCIlKF20OqNHvsUCE0H1bZi2fyPT/
JPjJXbvl8F5E9i9CmMveR6/T7pD9i/B7hsUEqYukbyYiLL4390TiFub8T4SW
htOhk8fQ/uaS/V6v9y7cS/MtRKg3/jmpfT9zf1EEjznqE+WvE752Itwev/5U
pTRz/ieC0ufp/wV4k393E2HYMRuVQf4kLw8RAvNc7g7yY+p/ETKuODRrOFD8
DBDhnrRy4rBfTP0vQqpiZlYrcz+LJcKG8r/7tu0ifYgWIcRBr7XhJ+kLW4Jv
xIT61NeUbyWJ4LerbZhoN8mTI9GPBrnOr84kb54Iq58Pytn/irkvKZGvfoHN
48+EX6YIxdfi69vuET1ZEvpevvM7UM+c/4nQYTilK7abqf9F8PU7NLRLk/xx
ngjSm9ul998mePki5Ol0hi1uIvoKJfybtSJL9w3hVyKCRui7mndLaX2ZCNaL
Pz7gVDC/zyvCR0fRBuNvpB9VIrhc+uYwq4/4US3Cka4hKWs+0P2RGhGW7AsO
WvSzr99/1orw80zM7iWHib46ES7dH2Xh8Y76xw0S+Qe1xauIid6XEv7U+65a
fJS5vyOxj3uLXG6tZuK/CGlGk38rMPGgTYTc5JX1w7cTfzpFmNK8ek73I9q/
W4QvMTKbFe0Y+xchXHd7rZDF5P8SfTj4Y2KYNtlTnwjnBgzbLPWCxlJiBLUP
d1jL9AdkxMh8ptjjcIz8h5wYW4+vWxa3hPgpL0bkyegzK6JpvqIYC2xuJBfG
Ev5KYqSmLxF7bWHO/8Q4ETbK9H4UyUdFDNYm1+r4Tcz7ETG2Le/7PeY9rVcX
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
83/DkBCxbJ3HONKXaoYPn4rWfVlcT/V6GQ77Pu8zcLf6v8/vFfvSVjAlp9rz
3/1SPcOdVKNT13VjyP8zZN5pX7hfxkc0Mhzo1qZjcpfOR5oU+9tn0OtPx8kf
NzM80W/y8pN4Oa0MvnO9s2bspvObNoaTBR9O/5BC9r6dwTrrZovDRPq/E8fm
npdT81cRPTpzrLUZavx0DD135Si4XW3guYfkS4Wjppc4eHU5jU+NY3SQRqBZ
AsmXOkeSlv5Gn6/EHw2OX2cNc57f5Ef+nyPdfGnshnSy1705Rqnfun5Vrmc1
OTr9Mkkl2JH4p83RO6P6jV9lx7/06svRMXiIw6JvjKm+IIfx5Gan/mpryP9z
ROduao93ofMEAw42cN8v8WtpfEYcCWlWtsdfSvxfDo3HXyeFhtJ4BnKMafI8
cVrWHxzEkd2j5XJcAOm3GcfpGsP6mDPk34ZyFBnaN9+YTOM159i46K+6sUVk
z4Zz9An8s+CUhdz/c7ROGlBU5Uz9WXIkLt2vOUiN5G0Ux7jR+9YYNZO+WHOE
BEaGxUXRsy3H3pTimNuJ8vyfY8cHU8uOmxT/PZbjq9fR7cslXrwDB3L/6hNS
0/9fejlyfP6lwHSexEsEx7vlTmsaZHzPBI7dFedbdst6IM4cbmWrDkzwp/5d
OMoXL7YYLOOVXDmq7x1/E/KYvndX5meZ6GX9mdr35PhpelZlz49Efy+O39rH
HgjqoPFP4bjTOW3eh0aS32kc1+/tNEkZLespcey67J/zUuIlzeLYono7/Wik
zP9X5HNJufl9yPt/jnUuZoVPLKk/H+W9z/HBOoUk734cXhENX0dGyPg/Dkfj
w4FLvWT+P8ez9wVNz2LJ/i3ieNvgesH/pdz/cwSb51c+GkX0COJodOJrbhwh
exCsPKOo94rFtB4L4cjt0Tu0No6elyntNZtqBTyX9ds5fqjovtdW1gv4WeFf
SbzfbonvFsZRWLjsy8UWWp+FK/yfsOb83Vckb5GKvt4d2jx+CdnTKIWe7Nzi
WmcaTzRH8r3bbvsXUHx9DMfg5Wc3mQfK+q8cx5s9piXJ+6o4Dk/9DJPn0dR/
PMfj5freLpXUXgLHjZ6f3N3XkL9IVObDwlZ/DJX3/4o+Feat0vaj/7dy+A/Z
qLopiP5P4kjb2FHA8qi/HYq+vp7bvlPiJSdzHMrRa0/1Jnu6m+Piy+nfnnAg
fdmryEdHTXuFj8z/U+xLo8NKp2aSv/0c5rrh7csPy/g/jhFRXe1X5RK9Ujlm
2HrlZBvL+nMcTobuz3ZIeTym0L//d2Wp12l9eULh35mWCa7PSL9OctR2n5O6
coKsT8lhV3Ih+IUftZ+h6HOlXpnhHlmvSpGnuZNdg28T/89w/Pg4JDvFleiV
ybH694GTzCJJvn5T+G36SaVgrsT/5Zj1VYvrqhC/sjkOD4j9PDFQ1rfmCGp4
5OFSLM//OVyfPnsx2pnkO1exz4FpUeXx1F8eh/5Uc4/h5dTfFY752a22qtrU
/lUO692vDCtk/ls+h+mKnTdqtsn4P0X+bsxyE51J3m5x/F4+pirgFfnvAoVe
IUvPOc2R9bIVe851l97fLvH/OQ6c2uPfECDz/zj+89bmuIob6cN9RT6NanwP
1s0n/6/YH8fGXX9dpvE84ti/fVHnrsk0v1IOPbdz03Nj6X2Z0t6hcoslQ0m+
nnIMG8G2eDvT+qBC4Xe0jyPPkef/HKFe82ynSH/1nMNDrOrfvETi/yr+5X3k
6ZY0ef/PcdvMt4X/TON9w2FZPO+uxSniV7ViT37Ua9g0lfqvVfzh7fPlIcNJ
Xt4r/DjZqOEr68HVK/zwNrJ7OFni/3N8V1dROKafxP9R5nvucPqlo6QPTRzt
087va0yi/VEzR1ZUQm5EBM2nVfFfN09bZgSQfW5T/m/ZEBCsS+uBdo687luW
+sl68Z0EfD62RPxdIOP/BKwWZi2zsif96SpQfC1ry1BO+qsiUONiYug9kvip
JnDb7vPfelNofa4u8MQ1eaVzD9IfDYF7BiffFpvQerungMXsl+em7ZH+X2BN
8bjY66/IXmgKHLB6O+AbGa+nLeBp5u969BK97ytg03JlxC1Vsve6AmEX/+Ql
r4g/+gKbE15nbJHnewYCo1PwYKeM1zESGJ86rqpK+jdjgZm31uX1kvETAwUe
ueqduiTvNwYp40vrnvLwJMmXmcCeXofwSfr7oQIrv/oVOnCar7nAN5nP4yfX
y3qlAgsPvXIKl+epFgIf65q0vsh8GkuByOLA9l1mNN5RApZxjbZpy4g+1gLt
MZpD1neW+3+BSfPX2r+S+VP2AgP/s6Qk/STxZ6xASfP2BUUO9OwgsLVy+kIb
mb/gKJCkGlBfKPHpIBD7ddqKOUEy/l+g14o/3lmB6hE4C4x7+GTcTomf6iLw
MiPA7ssJsj+uAg4/HcntO4D44y4w/7Ll8tJhcv8vkPJ83dSOMon/I5BR9HGH
t6yPOkWhn4ttbZiMT54msM5wf3CUrPc3QyD6wuD+Zj1I3mYJjPHZNHmkHdF/
jsDPpcdulV0g+fUWULf5fbZtPM3XR6G3ruu2bTL+wE+g8to+SxtZr81f4Gaj
063Wemp/gcAtZ/tdx1/QfBYJhLbsHaOlSXjpAQI5ps0Y3lvWZxXYFpv2x4rn
Ev9P0Y+KBS5Fcj0XIhCz/vyQh0cl/r/S3hs1U/N8os8K5fn76pqly2T8v8Ax
a+syx+30Pkzg2rhDk0rbaP0ZLjCiqIvpgUPUf6TAg2P9korUSd6iBN6OMstz
kPXjogW87YbkaKsTvWIU/XbWH/HwgMT/E3hvvaN2wU36Pk6goXXmkZ3vZD04
Rb7CFxn3GUvzSxD48Vpf97RJNJ9EgV0Dd83sfoS+36zI29bQTY3bJf6PgN10
V2v9lRL/X+BVvIUbJP7CDoHaOf2mlkl9TVbom2A1b4gZ6dtugc8/GB1pv0Tt
7RVoenwy+PdhEv9HwCnq/VMTe6LXfgHHpA9G0dby/l9A7+7bkQWHiZ+pAsbj
m20iepE/P6LQQ3uXc6LMLz0mwKuOlgdIf31CwM3T/Mi2UrIvJwV8bYKsAhJp
PukCqapXy8c9k/g/Aq7vPC+ckPH9XMA5+excdScZ/ydg8PG9i2Z3Gk+mQL9z
KD/rS+u73wS+W6+j0c2evs9S5v/kuvs2eR6SLdCmd7hLzH1vh/8BB7aOEw==

     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 3803.}, {0, 0.9997038440344256}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.624025612295404*^9, 3.6240256350166492`*^9}, 
   3.624025771484263*^9, 3.6240258305437603`*^9, {3.624025861177826*^9, 
   3.6240259115581923`*^9}, {3.624026008135366*^9, 3.62402600840238*^9}, {
   3.6240261433869667`*^9, 3.624026143736191*^9}, {3.624026196101264*^9, 
   3.6240262081425123`*^9}, 3.624026414656836*^9, 3.6240266447115717`*^9, 
   3.624026716707364*^9, 3.624026876411508*^9, {3.62402727123951*^9, 
   3.6240272813659477`*^9}, {3.624027526630684*^9, 3.624027547088574*^9}, {
   3.624027580461471*^9, 3.624027590496809*^9}, {3.624027626390538*^9, 
   3.624027713410776*^9}, {3.62402776113927*^9, 3.624027765152499*^9}, {
   3.62402783625419*^9, 3.624027873379352*^9}, 3.62402802293183*^9, 
   3.6240284516454372`*^9, 3.6240295846131983`*^9, 
   3.6240300692751513`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztW3tQFPcdX7gH+IyC+Eq1NtM4Zloz00knTmzaOp2O/tHpTBJtmpmmpsbU
IMZHFQN3t/cIyAGCIAiKISJGIxbjaERQR4Sip1ABlfKaw+PlccDNASfnnffe
7f32twt35+7tAZuGCjNwt/f9/X6f7+P33d9nf4/945bY6L/v3BK7feuWFRv2
btkTvX3rvhXrd+/1iHghCBISjSBIzwoEXOOeS/ID9/zh28EHkLBfryG+Ivi4
2xzfdjXvURIqahOjCUnZFxuERieo6dw0VF/0MCNB0ahQJElzrqh5ZjejfDEB
t3Cxe7hWnSrNn9NpJZSNFYZJvpAenivrIwl4nufTnqU9J3bFRMcgPFtMTAwS
eXvvwVreEzcnXiARgfWEPXFy4g6ygNCzOBx3GI7UFGU1JimkbSiqyE0/e2dm
vx3jqldY1HDVO7DzkTeJL6DT/a7p/pEacXJZlMbkCsOchvM1edJPD1UNLLcP
3n6Uhua8XGN0zcAcunvXleiGvCbzcie9HMFwfBEBu8g/tZa7xgYVSAUSRauD
UzfI3OJ7PrH15ua8G7LMO4JBF84jxJGcujOfXlXo99NB0LGlAPYvxppDN8SZ
t8L7HZgQdw6dvn8ClSWW9C23cucduzrdu4PceRf1XHKvsXQ0rGrssxGh9kjf
tHV+VSNNVn3Qde9giSSnNcSCEdnzydBt5XlJnmaTvp5O3o5YmZIb2zRM24QJ
KqAKpuTm0g0EDtBLQCecrC1UXEGPlK5oGnCQ2Nz6ExFQF7d+jSabY5f+ZtG6
i2ozhbvOos5UiVLvv99Ty5lv7Orq3+pv58w9Mrd/RXy99Lb10bFacVLFFy2X
Ew4pinsQB9Twm2dth6tFKdUKNa28ljfsoQb6RHZK+6+MBSuwDmguz0eHgAPb
SZoMxTHrR9q7RZ3pIumeY+VdoVaMU/vhPSKgUQPH6om6QT6DeQa8gYL7hWiG
vLhT+pg78yE83wtei9hxkr8mZnmU9yNv5Gpbz4Vvj+aVvtxqdES4zJ2VN9Lj
Y5XXdWhPaUKGH8RdUUqNrK2ETl4XOowx5iXaPyaswDroB1icUz/Izp3vtjyq
vJIu3pV+sxfVcedD1HPwhtUW7swn7zAQ+d2G8nTb/pho1Z7Usllam4PLnmBW
g3HZGb7putLZX6pNiEupy0iSakSSA6nZF+rDDQ73Rg/nlYmzm0PMxMDrih6o
SiqWHNds1NPKvbl6iWeMsK3rVzf+9WH1hXa5eOS5YIyYgXVFBtSFc+rXKLFh
vzO3nknMv6QDgweQvmVtz6tGU+6+313LmW/zWdVVv2bo5cw9L+9+4jCoX2/V
WhE3js/E7P2VqnTxnzLrjBuN3PUcu7rhlXbuOs8n3XnzcUtrU7Yif067Fc6U
cWTOMveQqiNNnPlqld7xkvtZR8OlBPH6vGbzMie93GvOtYTnmYTubbtxtvZo
0j7djs9H0m+smAF1wVSfwaSLM5/IW+pnDt0FjVxS8KP6IScfc5uyWs5Jv0JP
tS+zcOgTzIIZTLrmW7n16bcW9bG7aEr5TJ0d82Rab+Xt9PiPk1VDyxzc9xOT
Lg89cZl71BpbGO7sbymRf2bbHhMDFns8/3s3ptUPe6o6Nw3UF7dkyEVdcaIE
WU5JC99EroPQyMk1trmYtb36m5QCnzW2McAwyRfSw3NlPUmeIR462KpTFTan
ycWdYpHk3IEvr8/TWNxceREZWA3H3oBJYkZdcUa3LD6uN26/+GRyYeUsnQ3j
yhsWNVx5Q66wea8PQ808ZNu2bWSS4bD8PW7KyaXQnz/WP61IPvVvWM/9t8Sr
fwAfCO/ZJ8prWaevNUc8tdoRIWwzB3zhoOqHRH0K5Fzutw/wzV+UEsJw4opQ
DK6IXwIamXACsongTSZbXmTfppAt79W19lH3iNd91bY/p5K4JXgQCNxYFAR1
DcpDwY9Q8IsH7z1fXVBGVSZ+CUZawMrgJ1Eg9AUYrexXb1RlKE2pkNkM1nrC
wPVGLfDzN2BluhiEMdfjrO1EHKTD43n1GyGYgEHfL+g4UmDMMi88f6YhNwQX
PXlqp0yAGYOEb1Y97KFMoq5BndVaveltdfcQrMYHP0eID9xksLWP2PM/22p3
vdHZ+wRUmWF3uuBCHZ8SU0Vho2LwE4hBbbg6KfAlWQiKhBJteaAaZQMSDmEo
CAqGT8PVQvqqAsaqIzIv7fwR7aQF4TTN/VymIhFGU5VO+wSbj99PRki4Dybw
7kMiDqM9EKxZ/xtchhAwZ8X4ZMzmkA+LRB7/Wt09+OGd//SsbdMORZksdjKT
BODa2zqmLANy/9THR6ZkvtpX0chem0C9YNuuCO4ReVKUwyF4slk12cunozYd
NXAuazYppj3XEoGbW/rSYuUrS/st1HEgeBqIR5468h73A2gh5sVMJzxCMcz2
00G9QWh2+pzWQOgY0gcWcArT1jqxcksSEu1OOd1o/xw60/4nsW0HF+AC7GcK
RtLlHW9Mhh0fYmsFWsX33odCnNQmYwBjwYI/0+4I3IGAzRi3A3hGN7WkyBIT
xpVpEFYY8TCmRVnCElYtYSNJSbdEBJsLmRbQ6J4KJtMtNzUHmumoTdry/7uo
ITNJMRtpOcmRZq1Vk3sLTWsIMY2cNGFDD4asxoVODNSBOItsZilrzRZp98WJ
ukQiUV987A5r9I59KnHqpRm9jiCG0HkIC3mRzVwfD6qOHlV+0wxC5+0JqyOs
VAapQMjH3aaCh4VJH+TfM641+ymgZ8iAREay7jzM0lZ9PiV789Xqw7ckwUaf
lb9IdGDE6zZtmS7l889Ue1KDRA/MWyS1g/JPDVWZVeLgAv1D321Tc4yZFOXT
UZsSUSMG66D4zPPM6/izobao8ZAC1Ugk0sKUkxVzu6xYUKwTFKe94jSUN6fI
Ty19aHSBkftwyz/lObKzXYgND4J1giU392ZjdXIxeryDkr1h6yqskybdFBhc
QaoJhtwcir7LMu2uuIJX7+ntYW6nMbfhLJiGaELAFI1Q8zwBEcwZiNeozorX
X038TpJ76drprMQOqVh+6mBB+bx29glI8HO1DeamwzclGQ9CTVCrp9NMkcNm
JzF/5WyutgB72vjoS1S5pqTjWbjbMVBUn4/uVpYT806O5mrAmV9YH1eoTqTK
+kSxcWcT8m/O7rGx5u0PfWe+mOPNpCifjtp01MbEfYCN0JbSY22JqFgjlsgK
Ugsr53ZzyH3ud0wPcmskyWVzO63g1UBTVtM52THpmc7gFq2C5T77EW2RXJRY
pifGV4/sl7aukx7uqxAMcMl92O/NLYX3FMrvFqifusMw5+Dx+6flSuVF7SiT
j2N5kpzTgbW3A48vKew7Y3aZ9+2MqfjHoVvCAWdwk8aA1Edy0ipH3+XWRNnX
P24YcMxxWXWld7LRjzLuGsExX+6Yb7Wjp1gtl55Z2mR0znTb9SU1OeLtyn8N
IK5gtATFfDzcbRFpyo53J8bH9sXGik+knKqa1TvNfFO4fDpqUyJq5PFs/5ei
vCkNYXrPnG10gNhz/bHBmyzURI6J8EYXudjgfd8zhDLWHbfxQ4M9QlZi8z9E
A7E3smHPQoKY04GzUfAY13O8KKSi6/+e0KjprBO6Efht8CiWj+lQA93rGTAV
ZgdiM7rA0MTF59w8hBUiDPT1QtDTmIcU4po8Xo6E/Bfe1jxF\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"a", "=", "\[Infinity]"}], " ", "*)"}], "\[IndentingNewLine]", 
  GraphicsBox[{{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
Ucqh72FSegWX3SS7GPyTYVM2WCf9KPHLTkau+eVtigtIvpxk5Nzw1tw/roTO
f8mYrag6Vfcp9UvkJuNI99WQZ2K6j8tPxsKowlebN9H9b1EydFI+rUm9QPfP
pckIFm/33pZP9faKZLgrjnr1QLCb8E/G5WVmXvdLmfuMZDz/t2tgXR3Juz4Z
Ssuqxv/4bE74J6P7QfDZ9l+ET2symr4kfFDtv4bOf8l4M8Ww+Kz8bTr/JSN+
cbnouIEt5X9sCFUnP+86T/crCmyUv5u44cNBit/KbLxp+6td/Yr8rxobIUqn
Jz4sIny12PhPZ4ze0klkzzpsKCxeNaWpkexXn409139gvjCM7J8NwTHB+4fX
mX5FNiIvvRp8MmgH+X82Xt/9fXnhwV6yfzYG/XjzqV8HnQdt2Pjwu8dO5Rzl
W45s6Pionu3+sIXwZyPsyg/+nUu0Pz82Wp8fPLoigvANY2Pms2GfFilQPsVi
IzY+rs5Oh+7b2Gz0s7eSkb1B9WWOdD9uGXcN0kRk/2zc9Tl959dEpj7FxqPq
io023kz+x4bWk07FCefJ3xWx4Thu/srDtuQfStnwDjzXdnsmza9g40S3xpUj
wWP66FexAT07TeTsIfyl3wN3r9u4hsn/2fjYz/OuxSnip5GNMhN3tR0ziF6r
VL7swuopR8lfdErxm56i8WMF+b9eNn5FrtrwUUz1bJkUbGyITr96gfBTSIH6
OuHNB2sXEP4puFYRtn32ObJvtRT4zTHgZrpSPNVKQZ7m/tEd84meTgpk445u
SvrI1ItT8PRy1ymd5cz5LwVsRytjXqYR+f8UjPnlXXGknPTLLAX+zS8FmwzJ
Pi1SMFlW68vjHjqP2qRgxsSzFob9iH/HFKQNydxacY3J/1PQL2nDpX0riV+/
FNxKy7pWNYLsKSwFi3/ZGVkVULxhpWCicz/zTxtIP9kpcNEv0fs6j/wjJwX/
dhi+/fWS5otTUNTmoD5Dm+wxNwU/CkUXfrhRPpqfglfeAbWbOxP6xkUpsH/N
9hzDru+zx9IUZN3+F2y9ivrxKlJgIPtxrZER9a9WpaC6/rjxLtdoiv8pODr1
z62WR2QP9SkY/3WRxa51dN/UmIKaHU6wiyf5tKbA2y124SY54q8zBd1aNaa5
TVSf6U1BU/PNg/nHiR+ZVKj+Kznceo38j0Iq7Kxvt13zpfxAORUbfk20cmlv
69uvWirMd4+2Vh1M/XNaqVCyuPFx4TZHyv9S8SMhepDF0H9U/0nFwayACHld
uu83TMXckUtZ9VeoHwOpMHU4dX/vKzHhnwqbhZLSoYw+WKRijeRR151XFE9t
UrH/99E3S/ikr46peNfg0NXflPTPPRV/nC8vWbaA8PGT7sfr4qnqUvoelorj
rdxDJhLmfUIqZj1TL/91jUf5XyqqzF9kj/xM/VOcVLzVY58y3ZdN+V8qhs+5
NXdWCN0H5KbicM/vTDs36ufKT8V0o53WZWMoHymS8tuhsWNLJNlvqXQ/d5MN
VS3JPipSETjw3uqTXkz+l4pLeZuveIvIn9Sk4kG4Om/ZmiWEv3T+cXf9iRPm
U/6fimPHFLs0tuhS/S8V18U3Xk3Rp37JTil+99i6Z9pmk/9PxU+FjYF3x9D9
hUwa5nsP0Lgwjsn/0pC9bZxyQw3JTzkNLVcl9ao8ym/V0vBdslFdLpf0RysN
y00/B/oeJ3vVSUPpn5+xuy2ofqafhpPKu3fKedQT/mnozqrtWDCJ6jVIQ7Hb
qbjW31QfNUvDfs9kjxvd9wn/NFwr25rTMZDJ/9Mw2X3vl+7bpK+OaYhJOtQ1
04v03z0Nf8e1qJz2I7z90mAm2Xoy/yXJM0w6v9DrP3iTfbPS0LF2Ww3fiO5b
2GkYNMl2cbYP9fNx0qDBMokO8HlA9p+Gh24DLj9dxpz/0rB154nLr3cRv/lp
GF6xNNRWlanXS/m7P6Sl5T3559I03P43IOebJu2vIg3xX3Q4r3Yw+Kch7NjR
D0X7R5P9p+Go8QuzV3p0v1+fht223z5ONKH43JiGGY2vX849Q3i1puFwqO/C
8ccY+09DyE6fK3+/knx603BwflbYeAf6e5l0dKw5bum+gParkI6a/g6FY1RK
CP90hFu90OacjiX802GtVao94yr1l2ilI8l9VqHePKb+l46BCs+6rceRPuin
43tptNNY5n7UMB2Sy409j0MJD6QjX6u/JIY5n5il487tHUX3dGm/FumQXTDB
zdmG6pk26bgwu53XuY38vWM6fi4/+t+ZIUTfPR1/V25amtZM+YdfOgo6hHct
7Jn8Lx0joxQa9tgy+KfDYc9bl8d6TP6XjuUWR8QG1TSfkw72qcITv9MIL3E6
do94OuqrMtlvbjrqsvanF/qSfeenQ2FWaL+dZbReUTruf45SMmcT/dJ02PMV
yy6YEP2KdHQrR57r7CT9qUrHgru1f3XFtF5NOmRSbugcWEz2Vp+OJ2F24e13
aT+N6djh21JzvYXWb03HCP3cyoweeo/XmY4yxcU1c1qof61Xircl56BzymS6
/8zA7HthK3cZHaP6XwbuJb9sP/Cc7FE5AyeOHlnHkrlK+GfgjlZXoEIoU//P
wOZvwx02t1L81MmA3Oy27SoOTP0nAxmNzayxTcz5LwOrVrfnScqY+/MMZNe9
OThpIeUXZhmQ1y0Y8207g38GxspdrfbTYeq/Gbhb+8ekP5/eDzlmQD3NIcW0
6SzVfzNwK2Dg1EFjqb/eLwOd4ZyTZf2qCf8MWH8vOTfmGOUjrAwMlC0QTigg
e2ZnoOZ68NnvXUz8z4DDogURu+YRnuIMuAy7ZP32E+GVK5VPlW+sww2qB+ZL
9+vnoWVXxOR/GZA9c1N/dR291yrNwAbfA9svRjD9exnQNVunKbi8nuJ/Bhbm
9WbEpD4h/DMwdfbsZBcFyhfrM/A26tCcnnNM/TcDepV3jdqTmPNfBn566Em0
LZn7/gx4b494HLyF4nlvBoQ46HxAlen/yISpYtj3jhSSt0Im/oT0pP5Mp3xE
ORNJAT2jJ7yl875aJnTtBvWvGE3+SCsTBSM0K59okj/RycSTA/rZ8h2kv/qZ
GDnq7835k8leDDNhnP/6q2oFxRtkIt3lsXl/BdJfMyn9T/FOW4+TP7DIRIam
1d+sR6T/Npmo65BLKl8fSfd/mfjoVLsh2J3q1e6ZGDCmRjh7D/VX+WUi7lWm
7/1Ykl9YJuz1toX1xpL8WJkQvx+UmhFC8mFn4q2L1sufTL2Ckwkbic+FpkPk
b8SZMLxdYbtvDlP/l8qPP2lO182RdP7LhP+R8PX7CjII/0zEp2rd+V5I+lKa
ifJNYu/pKiT/ikxsLdy98W0nU//NxPNB7fyH6yi/qcnESUdFxRtMPaU+E6/N
t9g9uU54NWaiZZzTqvdrqX+0NRParnPd3s8nf9uZiUtRiZH+64jf3kx80Xw8
ZlUr+Q+ZLKyPMI3f20r6r5CFQYHX9smrED7KWUif5amw9hHpv1oWMvKsMxzm
EV5aWVhUpGL8bCTJTydLqr8Fdgb1tJ5+FponX7PRjyJ6hlnAosGBXpOZ+k8W
TnqPNKk6SucJsyzMPp4vay9m8M/Crm/mvx+cYfL/LPBrn1v+/kfrO2Zh8yX+
FpcDtF/3LKyICHjP/sn4/yyYOE9clfuF8rGwLNSEDZWTVSV/w8rC1oOWlQ1P
qH7IzsLDRGPH96tJXzhZ+K1m8uSHLK0nzkLjK3dXGy3af24WVqrFRe1i6ov5
WRhRpz4o1Ir8R1EWck1sBj27zNR/s+CyepDz5ImkXxVZ6F8c/H14OJ0fqrLw
Y9xNVceB8VT/zcL0UKs64fAnVP/Ngsq66HP8Sz6U/2Vh9Ew9K8tX1K/bmgW7
9UsUQ37S+5nOLJwe5JiQXdlM+GeBW6S/NPAfgz8HVYp3fV4LaL9yHCg9W5i/
uXo+6QMH6QYnbH/NJf+uyIHdhVchdspMfZiDnC1zx16eSPiocBAyIe3Cog7S
DzUO5t1oq+14TWMNDv7dfqY0+U4L9ZdxML8qJkY+mPq/tTm4N6ezNtjbhs4T
HEQOXd14ahb1/+tJ6SW3rw6xZvqROVgSodU0+Sv1C83jYE/yrj0Xgui+1ZCD
sjkLXp5m+m+MOBAZOWep8KheAA6EhycdHPaJ9MmEg7+L1tRejSO8zDh4sd5s
kdMGynfWcuD17+eUI0fIH1hwUOFaku+6ke4PN3MgWTLmLGteOsUrDqLn3N+l
WU7njW0czFEeuiG6jPpvHDlQvtV8YXEcvedx4WDb/Jb29i5Zimcc3D2Usca9
//6+9b2leJX4XNran8lvOQhP33fy+meylyAO8mZO8wnwZ+odUvk2Jdyx0iH7
iOLghEX5aJlKGrOkePSLabcKpX7FBA42L3v4i3uY4iObA/mcry+fJFA/QToH
T9qt3M6GTKV+RQ7am7f/OHOQ+ukEUrwGWcV8sqf3OmIOhqoNU3VZlNu3Xg4H
K7Mcjnd6MfVTDj6fevf77zOKD3kcaFzKLPabQv4kX4qn7JvvGnyKrwUcHNoR
5ZK8jORdxMHEcXvM9oQR/yUcJBeYjih8wPhbqfzmJo/+/YDeh5dxUGA3sf/3
/kz85WBc6/HvlaP1+saVHCwyXhquO/4G+WMOxO7+sVGPSR+qOdj5b8+bucZ0
v1DDgYetjceiKvLftRyw49zPm0joPrSeA8MxsucPMPWnlxw415/QD3Mje2jk
YPbSrHlFhXS+beIgyuxb2kC5ILJnDpoKZApybOk9VIdU/xOOXB/7j/qlOjno
qH7X2vSe+v+6pfaWlJJVkkn22cvB4vyRlsF5pP+/OZhcojD+WBHJS4YLX1nW
yAU3SB/kuOg3cOgW92b6rsBF5p+csYOY+KvIRWfxDvsPBnR+V+ZiwlnN62tf
U/+GChdRCbHNSgbMfREXHJmS0QtEtB8NLu4dfDekzpipH3Lh2LgrxfsYyU+b
i53hU+pqlEm+OlxsP2jQMGw37UePiz0vw8dOb2Pqy9Lxxp0Jqgp0vzWPi+l7
pqstP0b+25CLuj3t0wZqkb0YcdEy9zkvfgDJH1zM2jdCmd9K8dKEi/nxzzzH
3CZ/ZsbFS7/ygeUSip9ruYj+PvTqtXDmfoIL84gHc9cWk//YzEVbs9IY8TuK
DzZcPPJtTrcbQfhv42LpPqXLU50o/jhy0VClGLy/he6LXLhQeRKV5swiebtL
8TBNcdO1pHjhzcWJB383CMRMfYOLAR1rhh9yZ+yfi81/Zi9tW8Tcd3BxaX3x
sr+XyB6iuAhaYT/+90fSNxYXoaKdiq/MKP4lcLHslGxUVA/hxeaiZ+fXCpMz
NE7nYtF9Sbj9IaY/RirP62H5MSKyVwEXD7zi/OP2U31azMXjb9b5R3zoew4X
ORa/pwt1mPyZi7mBJ5SLYwifPKm+xf9df+MSc5/GxbNrx1x64yl+F3DhsWFp
48ynTH2Fi269VN6MLST/Ei5mXzkcmj2G8uFSqX6qPOp3UUR4lHHRvPOYS4ka
0z/KxYZT974PcJrWF28rubDCB+3h6vT+qYoLT35uQsQfjb5xNRduw1ZfHrGf
3tPVcKG4dfx0mcPUL1fLhV+0cUPgXeofqOdiKH9nuMNf4u8lF+dnr/m8spb4
a+RiwRN7la+nSB+auBD8MHbz7CH5tHLxwWPDAHE1+csOLk7p6k1smMHc73Hx
Y3aJne1I0pduLv7enJbutJveX/RK5XX0nbpzyIm+/f/m4rk/tBpjqN9dhocy
3oSukf3p/aMcDy9OXv32OZ36KRV44JwRb3+0iPpNFXmwff/N4ksN0VPmIRfJ
Gr8XkD2o8HB6Z8zcBYOYfgEelhhFPjGeQed3DR5Yl77l2tqQP9fiYfY67xCP
4aT/2jxcDPefe34+8afDQ3tCdum0OooPejyYHDp3uUKW3pPq86TnkdJVqdb0
/ngeD6Xy02aZzaT7IkMePi67/9bek/ylkfTvf7z9co7L9G9K+Vu/b9xtZSb+
8/Dq/GatNSakP2Y8CNSWJb3VIH1Zy8ORr3N7UoppPxY8DPB2ObFGjvR7Mw83
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
j98CjFNb8jXtJ+UjMtl4cvJkfU0t5UNy2Xg0NW4j+x7pk0I2Shu+JpyrIf+g
mI3ywAen4irIvpSzcWehYfSqoUz+n43g6nah3380VsuG5kyds1viKH5oZOPn
46PjU17Q+lrZmJ7W72taJu1XWzo+tvRs50TylzrZsD0939xUnuKvXjYy37xh
J5WSvepnI3nAsK0vjhL/87Lxb67HrXMHmH6TbOT6HZMfZUvzjbKxPvR6+zdt
Wh/ZcLVc++eFM/Fvkg0DVePx812Y+l82av2dDi9qmk72n432Q8vvyX0mfiyy
we2356v8Tyb/z4Z6f3btTRmqT9lkw+u8Sj+LP/T327JhVWNZUMAh+Thm497t
B/61y2k/Ltnwn600wqof4e+eja13LH9tT11O9p+NnNLSHqtrzPk/G2GjZKZM
Y/qpg7LxTnDHf7Ap0++SjeUnl79VOEX6FZUNRQOd+EM6NJ+VjcRGWbkKbfr7
hGyE5FeNrDozuS/fYGdLz0NOF581UH9vejbi9Vp1/pNXofpfNqaxV1m/6cel
+p8UX4l17Vv/UVT/y8bJxDI9X6Z/KkfKj3+/o9fjKD7kZuNZu+oH65+Ef142
GmUt7xxuIP+VL11/Roynow7Zb0E2oiO/p6Yy9lsk1a9fkz/G96f6e0k2Zvmo
LW6aQvGtNBs2q2ZNEDwl/sqy4dy5+qrzEOb+Rar/+5+mDPxOv/dRmQ1jo2Eh
8kfV6PyfjaLq2sXem6hfuTobSycN4528SL8nVpONcYOU3JTK6T1vbTY4SkLj
jo1Uj6vPxo69qapz9pH9vsyG0qb1f0VWtN/GbOSZxS1u/k3+oSkbhVNm3XfR
Jv/VKsW7dSgvajrpd0c2Vm12u7M0i/DszIank9qmWj+6b+3ORuiHzOm6aRRP
erPho/Pv/pkBS+n8n40P647rFtqcof4/IXpf2458q7iQzv9CzMmRL3l+ppTs
X4hClxhZ16Xk7xSFcLR73RUbxtwPCXEmwelhZn/CS0WIF4c0PQVjGfsXwry5
/sWcCcSvhhBv2Zmsi0z9TUsIlRXyb+cZkP1pC6HQcGjJBCPSZx0hyndt3n1w
CdmznhDbfhR8/9VMv4elL8TpL66O+iPp93/mCbEidm5nWgX1IxsKYZ8/a1YX
cx9kJETZoXb/hY6Uv0GI/bUrDz07TvI2EUIpXKU5aza9hzAT4uuaZeKcRbS/
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
      "]]}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->{307., Automatic},
   Method->{},
   PlotRange->{{0., 1785.}, {0, 0.9281666518154775}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic},
   ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztWX9QFNcdX27v+JECKmqtGi3TSYwzHTvTmtbUpp1O29G/OpNWZ5JmUjPW
qIjRWGUi94u7gByHKCqiYkgQG6MG44SIoETFoigMiErlxwDHDwUEhh8nx533
Y+92u+/t7rl3vN3b00uUGWa4273P+/787Hvf777HX9cmJazfsjZp07q18Su3
r92WsGndjvgVH22nITwMw8KWYhh2PR4D9xR9y35R9B/1OvgCSOD7d+ElTk55
rMltF/La0zXKNpUmNT3nm4ZwMwEkidWj9afuZqfq7+n16drc86241SOI/w6a
+/FPPGN1rZna/JguO3QWrBkh/A20+VBFv5jh5B/wMov+9vzNcvtgjSqjbLbJ
4o4giaEzNXnajXsrhxc6R663Z2ly59eY3VGkq6+23KBZmddoXUigcYykqOXQ
7Bz/4Be6gzMl5gJbhvQR0jSw1yawtMzW2bD4Xr8DDtPobxxdn9VoM6re6a7d
XaLObQmzkTCMD0avG86o80yrB+tReAdmF2KJXD2GVBEyJepCiKVQpsGxtAZe
pr1pbz9Sp0qv+KT5XOpefVEv5mJc/OFx2/5qpbFa34rE6/AxeraiKSG0A+eD
sSXug6EE9/GhCEHsr/HLzMwljt6zXx/OK53fYnbFua1dVy/tSU4ylPdpektT
s/1M3FQaa1LaSlD4LdkYKUiLZiAoW+I+0DOFCmkevhQtIgZKe1J3Gm9lp2tN
SvWuzJyz9ZFDLs8qegGUqXKawqxwsrkThivTi9RHTasGkTgzCZl6OVdGkY4/
DrTe++fd6rMdOpV3UQVpU9zXr0V9USHNy4cyfAZla2nM0efHdNCucIjFLPCM
VnVmqfa9WjnomuZ53NlQnKpakddkXUCgcbjmWbpwup1sb7t0su5w+o6+zR97
UwjWpqgvhq4oIV8hy8mHqrgIihhoLtF96NiUmOhIhJ/tq7Lqx2hRYvVwfVFz
tk7ZvVOZmpJb0iy3sJ0SgbN9Ppa0d1R/aSzw6fNBmBHC30CbD1X0iye+B81i
phK2YcMGNhGKGV8QmvGZDP9zHo07gUyl4Vh175asirGE3ZfM9MdCf6zgs9FY
Dq7jCbu/s27IKIe/12dcBNdHzPh39O9yGQAxBX/YClToIQyHY1HeMe7Dk+F+
Y/KgZeU+svQ94w5HhDBBVM4TZWFMxooCVQYvfyIq3YI8kH2koe8rGaRouA/M
y1cWrKVnFn1Gsp9JFMK49w6p9P1wIQSP07cdSQevaoqvt8eN253Mew8WCy4U
WK2L4LJm1zB++tDXdwBArfmkFIuF3zj3G/6KRmAxErEpXS/291st/d56ivPL
KJ5cUmXyPoJIRtz2gQE+VPs6wwVMBrEouH5pOZ+6hq6XvqsTIEDv6Wcppy5t
bcE8RSevAhUfm6c3d9aoWGnj4uKJ4vb1hote9hXBRhbhD3OM856EAkbIix7K
ycSZD4Y66EXu40WAOjZADPc1I1Y+UNSxHRjkyFHHPQX/TumbD8pjsBFG+stz
dEMaaF1h1SAmbbCRCs1c//oKVeT8BR3LvRdxVG66VNv93o3/9f65sXNoeVvP
6O9b74+A69Kuh4+inIQbaEXbnW4ZADCcg+BHBr/lYBiMcirhDPxm6/1RzsuS
nkFLFBqORsPTGJgfKoDj0NJz0PA8tJF4tPQrvukALZDOr/jvnRNsRaE5wNEu
QkmNv8s4NDwHDc9Dw/Fo+N0JHCCS9VeSocMXp8bfiAC/0Wi4W3iPIEe7FQ/S
3z40FTmBDM7Jk4WiANL+RoUWDNSdJmgVmGGLO5wVftrM7mc2T51JfEJOUG4u
vxoogC3uaUJawW/UUoffc/i60Dy3GrzmfTZh4XyRt2saH/okPN/nRYOLZF3l
7Qdcs4Wc+UQwl0+SAshP4Jhv229JAPnZFptTMMG5PmqcaaDmTXBhkCI43zk9
AQAbIdztStsNy/2fM0Ik8OOUIiLmSFIu+A/N0LOOY9EsjPxHRxxlbe7PStIt
Kh2wHeg5rXInJiTi4EQFw69v312HP/LwW6mIlxg4swT+gyEjSccrI4ND4VaC
XGFtyruUsu+GYoQmPyKQWVDLhI784QkgE5ginCJGj9UV6s9rDpbGNw674ImX
Qop1odNzeGrNlFmFjCLt7/fcPNW1R6ndduRyt8xOsgVb7p0OL/NtChw9w2Ne
Jir5DI+t/er5Paqte64MYQTFuhIJdgYmfFDLHIYyauSfrC0n0vKL+zAng/3W
3pFXrTFW42YPt30KwIngASeglWE84ueuvrMmnbrg5fpRQk56LAeaT2s/0xxn
IgnoJcI7KVGndYx6eBhFOtb1VRU2ZelUXSql+vSuT8unm2we+Qu+5CZnoXgx
WUG0SG/dDrbXSRERc/RiMvS8x7GXWDhQgyHYqrDcbjp0TZPVEGbhqmhA61Ia
y1NZh0VVrL+waraylhxlz46dym6lUtmfnLTZnrB5R5UqszjqoUtCuZuOBWg0
rJr7XyNVhw8bvmwC1PEzedpmwxTrcDnlsRTcLUx/J7/WvNzqZzZg/xVrOmyH
nE7a2qrPGHPWXKjef00tlf2AvYa1DoL4haOnrM/48YdV2zIlWhfvMWwbBuMb
hyr3VaqkMfK8V9vkrBFTrEyxIrmfTGfhgP2Efj90vT1Ud+reXr3GpFZrC43H
KmK77aSkqi+pp/yMGLrcZNQdn3fX7AY1dH/zV7rclJPdmIOSUPWlNhfPGnN1
RpHmaCeHLXV0F97Spl9RDLklupHSXFz6/nMpPVt3FrxaO+iM8BDmQw0nwSu7
KQxsZ6CbiR0Gdi6xDsM9rOTBC2nfqg8VX/ziQFqnVqU7vrvg8vSOwC/r0vc1
K62N+6+os+/ILIxX+qFZZo5ZCbjXC9m+ZhY5fq/9U41hWUnn40iPa/hUfb7m
I8NluEcL0b4GJPNL+4OKqs8zU/qVSTtPpuZfie51BJy3z3tlTs56MsXKFCuh
7z2gG2iaS4+0pWlUJpU6pSCz8Grs/RD2Hs9bljuHatQZZbFdtFXa24HG0ylH
tCe6pB2wSO09zoM9p3TKtLJBWN9o7HVH9zG691QohkPZe8i/WJsLa/WGb2e1
jnsiSGLk6O0vdAbDNz1POunT727AOdGuB8V655bErdYdWxIr/r33WvgwEYLd
DdsTFrv6z7Wkpfznpw3Drhi3va/0Ro7m/eybZswj5VFI7TxLXL1FrTrtiXmN
ZuIlj3OwpCZXtcnw32HMLcWLpM6DUx6b0lR29H5aclJ/UpLqc+Pxyh89nOo8
k3j8B2dl0p3ITbp5w9Rh5h4L+z/xgBGY\
\>"]]}]], "Input",
 CellChangeTimes->{{3.624026730841419*^9, 3.624026736723906*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.008333333333333333], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
Ucqh72FSegWX3SS7GPyTYVM2WCf9KPHLTkau+eVtigtIvpxk5Nzw1tw/roTO
f8mYrag6Vfcp9UvkJuNI99WQZ2K6j8tPxsKowlebN9H9b1EydFI+rUm9QPfP
pckIFm/33pZP9faKZLgrjnr1QLCb8E/G5WVmXvdLmfuMZDz/t2tgXR3Juz4Z
Ssuqxv/4bE74J6P7QfDZ9l+ET2symr4kfFDtv4bOf8l4M8Ww+Kz8bTr/JSN+
cbnouIEt5X9sCFUnP+86T/crCmyUv5u44cNBit/KbLxp+6td/Yr8rxobIUqn
Jz4sIny12PhPZ4ze0klkzzpsKCxeNaWpkexXn409139gvjCM7J8NwTHB+4fX
mX5FNiIvvRp8MmgH+X82Xt/9fXnhwV6yfzYG/XjzqV8HnQdt2Pjwu8dO5Rzl
W45s6Pionu3+sIXwZyPsyg/+nUu0Pz82Wp8fPLoigvANY2Pms2GfFilQPsVi
IzY+rs5Oh+7b2Gz0s7eSkb1B9WWOdD9uGXcN0kRk/2zc9Tl959dEpj7FxqPq
io023kz+x4bWk07FCefJ3xWx4Thu/srDtuQfStnwDjzXdnsmza9g40S3xpUj
wWP66FexAT07TeTsIfyl3wN3r9u4hsn/2fjYz/OuxSnip5GNMhN3tR0ziF6r
VL7swuopR8lfdErxm56i8WMF+b9eNn5FrtrwUUz1bJkUbGyITr96gfBTSIH6
OuHNB2sXEP4puFYRtn32ObJvtRT4zTHgZrpSPNVKQZ7m/tEd84meTgpk445u
SvrI1ItT8PRy1ymd5cz5LwVsRytjXqYR+f8UjPnlXXGknPTLLAX+zS8FmwzJ
Pi1SMFlW68vjHjqP2qRgxsSzFob9iH/HFKQNydxacY3J/1PQL2nDpX0riV+/
FNxKy7pWNYLsKSwFi3/ZGVkVULxhpWCicz/zTxtIP9kpcNEv0fs6j/wjJwX/
dhi+/fWS5otTUNTmoD5Dm+wxNwU/CkUXfrhRPpqfglfeAbWbOxP6xkUpsH/N
9hzDru+zx9IUZN3+F2y9ivrxKlJgIPtxrZER9a9WpaC6/rjxLtdoiv8pODr1
z62WR2QP9SkY/3WRxa51dN/UmIKaHU6wiyf5tKbA2y124SY54q8zBd1aNaa5
TVSf6U1BU/PNg/nHiR+ZVKj+Kznceo38j0Iq7Kxvt13zpfxAORUbfk20cmlv
69uvWirMd4+2Vh1M/XNaqVCyuPFx4TZHyv9S8SMhepDF0H9U/0nFwayACHld
uu83TMXckUtZ9VeoHwOpMHU4dX/vKzHhnwqbhZLSoYw+WKRijeRR151XFE9t
UrH/99E3S/ikr46peNfg0NXflPTPPRV/nC8vWbaA8PGT7sfr4qnqUvoelorj
rdxDJhLmfUIqZj1TL/91jUf5XyqqzF9kj/xM/VOcVLzVY58y3ZdN+V8qhs+5
NXdWCN0H5KbicM/vTDs36ufKT8V0o53WZWMoHymS8tuhsWNLJNlvqXQ/d5MN
VS3JPipSETjw3uqTXkz+l4pLeZuveIvIn9Sk4kG4Om/ZmiWEv3T+cXf9iRPm
U/6fimPHFLs0tuhS/S8V18U3Xk3Rp37JTil+99i6Z9pmk/9PxU+FjYF3x9D9
hUwa5nsP0Lgwjsn/0pC9bZxyQw3JTzkNLVcl9ao8ym/V0vBdslFdLpf0RysN
y00/B/oeJ3vVSUPpn5+xuy2ofqafhpPKu3fKedQT/mnozqrtWDCJ6jVIQ7Hb
qbjW31QfNUvDfs9kjxvd9wn/NFwr25rTMZDJ/9Mw2X3vl+7bpK+OaYhJOtQ1
04v03z0Nf8e1qJz2I7z90mAm2Xoy/yXJM0w6v9DrP3iTfbPS0LF2Ww3fiO5b
2GkYNMl2cbYP9fNx0qDBMokO8HlA9p+Gh24DLj9dxpz/0rB154nLr3cRv/lp
GF6xNNRWlanXS/m7P6Sl5T3559I03P43IOebJu2vIg3xX3Q4r3Yw+Kch7NjR
D0X7R5P9p+Go8QuzV3p0v1+fht223z5ONKH43JiGGY2vX849Q3i1puFwqO/C
8ccY+09DyE6fK3+/knx603BwflbYeAf6e5l0dKw5bum+gParkI6a/g6FY1RK
CP90hFu90OacjiX802GtVao94yr1l2ilI8l9VqHePKb+l46BCs+6rceRPuin
43tptNNY5n7UMB2Sy409j0MJD6QjX6u/JIY5n5il487tHUX3dGm/FumQXTDB
zdmG6pk26bgwu53XuY38vWM6fi4/+t+ZIUTfPR1/V25amtZM+YdfOgo6hHct
7Jn8Lx0joxQa9tgy+KfDYc9bl8d6TP6XjuUWR8QG1TSfkw72qcITv9MIL3E6
do94OuqrMtlvbjrqsvanF/qSfeenQ2FWaL+dZbReUTruf45SMmcT/dJ02PMV
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
yAU3SB/kuOg3cOgW92b6rsBF5p+csYOY+KvIRWfxDvsPBnR+V+ZiwlnN62tf
U/+GChdRCbHNSgbMfREXHJmS0QtEtB8NLu4dfDekzpipH3Lh2LgrxfsYyU+b
i53hU+pqlEm+OlxsP2jQMGw37UePiz0vw8dOb2Pqy9Lxxp0Jqgp0vzWPi+l7
pqstP0b+25CLuj3t0wZqkb0YcdEy9zkvfgDJH1zM2jdCmd9K8dKEi/nxzzzH
3CZ/ZsbFS7/ygeUSip9ruYj+PvTqtXDmfoIL84gHc9cWk//YzEVbs9IY8TuK
DzZcPPJtTrcbQfhv42LpPqXLU50o/jhy0VClGLy/he6LXLhQeRKV5swiebtL
8TBNcdO1pHjhzcWJB383CMRMfYOLAR1rhh9yZ+yfi81/Zi9tW8Tcd3BxaX3x
sr+XyB6iuAhaYT/+90fSNxYXoaKdiq/MKP4lcLHslGxUVA/hxeaiZ+fXCpMz
NE7nYtF9Sbj9IaY/RirP62H5MSKyVwEXD7zi/OP2U31azMXjb9b5R3zoew4X
ORa/pwt1mPyZi7mBJ5SLYwifPKm+xf9df+MSc5/GxbNrx1x64yl+F3DhsWFp
48ynTH2Fi269VN6MLST/Ei5mXzkcmj2G8uFSqX6qPOp3UUR4lHHRvPOYS4ka
0z/KxYZT974PcJrWF28rubDCB+3h6vT+qYoLT35uQsQfjb5xNRduw1ZfHrGf
3tPVcKG4dfx0mcPUL1fLhV+0cUPgXeofqOdiKH9nuMNf4u8lF+dnr/m8spb4
a+RiwRN7la+nSB+auBD8MHbz7CH5tHLxwWPDAHE1+csOLk7p6k1smMHc73Hx
Y3aJne1I0pduLv7enJbutJveX/RK5XX0nbpzyIm+/f/m4rk/tBpjqN9dhocy
3oSukf3p/aMcDy9OXv32OZ36KRV44JwRb3+0iPpNFXmwff/N4ksN0VPmIRfJ
Gr8XkD2o8HB6Z8zcBYOYfgEelhhFPjGeQed3DR5Yl77l2tqQP9fiYfY67xCP
4aT/2jxcDPefe34+8afDQ3tCdum0OooPejyYHDp3uUKW3pPq86TnkdJVqdb0
/ngeD6Xy02aZzaT7IkMePi67/9bek/ylkfTvf7z9co7L9G9K+Vu/b9xtZSb+
8/Dq/GatNSakP2Y8CNSWJb3VIH1Zy8ORr3N7UoppPxY8DPB2ObFGjvR7Mw83
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
j98CjFNb8jXtJ+UjMtl4cvJkfU0t5UNy2Xg0NW4j+x7pk0I2Shu+JpyrIf+g
mI3ywAen4irIvpSzcWehYfSqoUz+n43g6nah3380VsuG5kyds1viKH5oZOPn
46PjU17Q+lrZmJ7W72taJu1XWzo+tvRs50TylzrZsD0939xUnuKvXjYy37xh
J5WSvepnI3nAsK0vjhL/87Lxb67HrXMHmH6TbOT6HZMfZUvzjbKxPvR6+zdt
Wh/ZcLVc++eFM/Fvkg0DVePx812Y+l82av2dDi9qmk72n432Q8vvyX0mfiyy
we2356v8Tyb/z4Z6f3btTRmqT9lkw+u8Sj+LP/T327JhVWNZUMAh+Thm497t
B/61y2k/Ltnwn600wqof4e+eja13LH9tT11O9p+NnNLSHqtrzPk/G2GjZKZM
Y/qpg7LxTnDHf7Ap0++SjeUnl79VOEX6FZUNRQOd+EM6NJ+VjcRGWbkKbfr7
hGyE5FeNrDozuS/fYGdLz0NOF581UH9vejbi9Vp1/pNXofpfNqaxV1m/6cel
+p8UX4l17Vv/UVT/y8bJxDI9X6Z/KkfKj3+/o9fjKD7kZuNZu+oH65+Ef142
GmUt7xxuIP+VL11/Roynow7Zb0E2oiO/p6Yy9lsk1a9fkz/G96f6e0k2Zvmo
LW6aQvGtNBs2q2ZNEDwl/sqy4dy5+qrzEOb+Rar/+5+mDPxOv/dRmQ1jo2Eh
8kfV6PyfjaLq2sXem6hfuTobSycN4528SL8nVpONcYOU3JTK6T1vbTY4SkLj
jo1Uj6vPxo69qapz9pH9vsyG0qb1f0VWtN/GbOSZxS1u/k3+oSkbhVNm3XfR
Jv/VKsW7dSgvajrpd0c2Vm12u7M0i/DszIank9qmWj+6b+3ORuiHzOm6aRRP
erPho/Pv/pkBS+n8n40P647rFtqcof4/IXpf2458q7iQzv9CzMmRL3l+ppTs
X4hClxhZ16Xk7xSFcLR73RUbxtwPCXEmwelhZn/CS0WIF4c0PQVjGfsXwry5
/sWcCcSvhhBv2Zmsi0z9TUsIlRXyb+cZkP1pC6HQcGjJBCPSZx0hyndt3n1w
CdmznhDbfhR8/9VMv4elL8TpL66O+iPp93/mCbEidm5nWgX1IxsKYZ8/a1YX
cx9kJETZoXb/hY6Uv0GI/bUrDz07TvI2EUIpXKU5aza9hzAT4uuaZeKcRbS/
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
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{307., Automatic},
  Method->{},
  PlotRange->{{0., 1785.}, {0, 0.9281666518154775}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.624026876542082*^9, 3.624028022968019*^9, 
  3.624028451671727*^9, 
  3.6240295846380577`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
k3j8B2dl0p3ITbp5w9Rh5h4L+z/xgBGY\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MemoryInUse", "[", "]"}], "/", 
   RowBox[{"10", "^", "6"}]}], "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxMemoryUsed", "[", "]"}], "/", 
   RowBox[{"10", "^", "6"}]}], "//", "N"}]}], "Input"],

Cell[BoxData["408.1894`"], "Output",
 CellChangeTimes->{3.62402410274207*^9, 3.624024522692277*^9, 
  3.62402473665919*^9, 3.624025174663639*^9, 3.624025469717808*^9, 
  3.624025771521481*^9, 3.6240260082989607`*^9, 3.624026143602903*^9, 
  3.624026414896254*^9, 3.624026644892436*^9, 3.624026876564838*^9, 
  3.624028022980751*^9, 3.62402845168198*^9, 3.624029584653172*^9}],

Cell[BoxData["429.647496`"], "Output",
 CellChangeTimes->{3.62402410274207*^9, 3.624024522692277*^9, 
  3.62402473665919*^9, 3.624025174663639*^9, 3.624025469717808*^9, 
  3.624025771521481*^9, 3.6240260082989607`*^9, 3.624026143602903*^9, 
  3.624026414896254*^9, 3.624026644892436*^9, 3.624026876564838*^9, 
  3.624028022980751*^9, 3.62402845168198*^9, 3.6240295846573067`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"A", "[", "\[Nu]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Nu]", ",", 
     RowBox[{"-", "30"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.624030122476709*^9, 3.624030136638279*^9}, {
  3.6240305232642517`*^9, 3.624030524487011*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVl3c8198Xxz/mZ/IZpOy9MhKyuSeUQhHCl4w0lEKJSCUVpZJZEkJRRpEo
IXzeJElGoqyMbELInj+/v87j/nNfj3vPOa/zPOJu3lYnWHE4XDMLDvf/eH87
++zGhj6Gu77SE6utDzIRfhdhTR/LEOvZPqClD+XTQ4vBy/rYmNXR0+qb56mi
L2ssc/qYiYl2RYuGPtiYROLZx/Sxbtv1Tl51fRA6LiBIaNHHskwZpTHK+pD9
RMWQlqmPJV38uzVUUh+qaU5RYpb6GP6gzBcjLn1wC1iiXIzWw+6oXsNb/tKD
Us5nYl49utjSMbdH73L0gNLBoz2goovt7O+5JHVND5jKX3ZGXtDB/OU6Qx+b
6YFK9t2KX5XaWCIjveuygB5wZETudGHTxpYFPzhtG9CFxhGnFy4mWlhJvr3e
xRxdsDuklc8ar4m9eC6At72kC0a6tskd7RqYeerHpgCkCxNmweKH5TSwYXzH
HlGCLoQ/vZB1IHAX5jegknj3mw5EBmTTL5epYx5/Ak1exuiA5cUJmhmXOjZ7
kmPcxU4HfOcuTFkcVMNcTAJn923RgYjijy3fY1Sxg1aD+ue+a8PJdFHLxf6d
WNhg3AnNGG14SmO+tJLZiXV6FGs7mmpDQppHsoWfCiZmmH2am0MbJr0L+ljP
7MA4b+AVbN9rQYyEVIzbjBIWfc04T+qUFhRI5HjjYxWx2ngJ9QuCWpAoXcbF
x6eAyb2tkp6q0oQNv8H20/ny2Ot9Pwryz2nCQcvU18WH5bCRxmeGtwQ04bhS
354LnTLYf8THK7FFGjBvp0fyCZTGghhCfUH2GmARKhzZsSKJRb27ohM/tgti
9aKFUYgEJjRRTKQE7ALr3cIdI9Li2NCzP1udOHdBQbRr7qK1KOZzoveJ6w11
KNZ9z54dIYSdCJFXvbOmBg+WVL2sW/mxCkL47NVzarBWWmr/bYAPexZ2Ujil
RhWcBf1TWqV4MaOelbB7Aqpw4Bpyz5enY3XduSHTxjvhzOo5vh2VFKyt4e6x
VCcVwE3I4xxeUTDuW4tTn/9TgbiuvtGQOAqWv5DeNn5YBSrLbco6PCiYhRr5
hfJBFRC4rnX8Fg8F45MgVUYbqEAtBy6/6zgZS8X1Sn4XUQF5auSBcDwJm/WX
eqdesgPKN0w0308TMbpDXkzNmx1gM4UT7+skYss+7ROHs3ZAcJPPrGYeEeO6
q/73SPwOaIu1Tey3J2JfVuJ+ClzcAWHbREZ1sglYzvzJaDOVHTAsnhMyao7H
3tUKqEqlKEP2DS+S7i48lugvbMn+UBnO9u+IChfGY1KsmVUdd5VhKj0/ccck
J9Z2fdzJ46IyLMsW5ftFcmJurGrL9APKQFH+2MvynQPT+fF4p/eiEqjqtOsJ
2LFjR+U7Ewr2KsFsQkLlGcSOjXp5nVDRVYL3K477ymTZsbfCihapO5RAr6zb
2nWRDcMC927Yb1OCPTDg8eIxG+ZRPKayfVQR7Pf+jVf9xYpV8JVJKoUpQpAV
x5zpURbMYStZ7GmJAmzTyqxXMWPBhvky/UVyFSBf2OwF3y4WzEXzt1j4UwUY
Gomy6yOwYNQq+w+aYQpgcU2o5FIeDltjCdrx1UYBwN593XJjgyni9Sm+eGw7
hJKrGBS9NeaD5aI4XcJ2KPlJrGqlrjEv1d6Wd12Sh8mnFn5p/avMinxXNq8x
ebDV6mzVubfKXPVaOWpcJw9yJ2aSTnesMDdadW2aI+ShtlxM9nPAMnOb2n7b
nVR54Pa5qnvj3QKzMbEr1nRZFhKFW6QSQxeYKaYn3h8ZkgW5L9u53x5eYGZV
hcvt+S4LhmJtvYNz80zdkTqJuCxZ8G9QvbVfY565M8Prq6StLPRuH/lGez/L
LC8S+aT1QgY8fxqUyN+eZTL9/t48FCkDy9cfphnazTK/H0qlqwXIAG+74UXf
hX/M3Vt7vc33y8D+208E2zT/MXMd/oUVj0hDfr/VyZSiaab599/bvQSlAUVm
WRSFTTMb9dyUbuOkoU4Hp91kP82Ucd31wWZQCoaic8hsS1PM44b5IvhcKRAE
wpuT2lPMqvEefIKuFBC1Ly84+k4wtQ7cSf25RxKkouRq7/NOMNsEH/1zkZYE
g+EfScy348zxBdngIHZJ8HmoYig594ep8z3X/nyFBPyaHgwf8xtjlr+qDBzY
JQG52ZYSl/yHmSudUtnnOcXBKN1t4TT/MPOf5dHO4m4xaHviW+fwYYhZ6Pdo
6kyhGLBGx1/U2xhkChC3KG8cEwNb/97ajVsDTMp9ysS4lyj8OTeTMiU3wCwx
mv+1Z4soBHuw+/2u7WcW/v2qoVYiAtlOcqIfufuZ/f+l1mVsCMOa0bkLt+J+
M61d3H3n/YUgRv/GPn+t38x29ne0GboQyGg+ED7V0cu84LOWqpEtCJbbiz7v
F+llRoXEfTr/QwD2ieO0BMy7mHruZ2rubeGHRyWid2TPtDIPrw+wkNS2AJZj
pEZ8/ZP54y8F//oVL4yluneNzfxgTj2WrlqU5AWD26935ga2MJ9NzY3Zk3lg
yBp1qN9tYuoiwoXbpTQ43VFmG2L1memdEz5TY4aHUozjpUnHJ2bJWhtv418O
oGUc2CC5VTETWO7yi0SyQ9GFrozo8xVMx9aibBGMBbgFlqf1xd8zl9n8DwX+
XkCFQ3cSqlTeMktHDf5MD88ipwJ+IzN4w7za9YB4fmQa2T32kXtT/oK5Q/JF
Z87bYfRCNeZSeVcqc0a5UCYp4Tcae3Ts4aOlh8z+DzYyhXM/EfXhHu/j3iFM
D75+W3mnTyhPqfeoapo9EjG4qD9X+Ri9q9GS6Wa7g4h629ssZWpRxycB3MtL
j1DeD/mD+FttyLOK7Bn99gXax9MyIZs5jAqNQtLYrQrRUR6bRH+WBcT362Py
P2oxOhGgEMn5YQld9GVL6Kv/gE6PKM6anllFiVa79/WmY0hJ9PaHLz9w4HgT
MygXq0aTtcsWsdUccNfCtfTdtc/Ih26VqPWXE0oEcTo53TVo7tpCHR+VAAJv
0a6kpK/oUOD73ApVEpgG9+THrtShw+0Thyp2kSHQ/JrKPYcG9L0huthVmQKe
Pj1b9MO/IZGvHtbaG1wQav+6pUi3CflFNYcM/OSGJwbXYtX/NCHqHlI1TxoV
3klZWOUlfEezH/Ve1+6kQT1JlK5o2ozS/qUSxcJpMDg12Zix1IzerWXcuNRL
g7Wf5RGSWS2oSLW2vFaZDlvKIg6k2P9AY0r3bcj+dFBKc6YIEn6i3cYX0jSK
6WB8R/lr3PufqECmOd1sjg5HvNfvMNxbUVlF2ntzBQb4Hm7YF8HXhqZy959C
jgwI103Gk6rbUHCt1y7FUAaki3tVh/q1o0HfPiuRLAaU4g1CWaQ7kNgjnzOS
nxnQMsFlfLWlA1VFJLqZ9TBgvLmLdelmJzJ/0saXOc0A9pKcCl+1X2hddZ/0
gXUGCKVeDZ7q+4VE9eG1BQcPqN86gM7GdKHfWnYS1Zw8YH5WeH14dzdiabBg
q2HlgeNWE6XHpruRd7JBqecSA65olV3uSe1BhupKXt/GGGAaufeJklwvmmg4
XU1sZYDtjdwrf671ohOXnrWqlTPAzY/vSFZrLzp2umP+VCoDvE4F6brv+I0u
aOomfbzKgEDHIQHp279RHkuRibMtA24dPLjc1/0bpU16nbbezoCY3YXtqRp9
SCkn50DZEh2S1UWKnSP60FY7f0phFR0KBSb9O/T7kfGrYrkPB+hQyWVrF/+w
H51d8TNdJtOhAVeuYTvRjxbemFYpVdNgaOj+XFPSACqX9X/YrEyDmfa5lsjZ
AfSy/Tj7eAkV1uuc3h4wH0SJiSfn2mlU4CtQuvBlZRDpq12hnMnggnODF/rG
HYbQYoJQH0sbBWq3lhyilQyhQ1NqLi04Cly7slfFLmAYaU1lTTL0SDCyx2Vi
YHYEcef7l5m5cIJhwPMjBJtRhCf+iNxmzwFJ2X++KhSMombntpIFU3Y4RA3I
9jk/hp5Xh1mMibJCSVuUO27yD8rSie0cFVxBvOTWn5IHxhE6wlsLZYvIS194
r8mrcXSW5rxdxG4eST7LkorwmEAWo3hWnP80Cmr5G/vmywRyC+AXK12dQG2c
Gmw/5CZRtuMF5XGWURR+pvK34PAkumneRzP404WGnhAOob1/keF0DdfVhmYE
3w5ibs//ItcHt6UUbT+iA9drtxqxTqHmXy2Xzg4FocAEz8aWnVNoTWRPt7bx
J5RRQLt98ugUUrfLTB+uakEtdQUGi1FTyGekut++txvt2FjKEZyaQuFHLZiy
l0bRkW1PTuSITqM8pvixlHOT6O5OEEYW06j6TsW9M7nTaODYrXC3zbj8s86n
O3QexdcwzmSdnUGBv9NSvKo30Kff7yR0k2YQ46ZI1PoqDmaW7Tvqvs6gZ1lm
Y6I0VjBXStk/tf0fSgrl/Zctxg4sMQpymqP/EOVGYMp/PXhQftnQU7NtFr39
LDpwuIgAR6rOP3LYN4vqE7gOP7xNhDtdvBbj/rNI7uO3kHpzEhTOv+cMyphF
XKZrriV4MvRTHcuprbOo8KGgnUgRGWjy635POefQuePeZyudKODhaDxYdWIO
mTXfUaeFccEj3+Ek24dzSLKXg+xJ4Yaq+3dtRqrm0Ij0vNi5UG6YfqFECZyd
Q3fDusTY/nGDCPbtI1lqHv0ZY3ZtOUwFs/YLl59Yz6MAoQvCyS+pEDDDp7bj
5jzSf/LC8dE8FV6QS8aw/HkUdOqUEYsgDZqlnJ5Z9c2jiVX+XzPqNLBU13/7
gXsBZS1Xsq6a0KDBSLhaSncBFScTC4m2NDC3Xmu9776Ahl0Y7ZIuNKh16xqd
j11A70stvlsfo8E+n7IVF2wBpV/V9053o8Gn60+4vowvIE/q3RpxJxoYRl8V
VeVfRPqsf2XarWiApTrtTNyziERbZkbajGhgkKdvxO6ziKgSn0+rqNDgA1P4
sGfyIoo66D36dysNtBrXTv6sXUTxl7PGLTffU9jdFYAWFhGrWENeawEV1CfL
7mZKLqH7r7GV+FNUeLP2JIluuYRs/YKaS3ipoMwVlBt4ZQlJ3uLcd7yIG14J
OWP9mUuIu++4XZk1N2xXNPhu/mMJnX1q82NyiAsydEUG3rEsowaqn62EDxc8
c+jGhzksIwb31i3a5ykg5lHOP31rGcmxbSn0GSRD8qVkBYeCZTRYHEl1tCLD
43hnC0XKCvK+LNs1xkcCvkyDow+1VpAiS6TMhBcRHrwXubB+fAU1jza1WWME
iPrZHfetbAW9aqoOJFni4RavS7ev9ypKEki2OinHDuxSaKorcRVt8TYZaLJk
g+tqoqwmNasoVV9+QtGXFa5Y9Ujzi6+hMF7x7tuvcOAT5eJZ9n0N+TcOqvc2
L6GpFHRNZmMNXfVrWuju2czLa9HoSIV1ZJZSedRucA6dauh5ezRkHR3srecr
6p5GLhTXVQ6NDRR+d/T5hlo/+iUI3N5uG+gAPST6H0s3clAQE2uL2EDI9rGG
WuwP1KaDU939YQMdrPu2bqJXi2xNe42yhzeQN85tuOtBPhpT7M0mknDw92Rt
56vMXJSp/k3NQAwHkrl5vAFJNchdDyv10cABoTVjPftjC5IxztuTYY6D/KlH
uC+qXWjQLLWh0w0HB0UCbwfW9aF06yg72iUczHo6jX9cGkLix86dvvQcB2TO
0cA4/b9I6IbKfbN1HFhY3T6699kC0jt6+zCNlwWwp38m5cOW0BHoFv4hzwKD
1TnPJE6uoKT1e7nOh1mg/OTDl/34DVTa1XdR8gwLsLr4ueifwMGvUm00EswC
HudvZLntZgHhy8ON51+xgJIXz02hUVYwcDCI16hkgXQbwRuyb9nAWfuh60or
CxwWvH9jKYAdkhcMp0PYWIGQWmy6MskB5T8fF+/nZ4Wor2lPC1M4ofvd1HXu
HayAWoRdLffjQcQ3mRHvwArGPfpP7W8RwMB6ruPIOVYQ/VRjfJafCM6q5mni
t1ih2x/3PjOdCEH0tDNDiazQ73lZeVSWBMlTS2ov37DCb2n+05Q0EpQ3Wq56
f2aFmdRvubNbyNCdm1Gl3sUKcZIK324Hk2H9/nr40gwrmBbFi73uI4Oo5+HD
5QQ24Hf9edZOjwJg/kr4pggbjPFmTJy7TwFXBbYhE3U26EiX0/z7gwLBJIdc
iikb4CZ5pL9s4YLU0byLTS5sEM6nX7VozgVYDR7F+bHBPOcr7cuXuaA3wxnv
eI8NivIzMiyfcgHu9rtG0adssCuXSr9SzgViJynxA4VscMrQRZetmQtgzzHX
rDo2aCwuiJzs5gJXqRI5rz42mBRXWtnXxwXBbPRp1UU2+Gu51iDatanf5168
wMUOO2p8U280bupXlF8vlWQHaQV7+ZvFm/qpW0yva7PDpfiPcrsSN/WDzzL2
WrCDnUunca4vF4i7fOwgnWAHhbM3Jzj2coGhgUBaYyA75F6yhMNULnATPn/m
QdTmXH7dM1H4jQI3Vj+r/feCHUymS8RM7lLgWafIqnApO4S1jp6Q3Py/yhK/
qr4mdjDk3f/IY4gMfY/rwjOG2cGNv/Sz3h0ySNgHCu/k4YA3efzShGISGGo2
Dc7JcUDd9Yi1vXtJ4MYnl1tiwAEZ34UYSXVEeNbyw8DYgwPmHnOzi34iQGWB
Ip4YzAEkDimVBE0C9MXcbKx/yAGKn9K2V6fhQfLQTle7Cg5IPR9V1nKaE4xV
wuSEWjkgV/JhLLmKA45Te6Z6xzngbOPrt4nbOCC9Pvy6xzZO0Ktu6Lr0hg2k
TEeeXfXmhOB7WWUGGTjYVqzRKHibE+iOSw3qkRuIIhe6UpzMCQnSMvOy1Wvo
H4eEzXw9J3Rcschs37aMKiscObwV8SDvHx9f7jqDClWyd3IZ4yG0MkbqgdsU
ykpZdHrpiAdrnUL6wfJxFHX1YeHwXTxc9/Xr54gbQCHj/X2hz/BwTe/HirR/
LwpwVKVKleAh2LNme/HzNnS2Nli3sgkPdac/Nm7YfEMu2o3urqN4ELWo3+G8
wkRWmcIP1nEEuHw9/oPztYto79azWNI2AsxH7Rs5eaIC6dwqGddRIQBzR0S7
H6EJKc8R+NtNCFAscjf0lH07kjhut8ffhQB3Jm18Wxp70Zbm5+e3+BNAY5/a
64yJAbSaZ1h76AUB6usdMqmMCTQlGj3/t4wAq83pHp13p9BARI9ExA8CBLud
aei8NYO+nr1yuZadCAf3P54L9JhHCXKFikbHiKChIleuV7eGIh6x//c7kAhe
fK59Qfc20A1O69BrMURIvFcnmZOCg9MDf7s+VBBBIefdPsXdrHDE2oDk0E6E
U1rPj0hu9q1lZbjG4hQRtgzYVarWsIFWqnykuhgJzJ+e/nBbdbMuqAEfvmuS
YOpAcJT5Lw4QDaoePmdBgr2U9TC5IE5gTPDyUt1JoBtUGzOwFQ+cR45BThAJ
DrUfv3MgCw/LtW/OmsWRgDvBzUxdlQCT2rjHozkk0AvJqPXMJ8CPrU+mpbtI
cFIg78TueCLU3PojXDVLgqH3T7kT1ohQOqdt6kYhwxHH9nuV/5Eg73jYRZwU
GV5urHilvyJBevPPZ8m6ZGiOzrZRmidBvKF0o541GRzO3G0+qEGGe28urHR4
kAHvUeC+fpYMQWKVspdukKEhb9hhVwIZfCJpNls3482BtaypMjKcXHcOfveG
DBxlo8MqbZv3eOa8sv5Chrlt30SWR8hw8NdK23QvGWyuxb62niLDbjNTjqhF
MijpGqvsmySDekn8TmUaBQJlf+0f3PRHOflhpzrZTY5byHqo20AGofhddz0Q
BeJ8awOd8zZ5Dx9SSLCjwO4lPOX4Zn8rTk9FMjwpcJgZydN3hAz7Op1OC92k
QJ3266JEOTIc/1RrKPOYAjcnT6VkjpMg+LWmkMprChCBdYtEFgmSHqfPaX+i
wE9J9lUJZxIU3aQ3GnVSIDbZq/gzeTOPdn+u2+G54MAG9ZzfISJQDO0djwpz
QVx5qVz5KAHkFD+pn1HjAuu9yQLbLxPAFZcyHOTCBSYuDVOLd/BwZYxcEebH
BVE6Esee4/EQ3xKQEHOPCyZHl/gJ1zihMdPqwIv3XMBR/zE10pEDxmKYMnn1
XNCstcbkrGAHzquKuJJ+LkgYz//QtsnTBoc4C+qp3OAZ4e6m/40VcpeKt825
c4O4SNMxuaENVNsvM7N+lRsiavc++uq6jobqY78SHnCDS7TdNsHmVSTyzDNI
COOGU56xoW6pSyjCVHzAaBsVhLxtz4eOzqBs9YiyA8qbe9jHACcvpc29QGQl
zs6YCmVfLR5wtk+i9ZmW/WfOUWFwz2Nz9dJhJNC1W9LvFhX8i21jFCQHkMbn
3NWgJCokDR7yOhrSizwTw17H1FBBPPZSzK4L31FY6FxYUjcVRF5gkZhBNUr3
dnN7MbupP+Gb52eYi3pfDQvbc9BA7Kmr2XjQKzQpnkxyotFgrWKf3Er9J7Qa
Z7NwdJOzedbChgd1viMShTxwUoYGJmse/O532pHMvH/ZOT0aDApHtBRwDiD1
M8rZfpvcPaOctqGfMowMewfiAjc52SIvMChb5Q9yrj10LuQUDcK/1t/rEZpG
cckKkvEPaLBbcfYAf/8md/P0UZ+k0MAH39sUd3MJ5YfFrz7NpsFBT2NJdaEV
1ODD8fMlRgPJTLrGZ7V1xGnSE8YcpwH9jsUltwUWiKWs3qEs0QBfIaJV9JYV
xL5vu/cfBx2YXd9/1nmwgbaT1f1/wnTQdEmKEsHYoVrCOwK208HKB5vscOYA
q5F7kfc16PCLeXXVZm5zjlz4FC1rQYdTVv7Jrwh4WNLqi/F1pIMwbmlcPnST
b9fXYyvc6WAr6xKcvogHRpXgQ25fOrjzf5+ddyNAyh2tOMdgOvyztzXAVRFA
0eLwo8xwOkSEBGSkCRKhiNcnfi6eDs87bb7WnCbCno6Ix4bP6WCttfueYy4R
vqe8TIh8Q4fCVg+c+SgRXE7UJP4qo8Nv4crTEQIkGN8+mCRfS4eg+Id8goYk
CJhiSb74kw56LYYHJ11IwFEokvKxjw5UOfddBF8SxFzWTaX9pcNV79W8s5s+
KLLb/qnTCh08eutNJK+R4CWn37NsPAOUml6zal4kgVZddNoCDwP23ugzKzxG
gk/RuenGYgwwmmdryDchgZXd1+fRigyIKvlrtVuCBN1CIy+6tRhw5Njgs0v/
iHCmjz1TYQ8D5O6bHL/4gQiLGeJZAYcY4JCqv2qzORdCPA2yPzkxYCIw8Nwu
FSLQ1RxfMjwYwMw7aqrTRYDkRf9XLhcZ8P546eWw6wRQKH+Q8+oGAwanpPeY
CBM2/eNN7lIEAwpqLERS8/DQxP0nLzaDAdYv0flv5Zzg3ILP7y1gwL/OO2oc
Opww9liqQAljwFO06huRwwHs0s7vPrcxwDV1bt4ziB2ixwILeQcZYBGmclnl
FxuI5D16f3SaARWN9v9E1dhAU7epeIXIA+L8DafO129y9CHj8h26PPB85lHq
Eb81tMB3lHnFhAeo+ufTtJpWUMivq9gXax7wS66n+Uouoyfu7yuPneWB3PdX
fU1z5tG3q9s/P3rCAyfj/ts+UD+JjhiZ1Axk8QAbt0OBE+UPGiUc/7KzkAdG
3lhcRLuHEeuDJ1+/NvCAsXeGEbtsD4r8r6RuWycPaLaME2TdW5GQaGv9iWEe
sG07OPBOvxFlDvxryP/HA0Q7YYNUIybalU37trHBA2knvmS+vdht8D+e31FV

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-30, 5}, {0., 29.22491264238579}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6240301371365137`*^9, 3.6240305249430656`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixElts", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"Sqrt", "[", "3", "]"}], 
        RowBox[{"Sqrt", "[", "2", "]"}]], " ", 
       FractionBox["2", 
        RowBox[{"Sqrt", "[", "3", "]"}]], 
       RowBox[{"A", "[", "n", "]"}], 
       RowBox[{"Sqrt", "[", 
        FractionBox[
         RowBox[{"Gamma", "[", 
          RowBox[{"n1", "+", 
           RowBox[{"5", "/", "2"}]}], "]"}], 
         RowBox[{"2", 
          SuperscriptBox["\[Pi]", "3"], 
          RowBox[{"Gamma", "[", 
           RowBox[{"n1", "+", "1"}], "]"}]}]], "]"}], 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "-", 
         RowBox[{"2", " ", "n1"}], "+", 
         RowBox[{"2", " ", "n"}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"n1", "-", "n"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "n1", "-", "n"}], ")"}]}]]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n1", ",", "0", ",", "nmax"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"MatrixElts", ",", 
    RowBox[{"ReplaceAll", "[", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"Sqrt", "[", "3", "]"}], 
         RowBox[{"Sqrt", "[", "2", "]"}]], " ", 
        FractionBox["2", 
         RowBox[{"Sqrt", "[", "3", "]"}]], 
        RowBox[{"A", "[", "n", "]"}], 
        RowBox[{"Sqrt", "[", 
         FractionBox[
          RowBox[{"Gamma", "[", 
           RowBox[{"n1", "+", 
            RowBox[{"5", "/", "2"}]}], "]"}], 
          RowBox[{"2", 
           SuperscriptBox["\[Pi]", "3"], 
           RowBox[{"Gamma", "[", 
            RowBox[{"n1", "+", "1"}], "]"}]}]], "]"}], 
        FractionBox[
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"2", " ", "n1"}], "+", 
          RowBox[{"2", " ", "n"}]}], 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"n1", "-", "n"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "n1", "-", "n"}], ")"}]}]]}], "]"}], ",", 
      RowBox[{"n1", "\[Rule]", "10"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"MatrixElts", ",", 
    RowBox[{"ReplaceAll", "[", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"Sqrt", "[", "3", "]"}], 
         RowBox[{"Sqrt", "[", "2", "]"}]], " ", 
        FractionBox["2", 
         RowBox[{"Sqrt", "[", "3", "]"}]], 
        RowBox[{"A", "[", "n", "]"}], 
        RowBox[{"Sqrt", "[", 
         FractionBox[
          RowBox[{"Gamma", "[", 
           RowBox[{"n1", "+", 
            RowBox[{"5", "/", "2"}]}], "]"}], 
          RowBox[{"2", 
           SuperscriptBox["\[Pi]", "3"], 
           RowBox[{"Gamma", "[", 
            RowBox[{"n1", "+", "1"}], "]"}]}]], "]"}], 
        FractionBox[
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"2", " ", "n1"}], "+", 
          RowBox[{"2", " ", "n"}]}], 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"n1", "-", "n"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "n1", "-", "n"}], ")"}]}]]}], "]"}], ",", 
      RowBox[{"n1", "\[Rule]", "20"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Fig", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{"MatrixElts", ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"-", "10"}], ",", "0"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"Axes", "->", "False"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<|<\[Nu](00)0;00;(00)0|\[Sigma]q|n(00)0;00;(00)0>|\>\""}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"StringJoin", "[", 
          RowBox[{"\"\<n=\>\"", ",", 
           RowBox[{"ToString", "[", "n2", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n2", ",", "0", ",", "nmax"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<n=10\>\"", ",", "\"\<n=20\>\""}], "}"}]}], "]"}]}], ",", 
    
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.1996432225271036`"}], 
           RowBox[{"(*", 
            RowBox[{"a", "=", "1"}], "*)"}], ",", "Black"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.2562988229195664`"}], 
           RowBox[{"(*", 
            RowBox[{"a", "=", 
             RowBox[{"-", "1"}]}], "*)"}], ",", "Black"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "8.746100370356269`"}], 
           RowBox[{"(*", 
            RowBox[{"a", "=", ".25"}], "*)"}], ",", "Black"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.5"}], " ", 
           RowBox[{"(*", 
            RowBox[{"a", "=", "\[Infinity]"}], "*)"}], ",", "Black"}], 
          "}"}]}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/cdschillaci/Desktop/Paper with \
Tom/Mathematica/Figures/sig_dot_q_mat_elts.eps\>\"", ",", "Fig"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6240302448987417`*^9, 3.624030349002307*^9}, {
   3.624030400683324*^9, 3.624030479251855*^9}, {3.6240305447708817`*^9, 
   3.624030545066186*^9}, {3.6240306337535677`*^9, 3.624030990820175*^9}, {
   3.6240311402349577`*^9, 3.624031152555872*^9}, {3.6240311851001673`*^9, 
   3.624031185203053*^9}, {3.6240312557082653`*^9, 3.6240312966036243`*^9}, {
   3.6240313276299057`*^9, 3.624031341539912*^9}, {3.6240314452108183`*^9, 
   3.624031531996751*^9}, {3.624031611967472*^9, 3.6240316168847*^9}, {
   3.62414464905816*^9, 3.6241447144082623`*^9}, {3.6241447535623817`*^9, 
   3.624144879842821*^9}, 3.6241449517511263`*^9, {3.6241450539619293`*^9, 
   3.624145061706089*^9}, {3.624145152648879*^9, 3.6241451541712*^9}, {
   3.62414519461559*^9, 3.624145219119141*^9}, {3.6241452524022207`*^9, 
   3.624145260166246*^9}, {3.624145300517811*^9, 3.624145313678831*^9}, {
   3.6241453712612658`*^9, 3.6241453756437283`*^9}, {3.624145479357038*^9, 
   3.6241455956970053`*^9}, {3.624145654913162*^9, 3.6241457773735657`*^9}, {
   3.6241458092985764`*^9, 3.624145934167987*^9}, {3.624145965176073*^9, 
   3.624145975034306*^9}, {3.624153026478856*^9, 3.6241531052961493`*^9}, {
   3.624153135744321*^9, 3.624153300380457*^9}, {3.6241533466761217`*^9, 
   3.624153441710882*^9}, {3.624153472392406*^9, 3.6241534912769957`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVlHk41VsXx91EqBQiMg+Jkkq4lPdd6l7VRSrJDaUbokEjR0VcTZIpY4ZK
XBGSm1motVXIfAyncByO6YgiIsI5v97f+8d+9vN59nftvdd3r7XVXc7bnlgk
JCT0iB7/n19Pac/9/KlJxEunkx+VsWHbgbD5s5QmSW3el6JUwYbi3MkFNl+T
1A0OtDx4xYbcUxVUyZwmOW7AqUoibEjuPbD4wpQmmVZR+5ZUzQb/+msruDxN
UlS71+1JKxvM0lrXkkZNcrdBZIo9yoYy2wDbwAeaxEE5mNur2A0magWJYfqa
JCE54vZQcDd0CZv82vJegxSq2Ln/51s3YBUvf9UJDRJh5DUqcpQD2jOXlAZ/
qJMoRu8pIRYHXpjt6/4co04M9DSYsn/0QMWkWMjf2urEb03+6bT6Hlh6+4us
dLkaeb5sqd3I/l4I0Ff70W2vRrIO5MtLtfbCYJhLpEe7KmkxOPqMs4ULMiNa
nNviquRhSv3brCtceP/Ldl7qThWyvUBylkO4cH12aT3rtDIJ0Tt2PFy6D64r
+B/xTVUi3EBBsKpLH9yWz6o1rlEkySMxs5YVfbCyXWdqYmINyazMXCSt0A/9
5XtqFXXXkEMrmli5Xv1QGqjp57xfgUR1lNq96+oH1sXkTqkgefJY3KWqAwZg
BtplONmryeLpO2HKBQPwqO6oREabHHHue7Atfv0ghF6/87xXQo5seBC1aWPK
IPjLeupt2SJL7pUf2zmlPQTFrIk/p06sIn2XalnmOUPAsK2FgmQZougcMZpo
zAOTnCPCodXSRLFXv3jNBx7sNIj0auNLkXFGzN5c72HYHxeAWzWkyPTd8XvW
ep9gsJDURFmtJCmOtTa1Y58g4Jddc0R0BfnmfCTq3L8jYHYwcE2E3XJSsvLK
h7tRoxAsmI81w6VERjdUIYHxGbhqysG8LRLkrb7RWxWPL2BOFRqQG2Jk7dyx
rl9ujYG+Ybix34QoMW5pYBtkjIOWFnvyhJkICQV1C5efXyHT85SoQbowyTZV
P3QpbwJM9B/HzMkuIu6uJxSrL04CM8uyY8JNiGSXiKkKHL7B+ILnl+hUAba8
buW8sJ4Ca/nN8WlG89jG2zOnzZiGN9o7tz7rnEHNfH89BfId7Hjt1xklU6jt
sLxnk8oszCgchMcHJjDy7LWgyfofcEqQ5rzaahTvtdmJmYTOw+pnoN4jPYju
ThEbYxz5cI5R+St3dgBThG48PObCh2r4zaa/ewCdnsuG657mg3f7Lj9exgD6
TuifLbrKB6ZgL2t82wAGDI46ZSXwIWT/kbs/Xfpxf0O+XR+LD9T3K5NqBVz8
9uVx1glrARwi80s0E7hY1cukYg4KICfkmspafy6KPxPZXuYoACfVQCvd3Vzk
C2/1HTspgPNRklauxb2YcLTG7tMtAfQbbyi4JdqD2ku+8r6XCSCyXp8bzOTg
Z0fvgFuVAoC/DJaHJ3HwsmTfG9H3Anh419QjTp+DwinfFIbaBWDfvVsxw74b
1WFyg9C4AGqvu92syejCNJGqUjdlCkLUI9ke3l3o38pkZmhQYFlZvlVsZxcy
cx97dK6joE5IZnAPpxPFHN7UShrQ/Hfl73UynTiSulk7z4KOVx17eLqvA93a
Exeds6TjUf67xL8dqFJwI1d+HwX11Pl0K8sOfL3RVcT4MAUN/iqijYEf8c8H
zo5BpygIU7Z0PmvzEYsmn7g/PUuB9StG8XKlj7jHy35HwUUKGvkN7jYlH5CS
5dbcvUpBk59fTfMYC5NvC2K1gymIUHyqeqGchfPW0YnRoRTYlLdeXnmXhcVT
4zK8CFo/r6tzQIuF5vGx/+yIo6D5akdwq2M7FvKqjr9OoSBSYXHfJR2aH/Uf
dkijYP/LTaYyM234dGXpyo50Cpg/gkYORrWhnFdlfUA2rU/I3zHt3IZsVl1z
eg6tN+lJjNVrw9Eao/u5ubT+spElq6YVrRu2OLnm0/rVx/9hxLUiifSxkSyk
9SVh87Kurcg8fXMsoYiClX+W2hZvbkWFWwO5i0ooaJkZyLanWvDw7IMlVqUU
RN9fITxb34LrqQ1nLr6kwNZ4u1N8Ygsm7gu3YpRRIP3BveBXjxZUyjNUsC+n
oJURvbTDsAUlK6R/k6mg42Vfu15Z1IJ7OmONc2i2LRopl2cyccg745jaKzr+
kOyql4+YuNgzX+c8zW3T5p4OZ5gYWfxkPp7m2FjPd3MmTOyy+WKWRLOdYYJS
kigTtzn4H2LQrJN5Z8Q7sxkjw9sydWjOHO5JLPqtGesGpxML6PN01hlbzvQ0
oWuYd4gszVnu4fPGvk0oreHTtZe+7/qMwezLsk2YYJr3yYnOJ3tou1Ppi0bk
6TOkgc53/dqYpXNWjVi663nBDO1PtttouelwA2arDmnfKKbXn+zw9L3RgAo+
e6u4tL/PBhKUypUbsNqskidVQIFz2E/j35/XoxvV8fTDC9pvI/cDjWb1mNU6
/+Mv+r3echrO2DfUYQd1b/TfZxT4BG0N6nWqw94IudA3mRTobkpKOfm5FjmX
Ng7H0/XQ/VGofNK3Fg2dUsU3/UPBTt2mr8JJ7/Hodol3yUkUfG8xlAjXfY8y
bQsnGfdpP3wfaMm9rMEn/S7j4tEUSDacdNDpqMaMrQfTTtL1W+nd7JXnUY2B
yTltm29S4K1sHLFttgpHanfw8v0p6Don/NZargrPxxakc+l+CF99msNKf4cU
O+aPkDMUmBPmrLPRO1RxH3w14kZBhlSy3kW7tyhqmrRQZU+BQ9ni3fMDb/CH
sUSROd2Py1zPHL/p9QaX5Rmqnt1NwcVCk/tx0ZX4H4P53g/GFGgdffxCRaMS
FSymNaT1KfgoIlr/NI/g2UdpX+e1KPDNzfjplYq47do6iilFgdQ0u7VCuQKt
3PcNXxwWgI9F1pJms3JcF3blAp8tgO77PmZ9TmX4XKT0v3pMAWSaSmWIJJWi
QWZH/OUSAZj/veuqjVwRfpJKWpZ6XQAZTJncv4wKsfeP7DumXgJYptHXf8mu
AMePDew97yaAj+/8rOOj81CjxX0410IAnFUuQJRzkLtuTN1NmN6/hJ856JSN
L0L2vGyYpP9vx3hp8aRMXGez4vf6Xj4sS2kYOiCXjgrLbBuDyvjgY39Ovkb5
Iapx7Lq59H8v+TDt84qkBPS+nKref4gP6X0drw/LxSHf2ULMy5wPTzuD6tqV
w1Bqtep381V8+OA2ecFd7jYyRI0yrwkWQJxboj+hfA2j4xrtLXgL0PRFYVZb
xRPDz7l6JDUtwKMAF9EtbqGvO7dt3+1XvAD/AwTFVsc=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
2UxZVatSLdyGgx2FwXl2lIdUyz/3b+RgzdxBzj7Kbxa/8t2zhoNbSr4+OEA5
VjJH9s0yDm52eJDy/+v7xdLeaMhyUPl7UNdOytoCt13jRDioYk93MafMm7gq
xuWzsSzXQmwF5Y/s8AKnQTayZiurJSknDZ1z/PybjQuOxKcwqed37fWdXv2N
jT47Qry/UNZrd8u4Q7BxbP+R5amUZ5oO2M6+YqNWaUPZCcq1dbvYXjQ2qjTY
aa2jnFK5Nbn+HhslPqrbcaj5Po6mYBLHxoS5M5r5lI1L9RmPL7IxptkixY2y
6Evta+L/sbF6/MhjKcpNuSqGZ9zYaCsRoF1Cfc/0dJnfbQ5sZOsJKR2k7P9A
7NJWazYqRTn7cKj6kLzGrZdfxUbH4yM9spTbLw8GhqpR47OY/clUfT0L61Rj
SLHRKXW/6BLKNqdrfEt4LEwTmbMRpOpR4cQHWfV+FqqaPtnhS9Vvn1vJm9hW
Fh4K9lH9RtX3JYcMscPvWdh/SG8slOqHPXb3Cz6+YKF8hGR19SQJy7bdcFyV
wcJNzztXS1MuNwrJmI5hYf6M4OZoqr/4Sg7waC8LJz/0+UnxSLi6WI7NtGLh
8TOncvSoflWV+ZG+2YSFAYECrdZUP1vOdxD9s5SFW2iMZjeq/1VHaSmmLWO4
olbOxYLKC0u69mzL+zEscnV216by5Phvmtt52hiaD2Y3CFF5U/iVpltyZgyD
+6LTs6g82plFKzZcNIYxQULyiT1UvjzUVm7iMjH1pJW7UTfVf7dpoWfbmPj3
8Z7opk4Sei7RrF5lMxGcNclxKg+Dj9K+61sy8YiL48FWKj+fLqExVwaNopTA
GTb3CwkNUtr21UdGcf+DuN+Lqqj3FaUVnbAaxdoon+1LK6jnJTMv5siMYgxG
2yyn8r6tMXOBTt4IOt/0PVpYSoLAV61TFTdHMFjvzpfwYhJ0iMxGjwsjKH7+
CmlRSMKZgszkDOsRvOllbJz5nIQF8Zk6Gt3D6K68/NYwjYS1l7TiiKphrJ+J
dXTPoNafC5mjRwuG8W2xouQ3av1J984sTAsZxpV+Y2TUAxI2WmVaqioMo62Y
wSOvRCo/ZzJcFHcOYfF5F3dmEAnqfgUXjNYPYVTDFk5JAAk/20pvOyoNITPL
fsU5fxKsSuuqb/UP4syYoEK1DwlLz44bSUcPYq41JLc5k9A0YCsl/m4AS6qN
ioM3U+vJAceVupkDyJx8/s/pjdR8VB7dtj1+AF2XsCwOGJHwPCMg5PKhAXR8
nd45uYZab1zS+gX5/RhPuzeSoEqCRRMbp/T68XrSQ+lqPg/GLafblBT6cdHb
B+QXNg8KXoryTWYY2MJ1W11C7S9UbqisDqphoAD5cMS1hwf8HduSud4MvLCu
Wq+vlgd5mHx65HEfLukwUYxP48ExvYx4idg+JL536/sm80D5YX7Wyv/6cOBx
UqfxTR7EBH9sP27eh9mEsvXdyzxw3zBi09dKxw/u1+huvjxQfAYaf2Tp+Oxz
VNh8Ax6cOvfBuGu8Fy3SkownVvKgErbu7mnvxePXau3rlvMgoMk6hJHVi/V/
Obd1ZHnQMLOrmbmxFx0POx27Ru2v4vY4X51z78FDbnKJQ5lc6Fb+80jQpgez
3zu/W/SA2o/1HS0WXkNdzz0dJ5PEhf4Lx3rFxrsxwUO69M1FLlhl+JhLx3fj
cK6qepQ9F2bJ82z111145nf/0fxxDjgSU2KayV24Xb9s9OUwB/LiLi7VDu3C
S5LMuKRODjgti9i5YnsX7go85N9VyYH/kiR3HivuRPE+a71XtzjQY7TqdbTo
HzRPYITVanMgsUavK7ahA+uKjjHtFTkArusXXUvpwEd9vTP58zmQetXU+45e
B67+8mtL1xAb9rdvV8na346CCfqSK/LZ8DXSI6oqqw1Xr7R1YuiyIU4j8bd3
QBsWmeudzFvCBtsPZQbzLdvwMH+Nu/V8NlQLyNFtOlrRKnyZG4/BgurwD1bV
cq34QfXUpTXpLKgNXSpaF/ELX7QIj5ZKsSBBzdbl5O5f6OciaaA0OQZ2784V
L1L9hd9aiFVO38egbrrWa3fJT0x6O3r9WdQYfAsJqaofbca7djZsz24m1F9o
if1+uAkjZiMDQmNHIVFJpPuMbhPGBuIZL6dR2PNG31SO/wNFXtsubF8zCg0T
VwYdkn7gKl/biBONI9AQtMG2ueo7Pt46fYonOwLfz92UaDFsxCflKxqEwofg
WW+yaplaLS6STVHu4THAJWHOyCq/Bu0VJhdEvWCA9AavvXVmNbhafKjX35cB
gVcMrnQ6VeNrEUu1DZ19YLni25hwyhf8pNe6a8N76v/ulPAnO4UKDGCa6O48
1APXFH06mmmf8V+vbb4HxHvAgmgYd9nwGYXdXttllHZDlkzaav99n9AcvHaM
y3eDf6HJ3Ts3P+DO+XcPz8V2ggzv9/dytXLsWF3v6TzTCoHbcsXqzcpwiP1z
H8eqFdrvBpp1O71Fudu95//GtUCOqUzWvJRSPPfyWKy37C+wCLe+sFuhCFf8
/NOWL9kEHfLuQKjl4a+fQWOKITWQUzKdQ3d6imqTpXKrWr9CwOF7suIpOXhh
0cpCC8MvsPBxbd9eBRpu3HTPIar7M7U/ObWkSi0VQcTbtnpdOUimZgxLpSRj
jcGNMlksBVp3y/uDCncw/Obk9QLrIshuvVLdpJaAnzojt2nH5cFPD/ZpL4XL
eNhBS2I4iAbiXSV6LLWL2JC2dlt0USp8G1Ea11nqh07/MBvVaxLgYZi76DqP
+Pe6A4lFrhp5m/8HgjmfQA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
VLl4xg==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
C3M=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.363898, 0.618501, 0.782349], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
Fqc=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[1, 0.75, 0], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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

        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{{-1.1996432225271036`, 
         GrayLevel[0]}, {-0.2562988229195664, 
         GrayLevel[0]}, {-8.746100370356269, 
         GrayLevel[0]}, {-0.5, 
         GrayLevel[0]}}, {}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> 
     FormBox["\"|<\[Nu](00)0;00;(00)0|\[Sigma]q|n(00)0;00;(00)0>|\"", 
       TraditionalForm], PlotRange -> {{-10, 0}, {0., 1.9212896709258787`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"n=0\"", "\"n=1\"", "\"n=2\"", "\"n=3\"", "\"n=4\"", "\"n=5\"", 
       "\"n=10\"", "\"n=20\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0.75, 0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.624145473959255*^9, 3.624145534754959*^9}, {
   3.624145567742312*^9, 3.624145580981015*^9}, {3.624145656741272*^9, 
   3.624145693117034*^9}, {3.624145739872992*^9, 3.624145779192216*^9}, {
   3.624145812204965*^9, 3.624145847882513*^9}, 3.624145925894062*^9, {
   3.624153148680544*^9, 3.6241531988341217`*^9}, {3.624153232714443*^9, 
   3.624153301325539*^9}, 3.62415334938465*^9, {3.624153383811886*^9, 
   3.6241534326176577`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", 
  RowBox[{"MatrixElts", "/.", 
   RowBox[{"n", "\[Rule]", 
    RowBox[{"-", ".2"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6240302448987417`*^9, 3.624030349002307*^9}, {
  3.624030400683324*^9, 3.624030479251855*^9}, {3.6240305447708817`*^9, 
  3.624030545066186*^9}, {3.6240306337535677`*^9, 3.624030990820175*^9}, {
  3.6240311402349577`*^9, 3.624031152555872*^9}, {3.6240311851001673`*^9, 
  3.624031185203053*^9}, {3.6240312557082653`*^9, 3.6240312966036243`*^9}, {
  3.6240313276299057`*^9, 3.624031341539912*^9}, {3.6240314452108183`*^9, 
  3.624031531996751*^9}, {3.624031611967472*^9, 3.6240316168847*^9}, {
  3.62414464905816*^9, 3.6241447144082623`*^9}, {3.6241447535623817`*^9, 
  3.624144879842821*^9}, {3.6241449517511263`*^9, 3.62414495483622*^9}, {
  3.624145067229862*^9, 3.624145093959999*^9}, {3.624145273973763*^9, 
  3.624145293810549*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.9148284804069549`", ",", "0.6684333022919893`", ",", 
   "0.526651364550586`", ",", "0.4629991499155167`", ",", 
   "0.42439896028600294`", ",", "0.39753977361153303`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6241450739568357`*^9, 3.624145128179449*^9, 3.624145188933792*^9, {
   3.624145277889283*^9, 3.6241452945405416`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", "n", "]"}], 
    RowBox[{"Sqrt", "[", 
     FractionBox[
      RowBox[{"Gamma", "[", 
       RowBox[{"n1", "+", 
        RowBox[{"5", "/", "2"}]}], "]"}], 
      RowBox[{"2", 
       SuperscriptBox["\[Pi]", "3"], 
       RowBox[{"Gamma", "[", 
        RowBox[{"n1", "+", "1"}], "]"}]}]], "]"}], 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{"2", " ", "n1"}], "+", 
      RowBox[{"2", " ", "n"}]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"n1", "-", "n"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "n1", "-", "n"}], ")"}]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"n1", ",", "0", ",", "4"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SqrtBox["3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "n"}]}], ")"}]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "n"}], ")"}], " ", "n", " ", 
      SuperscriptBox["\[Pi]", 
       RowBox[{"1", "/", "4"}]], " ", 
      SqrtBox[
       FractionBox[
        RowBox[{
         RowBox[{"Gamma", "[", 
          RowBox[{"-", "n"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"PolyGamma", "[", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["1", "2"]}], "-", "n"}]}], "]"}]}], "+", 
           RowBox[{"PolyGamma", "[", 
            RowBox[{"0", ",", 
             RowBox[{"-", "n"}]}], "]"}]}], ")"}]}], 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", "n"}], "]"}]]]}]]}], ",", 
   FractionBox[
    RowBox[{
     SqrtBox[
      FractionBox["15", "2"]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"2", " ", "n"}]}], ")"}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "n"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"2", "-", "n"}], ")"}], " ", 
     SuperscriptBox["\[Pi]", 
      RowBox[{"1", "/", "4"}]], " ", 
     SqrtBox[
      FractionBox[
       RowBox[{
        RowBox[{"Gamma", "[", 
         RowBox[{"-", "n"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"PolyGamma", "[", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "2"]}], "-", "n"}]}], "]"}]}], "+", 
          RowBox[{"PolyGamma", "[", 
           RowBox[{"0", ",", 
            RowBox[{"-", "n"}]}], "]"}]}], ")"}]}], 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], "-", "n"}], "]"}]]]}]], ",", 
   FractionBox[
    RowBox[{
     SqrtBox[
      FractionBox["105", "2"]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "5"}], "+", 
       RowBox[{"2", " ", "n"}]}], ")"}]}], 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{"2", "-", "n"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"3", "-", "n"}], ")"}], " ", 
     SuperscriptBox["\[Pi]", 
      RowBox[{"1", "/", "4"}]], " ", 
     SqrtBox[
      FractionBox[
       RowBox[{
        RowBox[{"Gamma", "[", 
         RowBox[{"-", "n"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"PolyGamma", "[", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "2"]}], "-", "n"}]}], "]"}]}], "+", 
          RowBox[{"PolyGamma", "[", 
           RowBox[{"0", ",", 
            RowBox[{"-", "n"}]}], "]"}]}], ")"}]}], 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], "-", "n"}], "]"}]]]}]], ",", 
   FractionBox[
    RowBox[{"3", " ", 
     SqrtBox["35"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "7"}], "+", 
       RowBox[{"2", " ", "n"}]}], ")"}]}], 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{"3", "-", "n"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"4", "-", "n"}], ")"}], " ", 
     SuperscriptBox["\[Pi]", 
      RowBox[{"1", "/", "4"}]], " ", 
     SqrtBox[
      FractionBox[
       RowBox[{
        RowBox[{"Gamma", "[", 
         RowBox[{"-", "n"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"PolyGamma", "[", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "2"]}], "-", "n"}]}], "]"}]}], "+", 
          RowBox[{"PolyGamma", "[", 
           RowBox[{"0", ",", 
            RowBox[{"-", "n"}]}], "]"}]}], ")"}]}], 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], "-", "n"}], "]"}]]]}]], ",", 
   FractionBox[
    RowBox[{"3", " ", 
     SqrtBox[
      FractionBox["385", "2"]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "9"}], "+", 
       RowBox[{"2", " ", "n"}]}], ")"}]}], 
    RowBox[{"16", " ", 
     RowBox[{"(", 
      RowBox[{"4", "-", "n"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"5", "-", "n"}], ")"}], " ", 
     SuperscriptBox["\[Pi]", 
      RowBox[{"1", "/", "4"}]], " ", 
     SqrtBox[
      FractionBox[
       RowBox[{
        RowBox[{"Gamma", "[", 
         RowBox[{"-", "n"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"PolyGamma", "[", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "2"]}], "-", "n"}]}], "]"}]}], "+", 
          RowBox[{"PolyGamma", "[", 
           RowBox[{"0", ",", 
            RowBox[{"-", "n"}]}], "]"}]}], ")"}]}], 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], "-", "n"}], "]"}]]]}]]}], "}"}]], "Output",\

 CellChangeTimes->{3.624030625069199*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"StringJoin", "[", 
       RowBox[{"\"\<n=\>\"", ",", 
        RowBox[{"ToString", "[", "n2", "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n2", ",", "0", ",", "nmax"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<n=10\>\"", ",", "\"\<n=20\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6241533294321012`*^9, 3.624153338534889*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"n=0\"\>", ",", "\<\"n=1\"\>", ",", "\<\"n=2\"\>", 
   ",", "\<\"n=3\"\>", ",", "\<\"n=4\"\>", ",", "\<\"n=5\"\>", 
   ",", "\<\"n=10\"\>", ",", "\<\"n=20\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.62415332189707*^9, 3.62415333941323*^9}}]
}, Open  ]]
},
WindowSize->{949, 787},
WindowMargins->{{Automatic, 142}, {Automatic, -8}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 945, 29, 97, "Input"],
Cell[1506, 51, 7748, 123, 165, "Input"],
Cell[9257, 176, 3947, 98, 165, "Input"],
Cell[CellGroupData[{
Cell[13229, 278, 718, 13, 46, "Input"],
Cell[13950, 293, 5733, 82, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19720, 380, 799, 14, 46, "Input"],
Cell[20522, 396, 5811, 83, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26370, 484, 19092, 393, 1083, "Input"],
Cell[45465, 879, 2417, 37, 21, "Print"]
}, Open  ]],
Cell[47897, 919, 4323, 78, 97, "Input"],
Cell[52223, 999, 2182, 62, 97, "Input"],
Cell[CellGroupData[{
Cell[54430, 1065, 3981, 104, 266, "Input"],
Cell[58414, 1171, 947, 16, 28, "Output"]
}, Open  ]],
Cell[59376, 1190, 9062, 233, 535, "Input"],
Cell[68441, 1425, 2576, 69, 125, "Input"],
Cell[71020, 1496, 2915, 74, 132, "Input"],
Cell[CellGroupData[{
Cell[73960, 1574, 8240, 175, 335, "Input"],
Cell[82203, 1751, 1466, 23, 21, "Print"],
Cell[83672, 1776, 529, 10, 28, "Output"]
}, Open  ]],
Cell[84216, 1789, 1650, 38, 46, "Input"],
Cell[CellGroupData[{
Cell[85891, 1831, 2469, 52, 114, "Input"],
Cell[88363, 1885, 328, 6, 28, "Output"],
Cell[88694, 1893, 309, 5, 28, "Output"],
Cell[89006, 1900, 572, 11, 28, "Output"],
Cell[CellGroupData[{
Cell[89603, 1915, 987, 18, 21, "Print"],
Cell[90593, 1935, 987, 18, 21, "Print"],
Cell[91583, 1955, 981, 18, 21, "Print"],
Cell[92567, 1975, 989, 18, 21, "Print"],
Cell[93559, 1995, 987, 18, 21, "Print"],
Cell[94549, 2015, 989, 18, 21, "Print"],
Cell[95541, 2035, 987, 18, 21, "Print"],
Cell[96531, 2055, 988, 19, 21, "Print"],
Cell[97522, 2076, 990, 19, 21, "Print"],
Cell[98515, 2097, 988, 19, 21, "Print"],
Cell[99506, 2118, 981, 18, 21, "Print"],
Cell[100490, 2138, 983, 18, 21, "Print"],
Cell[101476, 2158, 983, 18, 21, "Print"],
Cell[102462, 2178, 983, 18, 21, "Print"],
Cell[103448, 2198, 981, 18, 21, "Print"],
Cell[104432, 2218, 983, 18, 21, "Print"],
Cell[105418, 2238, 983, 18, 21, "Print"],
Cell[106404, 2258, 981, 18, 21, "Print"],
Cell[107388, 2278, 980, 18, 21, "Print"],
Cell[108371, 2298, 1036, 20, 21, "Print"]
}, Open  ]],
Cell[109422, 2321, 591, 11, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110050, 2337, 1762, 32, 28, "Input"],
Cell[111815, 2371, 281, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112133, 2380, 1329, 20, 28, "Input"],
Cell[113465, 2402, 59865, 992, 243, 55295, 918, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173367, 3399, 30405, 512, 241, "Input"],
Cell[203775, 3913, 30318, 510, 210, 26819, 451, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234130, 4428, 269, 8, 46, "Input"],
Cell[234402, 4438, 375, 5, 28, "Output"],
Cell[234780, 4445, 379, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235196, 4455, 315, 8, 28, "Input"],
Cell[235514, 4465, 10750, 187, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246301, 4657, 6891, 180, 333, "Input"],
Cell[253195, 4839, 81554, 1492, 265, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334786, 6336, 900, 15, 28, "Input"],
Cell[335689, 6353, 376, 8, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336102, 6366, 767, 25, 52, "Input"],
Cell[336872, 6393, 5252, 176, 548, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342161, 6574, 503, 13, 28, "Input"],
Cell[342667, 6589, 287, 5, 28, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
